ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ld_word,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	ld_word:
  25              	.LFB141:
  26              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - Generic FAT file system module  R0.12c                             /
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** /
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2017, ChaN, all right reserved.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:Middlewares/Third_Party/FatFs/src/ff.c **** / source and binary forms, with or without modification, are permitted provided
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / that the following condition is met:
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /
  11:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  12:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  13:Middlewares/Third_Party/FatFs/src/ff.c **** /
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /----------------------------------------------------------------------------*/
  19:Middlewares/Third_Party/FatFs/src/ff.c **** 
  20:Middlewares/Third_Party/FatFs/src/ff.c **** 
  21:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
  22:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of device I/O functions */
  23:Middlewares/Third_Party/FatFs/src/ff.c **** 
  24:Middlewares/Third_Party/FatFs/src/ff.c **** 
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
  26:Middlewares/Third_Party/FatFs/src/ff.c **** 
  27:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
  28:Middlewares/Third_Party/FatFs/src/ff.c **** 
  29:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
  30:Middlewares/Third_Party/FatFs/src/ff.c **** 
  31:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 68300	/* Revision ID */
  32:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 2


  33:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
  34:Middlewares/Third_Party/FatFs/src/ff.c **** 
  35:Middlewares/Third_Party/FatFs/src/ff.c **** 
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS upper conversion tables */
  37:Middlewares/Third_Party/FatFs/src/ff.c **** 
  38:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
  39:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
  40:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
  41:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
  42:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
  43:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
  44:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
  45:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
  46:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
  47:Middlewares/Third_Party/FatFs/src/ff.c **** 
  48:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
  49:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  50:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  51:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  52:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  53:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
  54:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  55:Middlewares/Third_Party/FatFs/src/ff.c **** 
  56:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
  57:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  58:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  59:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
  60:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
  61:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
  62:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
  63:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
  64:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
  65:Middlewares/Third_Party/FatFs/src/ff.c **** 
  66:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
  67:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  68:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  69:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  70:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  71:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
  72:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  73:Middlewares/Third_Party/FatFs/src/ff.c **** 
  74:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. */
  75:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  76:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
  77:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  78:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  79:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  80:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  81:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  82:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  83:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  84:Middlewares/Third_Party/FatFs/src/ff.c **** 
  85:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic */
  86:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  87:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  88:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  89:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 3


  90:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  91:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  92:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  93:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  94:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  95:Middlewares/Third_Party/FatFs/src/ff.c **** 
  96:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek */
  97:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  98:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  99:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 100:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 101:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 102:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 103:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 104:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 105:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 106:Middlewares/Third_Party/FatFs/src/ff.c **** 
 107:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 771	/* KBL */
 108:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 109:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 110:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 111:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 112:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 113:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 114:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 115:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 116:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 117:Middlewares/Third_Party/FatFs/src/ff.c **** 
 118:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic */
 119:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 120:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F, \
 121:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 122:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 123:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 124:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 126:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 127:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Latin 1 */
 130:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 131:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41, \
 132:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 134:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 136:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 137:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 138:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 */
 141:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F, \
 143:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 144:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
 145:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 146:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 4


 147:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 148:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
 149:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
 150:Middlewares/Third_Party/FatFs/src/ff.c **** 
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic */
 152:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F, \
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 156:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 157:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 158:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 159:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 160:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 161:Middlewares/Third_Party/FatFs/src/ff.c **** 
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish */
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F, \
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 167:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 168:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 169:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 170:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 171:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 172:Middlewares/Third_Party/FatFs/src/ff.c **** 
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 860	/* Portuguese */
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F, \
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 178:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 179:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 180:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 181:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 182:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 183:Middlewares/Third_Party/FatFs/src/ff.c **** 
 184:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 861	/* Icelandic */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 186:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F, \
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 188:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 189:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 193:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 198:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 199:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 200:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 201:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 202:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 203:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 5


 204:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 205:Middlewares/Third_Party/FatFs/src/ff.c **** 
 206:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 863	/* Canadian-French */
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F, \
 209:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 210:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 211:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 213:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 214:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 215:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 216:Middlewares/Third_Party/FatFs/src/ff.c **** 
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 864	/* Arabic */
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 220:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 221:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 223:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 224:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 225:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 226:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 227:Middlewares/Third_Party/FatFs/src/ff.c **** 
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 865	/* Nordic */
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 230:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 231:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 232:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 233:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 238:Middlewares/Third_Party/FatFs/src/ff.c **** 
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian */
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 241:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 245:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 246:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 247:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 
 250:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 869	/* Greek 2 */
 251:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 253:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 254:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
 259:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 260:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 6


 261:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 262:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 263:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot enable LFN without valid code page.
 264:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 265:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 266:Middlewares/Third_Party/FatFs/src/ff.c **** 
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 
 270:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 276:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 
 278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S != 0	/* Code page is DBCS */
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 283:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 284:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 
 286:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 290:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 
 292:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** 
 297:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 
 300:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file attribute bits for internal use */
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #define	AM_VOL		0x08	/* Volume label */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_LFN		0x0F	/* LFN entry */
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_MASK		0x3F	/* Mask of defined bits */
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 
 306:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file access control and file status flags for internal use */
 307:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_MODIFIED	0x40	/* File has been modified */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
 310:Middlewares/Third_Party/FatFs/src/ff.c **** 
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 
 312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags in fn[] */
 313:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of the name status byte */
 314:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 7


 318:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 319:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 320:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NOLFN	0x40	/* Do not find LFN */
 321:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NONAME	0x80	/* Not followed */
 322:Middlewares/Third_Party/FatFs/src/ff.c **** 
 323:Middlewares/Third_Party/FatFs/src/ff.c **** 
 324:Middlewares/Third_Party/FatFs/src/ff.c **** /* Limits and boundaries */
 325:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
 326:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
 327:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but correct for real DOS/Windo
 328:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but correct for real DOS/Wind
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
 331:Middlewares/Third_Party/FatFs/src/ff.c **** 
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 
 333:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the FAT structure as simple byte array instead of structure member
 334:Middlewares/Third_Party/FatFs/src/ff.c **** / because the C structure is not binary compatible between different platforms */
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8-byte) */
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
 339:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
 340:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
 341:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
 342:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT12/16 [entry] (WORD) */
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
 346:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size for int13h [sector] (WORD) */
 347:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
 348:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
 349:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres			37		/* Error flag (BYTE) */
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
 353:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 354:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 355:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type string (8-byte) */
 356:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode			62		/* Boot code (448-byte) */
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (WORD) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 360:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 361:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer32			42		/* FAT32: File system version (WORD) */
 362:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 363:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 367:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 368:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 369:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 370:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* FAT32: File system type string (8-byte) */
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** 
 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 374:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 8


 375:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
 376:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 377:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVerEx			104		/* exFAT: File system version (WORD) */
 383:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (BYTE) */
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ActFatEx		107		/* exFAT: Active FAT flags (BYTE) */
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 386:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 388:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 389:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 390:Middlewares/Third_Party/FatFs/src/ff.c **** #define	BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
 392:Middlewares/Third_Party/FatFs/src/ff.c **** 
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11-byte) */
 394:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (BYTE) */
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (BYTE) */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (DWORD) */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_ModTime			22		/* Modified time (DWORD) */
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 402:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (DWORD) */
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN: Entry type (BYTE) */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 408:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 413:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 416:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 417:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_GenFlags		33		/* exFAT: General secondary flags (WORD) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 426:Middlewares/Third_Party/FatFs/src/ff.c **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 427:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** 
 430:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZDIRE				32		/* Size of a directory entry */
 431:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 9


 432:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 433:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 434:Middlewares/Third_Party/FatFs/src/ff.c **** 
 435:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** 
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StHead			1		/* MBR PTE: Start head */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_System			4		/* MBR PTE: System ID */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdHead			5		/* MBR PTE: End head */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdSec			6		/* MBR PTE: End sector */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** 
 453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Post process after fatal error on file operation */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 456:Middlewares/Third_Party/FatFs/src/ff.c **** 
 457:Middlewares/Third_Party/FatFs/src/ff.c **** 
 458:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 469:Middlewares/Third_Party/FatFs/src/ff.c **** 
 470:Middlewares/Third_Party/FatFs/src/ff.c **** 
 471:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of volume - partition conversion */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
 473:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is bound to the same physical drive number */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 479:Middlewares/Third_Party/FatFs/src/ff.c **** 
 480:Middlewares/Third_Party/FatFs/src/ff.c **** 
 481:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
 487:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 10


 489:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 490:Middlewares/Third_Party/FatFs/src/ff.c **** 
 491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 492:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 495:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 496:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 497:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 498:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 499:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 501:Middlewares/Third_Party/FatFs/src/ff.c **** 
 502:Middlewares/Third_Party/FatFs/src/ff.c **** 
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock controls */
 504:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 505:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 506:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 508:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 509:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 510:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 513:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 514:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 515:Middlewares/Third_Party/FatFs/src/ff.c **** 
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** 
 518:Middlewares/Third_Party/FatFs/src/ff.c **** 
 519:Middlewares/Third_Party/FatFs/src/ff.c **** 
 520:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 521:Middlewares/Third_Party/FatFs/src/ff.c **** 
 522:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Work Area
 523:Middlewares/Third_Party/FatFs/src/ff.c **** 
 524:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 526:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Variables defined here without initial value shall be guaranteed
 527:Middlewares/Third_Party/FatFs/src/ff.c **** /  zero/null at start-up. If not, the linker option or start-up routine is
 528:Middlewares/Third_Party/FatFs/src/ff.c **** /  not compliance with C standard. */
 529:Middlewares/Third_Party/FatFs/src/ff.c **** 
 530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 10
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 533:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 534:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
 537:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 539:Middlewares/Third_Party/FatFs/src/ff.c **** 
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 541:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 543:Middlewares/Third_Party/FatFs/src/ff.c **** 
 544:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0		/* Non-LFN configuration */
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 11


 546:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 547:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 548:Middlewares/Third_Party/FatFs/src/ff.c **** 
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #else					/* LFN configuration */
 550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 551:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN value
 552:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 553:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1		/* LFN enabled with static working buffer */
 556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 557:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE	DirBuf[MAXDIRB(_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 558:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 559:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];	/* LFN enabled with static working buffer */
 560:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
 561:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 562:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1]; BYTE dbuf[MAXDIRB(_MAX_LFN)];
 567:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 569:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1];
 571:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 572:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 574:Middlewares/Third_Party/FatFs/src/ff.c **** 
 575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 577:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 578:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2 + MAXDIRB(_MAX_LFN)); if (!lfn) LEAVE_FF
 579:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 580:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 581:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH_C
 583:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 586:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 587:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 
 589:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* else _USE_LFN == 0 */
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 592:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 593:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for SBCS extended characters */
 594:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 595:Middlewares/Third_Party/FatFs/src/ff.c **** 
 596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 597:Middlewares/Third_Party/FatFs/src/ff.c **** 
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 601:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 602:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 12


 603:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
 604:Middlewares/Third_Party/FatFs/src/ff.c **** 
 605:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 
 608:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 609:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load/Store multi-byte word in the FAT structure                       */
 610:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 
 612:Middlewares/Third_Party/FatFs/src/ff.c **** static
 613:Middlewares/Third_Party/FatFs/src/ff.c **** WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 614:Middlewares/Third_Party/FatFs/src/ff.c **** {
  27              		.loc 1 614 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 615:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD rv;
 616:Middlewares/Third_Party/FatFs/src/ff.c **** 
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[1];
  33              		.loc 1 617 0
  34 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  35              	.LVL1:
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  36              		.loc 1 618 0
  37 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  38              	.LVL2:
 619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 620:Middlewares/Third_Party/FatFs/src/ff.c **** }
  39              		.loc 1 620 0
  40 0004 40EA0220 		orr	r0, r0, r2, lsl #8
  41              	.LVL3:
  42 0008 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE141:
  46              		.section	.text.ld_dword,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv5-sp-d16
  53              	ld_dword:
  54              	.LFB142:
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** static
 623:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 624:Middlewares/Third_Party/FatFs/src/ff.c **** {
  55              		.loc 1 624 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL4:
 625:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rv;
 626:Middlewares/Third_Party/FatFs/src/ff.c **** 
 627:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[3];
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 13


  61              		.loc 1 627 0
  62 0000 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
  63              	.LVL5:
 628:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
  64              		.loc 1 628 0
  65 0002 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  66 0004 43EA0222 		orr	r2, r3, r2, lsl #8
  67              	.LVL6:
 629:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
  68              		.loc 1 629 0
  69 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  70 000a 43EA0223 		orr	r3, r3, r2, lsl #8
  71              	.LVL7:
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  72              		.loc 1 630 0
  73 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  74              	.LVL8:
 631:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 632:Middlewares/Third_Party/FatFs/src/ff.c **** }
  75              		.loc 1 632 0
  76 0010 40EA0320 		orr	r0, r0, r3, lsl #8
  77              	.LVL9:
  78 0014 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE142:
  82              		.section	.text.st_word,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv5-sp-d16
  89              	st_word:
  90              	.LFB143:
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 
 634:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 635:Middlewares/Third_Party/FatFs/src/ff.c **** static
 636:Middlewares/Third_Party/FatFs/src/ff.c **** QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 637:Middlewares/Third_Party/FatFs/src/ff.c **** {
 638:Middlewares/Third_Party/FatFs/src/ff.c **** 	QWORD rv;
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[7];
 641:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[6];
 642:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[5];
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[4];
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[3];
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 650:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 651:Middlewares/Third_Party/FatFs/src/ff.c **** 
 652:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 653:Middlewares/Third_Party/FatFs/src/ff.c **** static
 654:Middlewares/Third_Party/FatFs/src/ff.c **** void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 655:Middlewares/Third_Party/FatFs/src/ff.c **** {
  91              		.loc 1 655 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 14


  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.LVL10:
 656:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
  97              		.loc 1 656 0
  98 0000 0170     		strb	r1, [r0]
  99              	.LVL11:
 657:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 100              		.loc 1 657 0
 101 0002 090A     		lsrs	r1, r1, #8
 102              	.LVL12:
 103 0004 4170     		strb	r1, [r0, #1]
 104 0006 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE143:
 108              		.section	.text.st_dword,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv5-sp-d16
 115              	st_dword:
 116              	.LFB144:
 658:Middlewares/Third_Party/FatFs/src/ff.c **** }
 659:Middlewares/Third_Party/FatFs/src/ff.c **** 
 660:Middlewares/Third_Party/FatFs/src/ff.c **** static
 661:Middlewares/Third_Party/FatFs/src/ff.c **** void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 662:Middlewares/Third_Party/FatFs/src/ff.c **** {
 117              		.loc 1 662 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.LVL13:
 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 123              		.loc 1 663 0
 124 0000 0170     		strb	r1, [r0]
 125              	.LVL14:
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 126              		.loc 1 664 0
 127 0002 C1F30723 		ubfx	r3, r1, #8, #8
 128 0006 4370     		strb	r3, [r0, #1]
 129              	.LVL15:
 665:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 130              		.loc 1 665 0
 131 0008 C1F30743 		ubfx	r3, r1, #16, #8
 132 000c 8370     		strb	r3, [r0, #2]
 133              	.LVL16:
 666:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 134              		.loc 1 666 0
 135 000e 090E     		lsrs	r1, r1, #24
 136              	.LVL17:
 137 0010 C170     		strb	r1, [r0, #3]
 138 0012 7047     		bx	lr
 139              		.cfi_endproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 15


 140              	.LFE144:
 142              		.section	.text.mem_cpy,"ax",%progbits
 143              		.align	1
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv5-sp-d16
 149              	mem_cpy:
 150              	.LFB145:
 667:Middlewares/Third_Party/FatFs/src/ff.c **** }
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 670:Middlewares/Third_Party/FatFs/src/ff.c **** static
 671:Middlewares/Third_Party/FatFs/src/ff.c **** void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 672:Middlewares/Third_Party/FatFs/src/ff.c **** {
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 681:Middlewares/Third_Party/FatFs/src/ff.c **** }
 682:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 683:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
 684:Middlewares/Third_Party/FatFs/src/ff.c **** 
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 688:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 
 691:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 692:Middlewares/Third_Party/FatFs/src/ff.c **** static
 693:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
 151              		.loc 1 693 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156              	.LVL18:
 694:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cnt) {
 157              		.loc 1 697 0
 158 0000 1346     		mov	r3, r2
 159 0002 2AB1     		cbz	r2, .L5
 160              	.LVL19:
 161              	.L7:
 698:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 			*d++ = *s++;
 162              		.loc 1 699 0 discriminator 1
 163 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 164 0006 0270     		strb	r2, [r0]
 165              	.LVL20:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 16


 166 0008 0130     		adds	r0, r0, #1
 167              	.LVL21:
 168 000a 0131     		adds	r1, r1, #1
 169              	.LVL22:
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (--cnt);
 170              		.loc 1 700 0 discriminator 1
 171 000c 013B     		subs	r3, r3, #1
 172              	.LVL23:
 173 000e F9D1     		bne	.L7
 174              	.L5:
 175 0010 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE145:
 179              		.section	.text.mem_set,"ax",%progbits
 180              		.align	1
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv5-sp-d16
 186              	mem_set:
 187              	.LFB146:
 701:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 702:Middlewares/Third_Party/FatFs/src/ff.c **** }
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 
 704:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory block */
 705:Middlewares/Third_Party/FatFs/src/ff.c **** static
 706:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
 188              		.loc 1 706 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193              	.LVL24:
 194              	.L9:
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
 195              		.loc 1 710 0 discriminator 1
 196 0000 0170     		strb	r1, [r0]
 197              	.LVL25:
 198 0002 0130     		adds	r0, r0, #1
 199              	.LVL26:
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt);
 200              		.loc 1 711 0 discriminator 1
 201 0004 013A     		subs	r2, r2, #1
 202              	.LVL27:
 203 0006 FBD1     		bne	.L9
 712:Middlewares/Third_Party/FatFs/src/ff.c **** }
 204              		.loc 1 712 0
 205 0008 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE146:
 209              		.section	.text.mem_cmp,"ax",%progbits
 210              		.align	1
 211              		.syntax unified
 212              		.thumb
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 17


 213              		.thumb_func
 214              		.fpu fpv5-sp-d16
 216              	mem_cmp:
 217              	.LFB147:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 
 714:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory block */
 715:Middlewares/Third_Party/FatFs/src/ff.c **** static
 716:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {	/* ZR:same, NZ:different */
 218              		.loc 1 716 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223              	.LVL28:
 224 0000 30B4     		push	{r4, r5}
 225              	.LCFI0:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 4, -8
 228              		.cfi_offset 5, -4
 229              	.LVL29:
 230              	.L12:
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 		r = *d++ - *s++;
 231              		.loc 1 721 0 discriminator 2
 232 0002 451C     		adds	r5, r0, #1
 233              	.LVL30:
 234 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 235              	.LVL31:
 236 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 237 0008 1B1A     		subs	r3, r3, r0
 238              	.LVL32:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 239              		.loc 1 722 0 discriminator 2
 240 000a 013A     		subs	r2, r2, #1
 241              	.LVL33:
 242 000c 04D0     		beq	.L10
 243 000e 4C1C     		adds	r4, r1, #1
 244              	.LVL34:
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 245              		.loc 1 721 0 discriminator 1
 246 0010 2846     		mov	r0, r5
 247 0012 2146     		mov	r1, r4
 248              		.loc 1 722 0 discriminator 1
 249 0014 002B     		cmp	r3, #0
 250 0016 F4D0     		beq	.L12
 251              	.LVL35:
 252              	.L10:
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 725:Middlewares/Third_Party/FatFs/src/ff.c **** }
 253              		.loc 1 725 0
 254 0018 1846     		mov	r0, r3
 255 001a 30BC     		pop	{r4, r5}
 256              	.LCFI1:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 18


 257              		.cfi_restore 5
 258              		.cfi_restore 4
 259              		.cfi_def_cfa_offset 0
 260              	.LVL36:
 261 001c 7047     		bx	lr
 262              		.cfi_endproc
 263              	.LFE147:
 265              		.section	.text.chk_chr,"ax",%progbits
 266              		.align	1
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu fpv5-sp-d16
 272              	chk_chr:
 273              	.LFB148:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** 
 727:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 728:Middlewares/Third_Party/FatFs/src/ff.c **** static
 729:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {	/* NZ:contained, ZR:not contained */
 274              		.loc 1 729 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279              	.LVL37:
 730:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 280              		.loc 1 730 0
 281 0000 00E0     		b	.L15
 282              	.L17:
 283              		.loc 1 730 0 is_stmt 0 discriminator 3
 284 0002 0130     		adds	r0, r0, #1
 285              	.LVL38:
 286              	.L15:
 287              		.loc 1 730 0 discriminator 1
 288 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 289 0006 0BB1     		cbz	r3, .L16
 290              		.loc 1 730 0 discriminator 2
 291 0008 8B42     		cmp	r3, r1
 292 000a FAD1     		bne	.L17
 293              	.L16:
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 732:Middlewares/Third_Party/FatFs/src/ff.c **** }
 294              		.loc 1 732 0 is_stmt 1
 295 000c 1846     		mov	r0, r3
 296              	.LVL39:
 297 000e 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE148:
 301              		.section	.text.chk_lock,"ax",%progbits
 302              		.align	1
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv5-sp-d16
 308              	chk_lock:
 309              	.LFB151:
 733:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 19


 734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 738:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 739:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 740:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 741:Middlewares/Third_Party/FatFs/src/ff.c **** static
 742:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 744:Middlewares/Third_Party/FatFs/src/ff.c **** )
 745:Middlewares/Third_Party/FatFs/src/ff.c **** {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 747:Middlewares/Third_Party/FatFs/src/ff.c **** }
 748:Middlewares/Third_Party/FatFs/src/ff.c **** 
 749:Middlewares/Third_Party/FatFs/src/ff.c **** 
 750:Middlewares/Third_Party/FatFs/src/ff.c **** static
 751:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 752:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 753:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** )
 755:Middlewares/Third_Party/FatFs/src/ff.c **** {
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 759:Middlewares/Third_Party/FatFs/src/ff.c **** }
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 
 761:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 762:Middlewares/Third_Party/FatFs/src/ff.c **** 
 763:Middlewares/Third_Party/FatFs/src/ff.c **** 
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 766:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 767:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** 
 770:Middlewares/Third_Party/FatFs/src/ff.c **** static
 771:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 772:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 773:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 774:Middlewares/Third_Party/FatFs/src/ff.c **** )
 775:Middlewares/Third_Party/FatFs/src/ff.c **** {
 310              		.loc 1 775 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL40:
 316 0000 30B4     		push	{r4, r5}
 317              	.LCFI2:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 5, -4
 321              	.LVL41:
 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
 777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 20


 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 322              		.loc 1 779 0
 323 0002 0025     		movs	r5, #0
 324 0004 2B46     		mov	r3, r5
 325 0006 01E0     		b	.L19
 326              	.LVL42:
 327              	.L25:
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 328              		.loc 1 785 0
 329 0008 0125     		movs	r5, #1
 330              	.LVL43:
 331              	.L20:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 332              		.loc 1 779 0 discriminator 2
 333 000a 0133     		adds	r3, r3, #1
 334              	.LVL44:
 335              	.L19:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 336              		.loc 1 779 0 is_stmt 0 discriminator 1
 337 000c 012B     		cmp	r3, #1
 338 000e 15D8     		bhi	.L21
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 339              		.loc 1 780 0 is_stmt 1
 340 0010 1A01     		lsls	r2, r3, #4
 341 0012 174C     		ldr	r4, .L34
 342 0014 A258     		ldr	r2, [r4, r2]
 343 0016 002A     		cmp	r2, #0
 344 0018 F6D0     		beq	.L25
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 345              		.loc 1 781 0
 346 001a 0468     		ldr	r4, [r0]
 347 001c A242     		cmp	r2, r4
 348 001e F4D1     		bne	.L20
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 349              		.loc 1 782 0 discriminator 1
 350 0020 134A     		ldr	r2, .L34
 351 0022 02EB0312 		add	r2, r2, r3, lsl #4
 352 0026 5468     		ldr	r4, [r2, #4]
 353 0028 8268     		ldr	r2, [r0, #8]
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 354              		.loc 1 781 0 discriminator 1
 355 002a 9442     		cmp	r4, r2
 356 002c EDD1     		bne	.L20
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 357              		.loc 1 783 0
 358 002e 104A     		ldr	r2, .L34
 359 0030 02EB0312 		add	r2, r2, r3, lsl #4
 360 0034 9468     		ldr	r4, [r2, #8]
 361 0036 4269     		ldr	r2, [r0, #20]
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 362              		.loc 1 782 0
 363 0038 9442     		cmp	r4, r2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 21


 364 003a E6D1     		bne	.L20
 365              	.L21:
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {	/* The object is not opened */
 366              		.loc 1 788 0
 367 003c 022B     		cmp	r3, #2
 368 003e 03D0     		beq	.L30
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 793:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 369              		.loc 1 793 0
 370 0040 59B1     		cbz	r1, .L31
 371 0042 1020     		movs	r0, #16
 372              	.LVL45:
 373              	.L24:
 794:Middlewares/Third_Party/FatFs/src/ff.c **** }
 374              		.loc 1 794 0
 375 0044 30BC     		pop	{r4, r5}
 376              	.LCFI3:
 377              		.cfi_remember_state
 378              		.cfi_restore 5
 379              		.cfi_restore 4
 380              		.cfi_def_cfa_offset 0
 381 0046 7047     		bx	lr
 382              	.LVL46:
 383              	.L30:
 384              	.LCFI4:
 385              		.cfi_restore_state
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 386              		.loc 1 789 0
 387 0048 0229     		cmp	r1, #2
 388 004a 08BF     		it	eq
 389 004c 45F00105 		orreq	r5, r5, #1
 390              	.LVL47:
 391 0050 0DB9     		cbnz	r5, .L32
 392 0052 1220     		movs	r0, #18
 393              	.LVL48:
 394 0054 F6E7     		b	.L24
 395              	.LVL49:
 396              	.L32:
 397 0056 0020     		movs	r0, #0
 398              	.LVL50:
 399 0058 F4E7     		b	.L24
 400              	.LVL51:
 401              	.L31:
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 402              		.loc 1 793 0 discriminator 2
 403 005a 054A     		ldr	r2, .L34
 404 005c 02EB0313 		add	r3, r2, r3, lsl #4
 405              	.LVL52:
 406 0060 9B89     		ldrh	r3, [r3, #12]
 407 0062 B3F5807F 		cmp	r3, #256
 408 0066 01D0     		beq	.L33
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 22


 409              		.loc 1 793 0 is_stmt 0
 410 0068 0020     		movs	r0, #0
 411              	.LVL53:
 412 006a EBE7     		b	.L24
 413              	.LVL54:
 414              	.L33:
 415 006c 1020     		movs	r0, #16
 416              	.LVL55:
 417 006e E9E7     		b	.L24
 418              	.L35:
 419              		.align	2
 420              	.L34:
 421 0070 00000000 		.word	.LANCHOR0
 422              		.cfi_endproc
 423              	.LFE151:
 425              		.section	.text.enq_lock,"ax",%progbits
 426              		.align	1
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu fpv5-sp-d16
 432              	enq_lock:
 433              	.LFB152:
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 797:Middlewares/Third_Party/FatFs/src/ff.c **** static
 798:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 799:Middlewares/Third_Party/FatFs/src/ff.c **** {
 434              		.loc 1 799 0 is_stmt 1
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439              	.LVL56:
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 801:Middlewares/Third_Party/FatFs/src/ff.c **** 
 802:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 440              		.loc 1 802 0
 441 0000 0020     		movs	r0, #0
 442 0002 00E0     		b	.L37
 443              	.LVL57:
 444              	.L39:
 445              		.loc 1 802 0 is_stmt 0 discriminator 4
 446 0004 0130     		adds	r0, r0, #1
 447              	.LVL58:
 448              	.L37:
 449              		.loc 1 802 0 discriminator 1
 450 0006 0128     		cmp	r0, #1
 451 0008 04D8     		bhi	.L38
 452              		.loc 1 802 0 discriminator 3
 453 000a 0301     		lsls	r3, r0, #4
 454 000c 034A     		ldr	r2, .L40
 455 000e D358     		ldr	r3, [r2, r3]
 456 0010 002B     		cmp	r3, #0
 457 0012 F7D1     		bne	.L39
 458              	.L38:
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 23


 804:Middlewares/Third_Party/FatFs/src/ff.c **** }
 459              		.loc 1 804 0 is_stmt 1
 460 0014 0238     		subs	r0, r0, #2
 461              	.LVL59:
 462 0016 18BF     		it	ne
 463 0018 0120     		movne	r0, #1
 464              	.LVL60:
 465 001a 7047     		bx	lr
 466              	.L41:
 467              		.align	2
 468              	.L40:
 469 001c 00000000 		.word	.LANCHOR0
 470              		.cfi_endproc
 471              	.LFE152:
 473              		.section	.text.inc_lock,"ax",%progbits
 474              		.align	1
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu fpv5-sp-d16
 480              	inc_lock:
 481              	.LFB153:
 805:Middlewares/Third_Party/FatFs/src/ff.c **** 
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 
 807:Middlewares/Third_Party/FatFs/src/ff.c **** static
 808:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** )
 812:Middlewares/Third_Party/FatFs/src/ff.c **** {
 482              		.loc 1 812 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487              	.LVL61:
 488 0000 70B4     		push	{r4, r5, r6}
 489              	.LCFI5:
 490              		.cfi_def_cfa_offset 12
 491              		.cfi_offset 4, -12
 492              		.cfi_offset 5, -8
 493              		.cfi_offset 6, -4
 494              	.LVL62:
 813:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 495              		.loc 1 816 0
 496 0002 0023     		movs	r3, #0
 497 0004 00E0     		b	.L43
 498              	.LVL63:
 499              	.L44:
 500              		.loc 1 816 0 is_stmt 0 discriminator 2
 501 0006 0133     		adds	r3, r3, #1
 502              	.LVL64:
 503              	.L43:
 504              		.loc 1 816 0 discriminator 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 24


 505 0008 012B     		cmp	r3, #1
 506 000a 13D8     		bhi	.L45
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 507              		.loc 1 817 0 is_stmt 1
 508 000c 1A01     		lsls	r2, r3, #4
 509 000e 244C     		ldr	r4, .L60
 510 0010 A458     		ldr	r4, [r4, r2]
 511 0012 0268     		ldr	r2, [r0]
 512 0014 9442     		cmp	r4, r2
 513 0016 F6D1     		bne	.L44
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 514              		.loc 1 818 0 discriminator 1
 515 0018 214A     		ldr	r2, .L60
 516 001a 02EB0312 		add	r2, r2, r3, lsl #4
 517 001e 5468     		ldr	r4, [r2, #4]
 518 0020 8268     		ldr	r2, [r0, #8]
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 519              		.loc 1 817 0 discriminator 1
 520 0022 9442     		cmp	r4, r2
 521 0024 EFD1     		bne	.L44
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].ofs == dp->dptr) break;
 522              		.loc 1 819 0
 523 0026 1E4A     		ldr	r2, .L60
 524 0028 02EB0312 		add	r2, r2, r3, lsl #4
 525 002c 9468     		ldr	r4, [r2, #8]
 526 002e 4269     		ldr	r2, [r0, #20]
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 527              		.loc 1 818 0
 528 0030 9442     		cmp	r4, r2
 529 0032 E8D1     		bne	.L44
 530              	.L45:
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 531              		.loc 1 822 0
 532 0034 022B     		cmp	r3, #2
 533 0036 29D0     		beq	.L59
 534              	.LVL65:
 535              	.L48:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 829:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 830:Middlewares/Third_Party/FatFs/src/ff.c **** 
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 536              		.loc 1 831 0
 537 0038 21B1     		cbz	r1, .L52
 538              		.loc 1 831 0 is_stmt 0 discriminator 1
 539 003a 194A     		ldr	r2, .L60
 540 003c 02EB0312 		add	r2, r2, r3, lsl #4
 541 0040 9289     		ldrh	r2, [r2, #12]
 542 0042 52BB     		cbnz	r2, .L56
 543              	.L52:
 832:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 25


 833:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 544              		.loc 1 833 0 is_stmt 1
 545 0044 21BB     		cbnz	r1, .L57
 546              		.loc 1 833 0 is_stmt 0 discriminator 1
 547 0046 164A     		ldr	r2, .L60
 548 0048 02EB0312 		add	r2, r2, r3, lsl #4
 549 004c 9189     		ldrh	r1, [r2, #12]
 550              	.LVL66:
 551 004e 0131     		adds	r1, r1, #1
 552 0050 89B2     		uxth	r1, r1
 553              	.L53:
 554              		.loc 1 833 0 discriminator 4
 555 0052 134A     		ldr	r2, .L60
 556 0054 02EB0312 		add	r2, r2, r3, lsl #4
 557 0058 9181     		strh	r1, [r2, #12]	@ movhi
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 
 835:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 558              		.loc 1 835 0 is_stmt 1 discriminator 4
 559 005a 581C     		adds	r0, r3, #1
 560              	.L42:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** }
 561              		.loc 1 836 0
 562 005c 70BC     		pop	{r4, r5, r6}
 563              	.LCFI6:
 564              		.cfi_remember_state
 565              		.cfi_restore 6
 566              		.cfi_restore 5
 567              		.cfi_restore 4
 568              		.cfi_def_cfa_offset 0
 569 005e 7047     		bx	lr
 570              	.LVL67:
 571              	.L50:
 572              	.LCFI7:
 573              		.cfi_restore_state
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 574              		.loc 1 823 0 discriminator 4
 575 0060 0133     		adds	r3, r3, #1
 576              	.LVL68:
 577              	.L47:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 578              		.loc 1 823 0 is_stmt 0 discriminator 1
 579 0062 012B     		cmp	r3, #1
 580 0064 04D8     		bhi	.L49
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 581              		.loc 1 823 0 discriminator 3
 582 0066 1A01     		lsls	r2, r3, #4
 583 0068 0D4C     		ldr	r4, .L60
 584 006a A258     		ldr	r2, [r4, r2]
 585 006c 002A     		cmp	r2, #0
 586 006e F7D1     		bne	.L50
 587              	.L49:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 588              		.loc 1 824 0 is_stmt 1
 589 0070 022B     		cmp	r3, #2
 590 0072 10D0     		beq	.L55
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 591              		.loc 1 825 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 26


 592 0074 0668     		ldr	r6, [r0]
 593 0076 0A4D     		ldr	r5, .L60
 594 0078 1C01     		lsls	r4, r3, #4
 595 007a 2A19     		adds	r2, r5, r4
 596 007c 2E51     		str	r6, [r5, r4]
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 597              		.loc 1 826 0
 598 007e 8468     		ldr	r4, [r0, #8]
 599 0080 5460     		str	r4, [r2, #4]
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 600              		.loc 1 827 0
 601 0082 4069     		ldr	r0, [r0, #20]
 602              	.LVL69:
 603 0084 9060     		str	r0, [r2, #8]
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 604              		.loc 1 828 0
 605 0086 0020     		movs	r0, #0
 606 0088 9081     		strh	r0, [r2, #12]	@ movhi
 607 008a D5E7     		b	.L48
 608              	.LVL70:
 609              	.L59:
 610 008c 0023     		movs	r3, #0
 611              	.LVL71:
 612 008e E8E7     		b	.L47
 613              	.LVL72:
 614              	.L57:
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 
 615              		.loc 1 833 0
 616 0090 4FF48071 		mov	r1, #256
 617              	.LVL73:
 618 0094 DDE7     		b	.L53
 619              	.LVL74:
 620              	.L55:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 621              		.loc 1 824 0
 622 0096 0020     		movs	r0, #0
 623              	.LVL75:
 624 0098 E0E7     		b	.L42
 625              	.L56:
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 
 626              		.loc 1 831 0
 627 009a 0020     		movs	r0, #0
 628 009c DEE7     		b	.L42
 629              	.L61:
 630 009e 00BF     		.align	2
 631              	.L60:
 632 00a0 00000000 		.word	.LANCHOR0
 633              		.cfi_endproc
 634              	.LFE153:
 636              		.section	.text.dec_lock,"ax",%progbits
 637              		.align	1
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 641              		.fpu fpv5-sp-d16
 643              	dec_lock:
 644              	.LFB154:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 27


 837:Middlewares/Third_Party/FatFs/src/ff.c **** 
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** static
 840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 842:Middlewares/Third_Party/FatFs/src/ff.c **** )
 843:Middlewares/Third_Party/FatFs/src/ff.c **** {
 645              		.loc 1 843 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650              	.LVL76:
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 651              		.loc 1 848 0
 652 0000 0138     		subs	r0, r0, #1
 653              	.LVL77:
 654 0002 0128     		cmp	r0, #1
 655 0004 01D9     		bls	.L69
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 656              		.loc 1 856 0
 657 0006 0220     		movs	r0, #2
 658              	.LVL78:
 659 0008 7047     		bx	lr
 660              	.LVL79:
 661              	.L69:
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 662              		.loc 1 849 0
 663 000a 0C4B     		ldr	r3, .L71
 664 000c 03EB0013 		add	r3, r3, r0, lsl #4
 665 0010 9B89     		ldrh	r3, [r3, #12]
 666              	.LVL80:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 667              		.loc 1 850 0
 668 0012 B3F5807F 		cmp	r3, #256
 669 0016 0CD0     		beq	.L70
 670              	.LVL81:
 671              	.L64:
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 672              		.loc 1 851 0
 673 0018 0BB1     		cbz	r3, .L65
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 674              		.loc 1 851 0 is_stmt 0 discriminator 1
 675 001a 013B     		subs	r3, r3, #1
 676              	.LVL82:
 677 001c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 28


 678              	.LVL83:
 679              	.L65:
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 680              		.loc 1 852 0 is_stmt 1
 681 001e 074A     		ldr	r2, .L71
 682 0020 02EB0012 		add	r2, r2, r0, lsl #4
 683 0024 9381     		strh	r3, [r2, #12]	@ movhi
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 684              		.loc 1 853 0
 685 0026 33B9     		cbnz	r3, .L68
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 686              		.loc 1 853 0 is_stmt 0 discriminator 1
 687 0028 0301     		lsls	r3, r0, #4
 688              	.LVL84:
 689 002a 0020     		movs	r0, #0
 690              	.LVL85:
 691 002c 034A     		ldr	r2, .L71
 692              	.LVL86:
 693 002e D050     		str	r0, [r2, r3]
 694 0030 7047     		bx	lr
 695              	.LVL87:
 696              	.L70:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 697              		.loc 1 850 0 is_stmt 1
 698 0032 0023     		movs	r3, #0
 699              	.LVL88:
 700 0034 F0E7     		b	.L64
 701              	.LVL89:
 702              	.L68:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 703              		.loc 1 854 0
 704 0036 0020     		movs	r0, #0
 705              	.LVL90:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** }
 706              		.loc 1 859 0
 707 0038 7047     		bx	lr
 708              	.L72:
 709 003a 00BF     		.align	2
 710              	.L71:
 711 003c 00000000 		.word	.LANCHOR0
 712              		.cfi_endproc
 713              	.LFE154:
 715              		.section	.text.clear_lock,"ax",%progbits
 716              		.align	1
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 720              		.fpu fpv5-sp-d16
 722              	clear_lock:
 723              	.LFB155:
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
 861:Middlewares/Third_Party/FatFs/src/ff.c **** 
 862:Middlewares/Third_Party/FatFs/src/ff.c **** static
 863:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 29


 865:Middlewares/Third_Party/FatFs/src/ff.c **** )
 866:Middlewares/Third_Party/FatFs/src/ff.c **** {
 724              		.loc 1 866 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 729              	.LVL91:
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 868:Middlewares/Third_Party/FatFs/src/ff.c **** 
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 730              		.loc 1 869 0
 731 0000 0023     		movs	r3, #0
 732 0002 03E0     		b	.L78
 733              	.LVL92:
 734              	.L84:
 735              	.LCFI8:
 736              		.cfi_def_cfa_offset 4
 737              		.cfi_offset 4, -4
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 871:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 738              		.loc 1 872 0
 739 0004 5DF8044B 		ldr	r4, [sp], #4
 740              	.LCFI9:
 741              		.cfi_restore 4
 742              		.cfi_def_cfa_offset 0
 743 0008 7047     		bx	lr
 744              	.L80:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 745              		.loc 1 869 0
 746 000a 0133     		adds	r3, r3, #1
 747              	.LVL93:
 748              	.L78:
 749 000c 012B     		cmp	r3, #1
 750 000e 11D8     		bhi	.L83
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 751              		.loc 1 870 0
 752 0010 1A01     		lsls	r2, r3, #4
 753 0012 0949     		ldr	r1, .L85
 754 0014 8A58     		ldr	r2, [r1, r2]
 755 0016 8242     		cmp	r2, r0
 756 0018 F7D1     		bne	.L80
 866:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 757              		.loc 1 866 0
 758 001a 10B4     		push	{r4}
 759              	.LCFI10:
 760              		.cfi_def_cfa_offset 4
 761              		.cfi_offset 4, -4
 762              	.L79:
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 763              		.loc 1 870 0 discriminator 1
 764 001c 1A01     		lsls	r2, r3, #4
 765 001e 0024     		movs	r4, #0
 766 0020 8C50     		str	r4, [r1, r2]
 767              	.L75:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 30


 768              		.loc 1 869 0 discriminator 2
 769 0022 0133     		adds	r3, r3, #1
 770              	.LVL94:
 771 0024 012B     		cmp	r3, #1
 772 0026 EDD8     		bhi	.L84
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 773              		.loc 1 870 0
 774 0028 1A01     		lsls	r2, r3, #4
 775 002a 0349     		ldr	r1, .L85
 776 002c 8A58     		ldr	r2, [r1, r2]
 777 002e 8242     		cmp	r2, r0
 778 0030 F7D1     		bne	.L75
 779 0032 F3E7     		b	.L79
 780              	.L83:
 781              	.LCFI11:
 782              		.cfi_def_cfa_offset 0
 783              		.cfi_restore 4
 784 0034 7047     		bx	lr
 785              	.L86:
 786 0036 00BF     		.align	2
 787              	.L85:
 788 0038 00000000 		.word	.LANCHOR0
 789              		.cfi_endproc
 790              	.LFE155:
 792              		.section	.text.clust2sect,"ax",%progbits
 793              		.align	1
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 797              		.fpu fpv5-sp-d16
 799              	clust2sect:
 800              	.LFB159:
 873:Middlewares/Third_Party/FatFs/src/ff.c **** 
 874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_LOCK != 0 */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 
 876:Middlewares/Third_Party/FatFs/src/ff.c **** 
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 
 878:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 879:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 881:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 882:Middlewares/Third_Party/FatFs/src/ff.c **** static
 883:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs			/* File system object */
 885:Middlewares/Third_Party/FatFs/src/ff.c **** )
 886:Middlewares/Third_Party/FatFs/src/ff.c **** {
 887:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 888:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
 891:Middlewares/Third_Party/FatFs/src/ff.c **** 
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 31


 898:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 907:Middlewares/Third_Party/FatFs/src/ff.c **** }
 908:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 
 911:Middlewares/Third_Party/FatFs/src/ff.c **** static
 912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector		/* Sector number to make appearance in the fs->win[] */
 915:Middlewares/Third_Party/FatFs/src/ff.c **** )
 916:Middlewares/Third_Party/FatFs/src/ff.c **** {
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 921:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 922:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 933:Middlewares/Third_Party/FatFs/src/ff.c **** }
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 939:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 942:Middlewares/Third_Party/FatFs/src/ff.c **** 
 943:Middlewares/Third_Party/FatFs/src/ff.c **** static
 944:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK:succeeded, !=0:error */
 945:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 946:Middlewares/Third_Party/FatFs/src/ff.c **** )
 947:Middlewares/Third_Party/FatFs/src/ff.c **** {
 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 
 950:Middlewares/Third_Party/FatFs/src/ff.c **** 
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 32


 955:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win, 0, SS(fs));
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 972:Middlewares/Third_Party/FatFs/src/ff.c **** }
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 974:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 
 978:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 979:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 980:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 
 982:Middlewares/Third_Party/FatFs/src/ff.c **** static
 983:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 986:Middlewares/Third_Party/FatFs/src/ff.c **** )
 987:Middlewares/Third_Party/FatFs/src/ff.c **** {
 801              		.loc 1 987 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806              	.LVL95:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 807              		.loc 1 988 0
 808 0000 0239     		subs	r1, r1, #2
 809              	.LVL96:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 810              		.loc 1 989 0
 811 0002 8369     		ldr	r3, [r0, #24]
 812 0004 023B     		subs	r3, r3, #2
 813 0006 9942     		cmp	r1, r3
 814 0008 04D2     		bcs	.L89
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 815              		.loc 1 990 0
 816 000a 4389     		ldrh	r3, [r0, #10]
 817 000c C06A     		ldr	r0, [r0, #44]
 818              	.LVL97:
 819 000e 03FB0100 		mla	r0, r3, r1, r0
 820 0012 7047     		bx	lr
 821              	.LVL98:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 33


 822              	.L89:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 823              		.loc 1 989 0
 824 0014 0020     		movs	r0, #0
 825              	.LVL99:
 991:Middlewares/Third_Party/FatFs/src/ff.c **** }
 826              		.loc 1 991 0
 827 0016 7047     		bx	lr
 828              		.cfi_endproc
 829              	.LFE159:
 831              		.section	.text.clmt_clust,"ax",%progbits
 832              		.align	1
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 836              		.fpu fpv5-sp-d16
 838              	clmt_clust:
 839              	.LFB164:
 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 
 996:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 997:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 999:Middlewares/Third_Party/FatFs/src/ff.c **** 
1000:Middlewares/Third_Party/FatFs/src/ff.c **** static
1001:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Corresponding object */
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* Cluster number to get the value */
1004:Middlewares/Third_Party/FatFs/src/ff.c **** )
1005:Middlewares/Third_Party/FatFs/src/ff.c **** {
1006:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
1007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1009:Middlewares/Third_Party/FatFs/src/ff.c **** 
1010:Middlewares/Third_Party/FatFs/src/ff.c **** 
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** 
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 34


1031:Middlewares/Third_Party/FatFs/src/ff.c **** 
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1036:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1037:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->objsize) {
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD clen = (DWORD)((obj->objsize - 1) / SS(fs)) / fs->csize;	/* Number of clusters - 1 */
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 2) {	/* Is there no valid chain on the FAT? */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cofs <= clen) {
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* Generate the value */
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 						break;
1046:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
1049:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = clst + 1; 	/* Generate the value */
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1052:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1053:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1058:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1059:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1060:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1061:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1062:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* go to default */
1063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** }
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 
1075:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1076:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1077:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
1078:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 
1080:Middlewares/Third_Party/FatFs/src/ff.c **** static
1081:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val		/* New value to be set to the entry */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** )
1086:Middlewares/Third_Party/FatFs/src/ff.c **** {
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 35


1088:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INT_ERR;
1090:Middlewares/Third_Party/FatFs/src/ff.c **** 
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :	/* WORD aligned items */
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1113:Middlewares/Third_Party/FatFs/src/ff.c **** 
1114:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :	/* DWORD aligned items */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1117:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1120:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1128:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1129:Middlewares/Third_Party/FatFs/src/ff.c **** }
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 
1131:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 
1135:Middlewares/Third_Party/FatFs/src/ff.c **** 
1136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
1137:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1138:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1139:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 
1141:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1142:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find a contiguous free cluster block */
1143:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 36


1145:Middlewares/Third_Party/FatFs/src/ff.c **** static
1146:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
1147:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to scan from */
1149:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1150:Middlewares/Third_Party/FatFs/src/ff.c **** )
1151:Middlewares/Third_Party/FatFs/src/ff.c **** {
1152:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm, bv;
1153:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val, scl, ctr;
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 
1156:Middlewares/Third_Party/FatFs/src/ff.c **** 
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	scl = val = clst; ctr = 0;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fs->database + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;	/* (assuming bi
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = 0; bm = 0; i = SS(fs);
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!bv) {	/* Is it a free cluster? */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (val == clst) return 0;	/* All cluster scanned? */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm);
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1179:Middlewares/Third_Party/FatFs/src/ff.c **** }
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 
1182:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set/Clear a block of allocation bitmap */
1184:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 
1186:Middlewares/Third_Party/FatFs/src/ff.c **** static
1187:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT change_bitmap (
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to change from */
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl,	/* Number of clusters to be changed */
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 	int bv		/* bit value to be set (0 or 1) */
1192:Middlewares/Third_Party/FatFs/src/ff.c **** )
1193:Middlewares/Third_Party/FatFs/src/ff.c **** {
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm;
1195:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1196:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect;
1197:Middlewares/Third_Party/FatFs/src/ff.c **** 
1198:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 	sect = fs->database + clst / 8 / SS(fs);	/* Sector address (assuming bitmap is located top of the 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = clst / 8 % SS(fs);						/* Byte offset in the sector */
1201:Middlewares/Third_Party/FatFs/src/ff.c **** 	bm = 1 << (clst % 8);						/* Bit mask in the byte */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 37


1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1203:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
1204:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1207:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->win[i] ^= bm;	/* Flip the bit */
1208:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1210:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm <<= 1);		/* Next bit */
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));		/* Next byte */
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1215:Middlewares/Third_Party/FatFs/src/ff.c **** }
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 
1218:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1219:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the first fragment of the FAT chain    */
1220:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 
1222:Middlewares/Third_Party/FatFs/src/ff.c **** static
1223:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_first_frag (
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj	/* Pointer to the corresponding object */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** )
1226:Middlewares/Third_Party/FatFs/src/ff.c **** {
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, n;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 
1230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented'? */
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(obj->fs, cl, cl + 1);
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1238:Middlewares/Third_Party/FatFs/src/ff.c **** }
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 
1241:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1242:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the last fragment of the FAT chain     */
1243:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 
1245:Middlewares/Third_Party/FatFs/src/ff.c **** static
1246:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_last_frag (
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Pointer to the corresponding object */
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD lcl,	/* Last cluster of the fragment */
1249:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD term	/* Value to set the last FAT entry */
1250:Middlewares/Third_Party/FatFs/src/ff.c **** )
1251:Middlewares/Third_Party/FatFs/src/ff.c **** {
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 
1254:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (obj->n_frag > 0) {	/* Create the last chain on the FAT */
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->n_frag--;
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 38


1259:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
1262:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT && !_FS_READONLY */
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1267:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1269:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1270:Middlewares/Third_Party/FatFs/src/ff.c **** static
1271:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1272:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,			/* Cluster to remove a chain from */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD pclst			/* Previous cluster of clst (0:an entire chain) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1280:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst;
1282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1283:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rt[2];
1285:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (pclst && (!_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Remove the chain */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1304:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1309:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1311:Middlewares/Third_Party/FatFs/src/ff.c **** 			ecl = nxt;
1312:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* End of contiguous cluster block */
1313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
1315:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 39


1316:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) return res;
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1318:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1319:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1320:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[0] = clust2sect(fs, scl);					/* Start sector */
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Inform device the block can be erased */
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1324:Middlewares/Third_Party/FatFs/src/ff.c **** 			scl = ecl = nxt;
1325:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1326:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = nxt;					/* Next cluster */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1329:Middlewares/Third_Party/FatFs/src/ff.c **** 
1330:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
1332:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pclst == 0) {	/* Does the object have no chain? */
1333:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 0;		/* Change the object status 'initial' */
1334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Did the c
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 2;	/* Change the object status 'contiguous' */
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1340:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1341:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1342:Middlewares/Third_Party/FatFs/src/ff.c **** }
1343:Middlewares/Third_Party/FatFs/src/ff.c **** 
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** 
1347:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1348:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch a chain or Create a new chain                  */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1350:Middlewares/Third_Party/FatFs/src/ff.c **** static
1351:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1354:Middlewares/Third_Party/FatFs/src/ff.c **** )
1355:Middlewares/Third_Party/FatFs/src/ff.c **** {
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Create a new chain */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Stretch current chain */
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 40


1373:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
1375:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1377:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_INT_ERR) return 1;
1379:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (clst == 0) {							/* Is it a new chain? */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 2;							/* Set status 'contiguous' */
1382:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {									/* It is a stretched chain */
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 3;						/* Change status 'just fragmented' */
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* New fragment */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) obj->n_frag = 1;
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
1398:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = scl;	/* Start cluster */
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl++;							/* Next cluster */
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
1406:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			cs = get_fat(obj, ncl);			/* Get the cluster status */
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
1411:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);	/* Mark the new cluster 'EOC' */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1416:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1417:Middlewares/Third_Party/FatFs/src/ff.c **** 
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1425:Middlewares/Third_Party/FatFs/src/ff.c **** 
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error status */
1427:Middlewares/Third_Party/FatFs/src/ff.c **** }
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 
1429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 41


1430:Middlewares/Third_Party/FatFs/src/ff.c **** 
1431:Middlewares/Third_Party/FatFs/src/ff.c **** 
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 
1434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1435:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1436:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1437:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1438:Middlewares/Third_Party/FatFs/src/ff.c **** 
1439:Middlewares/Third_Party/FatFs/src/ff.c **** static
1440:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1443:Middlewares/Third_Party/FatFs/src/ff.c **** )
1444:Middlewares/Third_Party/FatFs/src/ff.c **** {
 840              		.loc 1 1444 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 845              	.LVL100:
1445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = fp->obj.fs;
 846              		.loc 1 1446 0
 847 0000 0268     		ldr	r2, [r0]
 848              	.LVL101:
1447:Middlewares/Third_Party/FatFs/src/ff.c **** 
1448:Middlewares/Third_Party/FatFs/src/ff.c **** 
1449:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 849              		.loc 1 1449 0
 850 0002 C36A     		ldr	r3, [r0, #44]
 851 0004 0433     		adds	r3, r3, #4
 852              	.LVL102:
1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 853              		.loc 1 1450 0
 854 0006 490A     		lsrs	r1, r1, #9
 855              	.LVL103:
 856 0008 5289     		ldrh	r2, [r2, #10]
 857              	.LVL104:
 858 000a B1FBF2F1 		udiv	r1, r1, r2
 859              	.LVL105:
 860              	.L93:
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 861              		.loc 1 1452 0
 862 000e 1868     		ldr	r0, [r3]
 863              	.LVL106:
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 864              		.loc 1 1453 0
 865 0010 30B1     		cbz	r0, .L90
1454:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 866              		.loc 1 1454 0
 867 0012 8142     		cmp	r1, r0
 868 0014 02D3     		bcc	.L92
1455:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 869              		.loc 1 1455 0
 870 0016 091A     		subs	r1, r1, r0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 42


 871              	.LVL107:
 872 0018 0833     		adds	r3, r3, #8
 873              	.LVL108:
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 874              		.loc 1 1452 0
 875 001a F8E7     		b	.L93
 876              	.LVL109:
 877              	.L92:
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 878              		.loc 1 1457 0
 879 001c 5868     		ldr	r0, [r3, #4]
 880              	.LVL110:
 881 001e 0844     		add	r0, r0, r1
 882              	.L90:
1458:Middlewares/Third_Party/FatFs/src/ff.c **** }
 883              		.loc 1 1458 0
 884 0020 7047     		bx	lr
 885              		.cfi_endproc
 886              	.LFE164:
 888              		.section	.text.ld_clust,"ax",%progbits
 889              		.align	1
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 893              		.fpu fpv5-sp-d16
 895              	ld_clust:
 896              	.LFB168:
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 
1460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 
1465:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1466:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 
1469:Middlewares/Third_Party/FatFs/src/ff.c **** static
1470:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* Offset of directory table */
1473:Middlewares/Third_Party/FatFs/src/ff.c **** )
1474:Middlewares/Third_Party/FatFs/src/ff.c **** {
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 
1478:Middlewares/Third_Party/FatFs/src/ff.c **** 
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE)
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;				/* Set current offset */
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 43


1488:Middlewares/Third_Party/FatFs/src/ff.c **** 
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 
1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {			/* Dynamic table (sub-directory or root-directory in FAT32+) */
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = clust2sect(fs, clst);
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;					/* Current cluster# */
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1507:Middlewares/Third_Party/FatFs/src/ff.c **** 
1508:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1509:Middlewares/Third_Party/FatFs/src/ff.c **** }
1510:Middlewares/Third_Party/FatFs/src/ff.c **** 
1511:Middlewares/Third_Party/FatFs/src/ff.c **** 
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 
1514:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1515:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1516:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1517:Middlewares/Third_Party/FatFs/src/ff.c **** 
1518:Middlewares/Third_Party/FatFs/src/ff.c **** static
1519:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1522:Middlewares/Third_Party/FatFs/src/ff.c **** )
1523:Middlewares/Third_Party/FatFs/src/ff.c **** {
1524:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
1525:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1526:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1527:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
1535:Middlewares/Third_Party/FatFs/src/ff.c **** 
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1541:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 44


1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
1547:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) {								/* If no stretch, report EOT */
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
1550:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_EXFAT) dp->obj.stat |= 4;			/* The directory needs to be updated */
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect -= n;							/* Restore window offset */
1564:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;		/* Initialize data for new cluster */
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
1571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;						/* Current entry */
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1578:Middlewares/Third_Party/FatFs/src/ff.c **** }
1579:Middlewares/Third_Party/FatFs/src/ff.c **** 
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve a block of directory entries             */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** 
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent		/* Number of contiguous entries to allocate */
1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 
1598:Middlewares/Third_Party/FatFs/src/ff.c **** 
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 45


1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1605:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1608:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1620:Middlewares/Third_Party/FatFs/src/ff.c **** }
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 
1622:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 
1626:Middlewares/Third_Party/FatFs/src/ff.c **** 
1627:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1628:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT: Directory handling - Load/Store start cluster number             */
1629:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 
1631:Middlewares/Third_Party/FatFs/src/ff.c **** static
1632:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1633:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir	/* Pointer to the key entry */
1635:Middlewares/Third_Party/FatFs/src/ff.c **** )
1636:Middlewares/Third_Party/FatFs/src/ff.c **** {
 897              		.loc 1 1636 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              	.LVL111:
 902 0000 70B5     		push	{r4, r5, r6, lr}
 903              	.LCFI12:
 904              		.cfi_def_cfa_offset 16
 905              		.cfi_offset 4, -16
 906              		.cfi_offset 5, -12
 907              		.cfi_offset 6, -8
 908              		.cfi_offset 14, -4
 909 0002 0646     		mov	r6, r0
 910 0004 0D46     		mov	r5, r1
1637:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
1638:Middlewares/Third_Party/FatFs/src/ff.c **** 
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ld_word(dir + DIR_FstClusLO);
 911              		.loc 1 1639 0
 912 0006 01F11A00 		add	r0, r1, #26
 913              	.LVL112:
 914 000a FFF7FEFF 		bl	ld_word
 915              	.LVL113:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 46


 916 000e 0446     		mov	r4, r0
 917              	.LVL114:
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 918              		.loc 1 1640 0
 919 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 920 0012 032B     		cmp	r3, #3
 921 0014 00D0     		beq	.L97
 922              	.L94:
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1643:Middlewares/Third_Party/FatFs/src/ff.c **** 
1644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 923              		.loc 1 1645 0
 924 0016 70BD     		pop	{r4, r5, r6, pc}
 925              	.LVL115:
 926              	.L97:
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 927              		.loc 1 1641 0
 928 0018 05F11400 		add	r0, r5, #20
 929              	.LVL116:
 930 001c FFF7FEFF 		bl	ld_word
 931              	.LVL117:
 932 0020 44EA0040 		orr	r0, r4, r0, lsl #16
 933              	.LVL118:
1644:Middlewares/Third_Party/FatFs/src/ff.c **** }
 934              		.loc 1 1644 0
 935 0024 F7E7     		b	.L94
 936              		.cfi_endproc
 937              	.LFE168:
 939              		.section	.text.st_clust,"ax",%progbits
 940              		.align	1
 941              		.syntax unified
 942              		.thumb
 943              		.thumb_func
 944              		.fpu fpv5-sp-d16
 946              	st_clust:
 947              	.LFB169:
1646:Middlewares/Third_Party/FatFs/src/ff.c **** 
1647:Middlewares/Third_Party/FatFs/src/ff.c **** 
1648:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1649:Middlewares/Third_Party/FatFs/src/ff.c **** static
1650:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the key entry */
1653:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** )
1655:Middlewares/Third_Party/FatFs/src/ff.c **** {
 948              		.loc 1 1655 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952              	.LVL119:
 953 0000 70B5     		push	{r4, r5, r6, lr}
 954              	.LCFI13:
 955              		.cfi_def_cfa_offset 16
 956              		.cfi_offset 4, -16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 47


 957              		.cfi_offset 5, -12
 958              		.cfi_offset 6, -8
 959              		.cfi_offset 14, -4
 960 0002 0646     		mov	r6, r0
 961 0004 0C46     		mov	r4, r1
 962 0006 1546     		mov	r5, r2
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
 963              		.loc 1 1656 0
 964 0008 91B2     		uxth	r1, r2
 965              	.LVL120:
 966 000a 04F11A00 		add	r0, r4, #26
 967              	.LVL121:
 968 000e FFF7FEFF 		bl	st_word
 969              	.LVL122:
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 970              		.loc 1 1657 0
 971 0012 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 972 0014 032B     		cmp	r3, #3
 973 0016 00D0     		beq	.L101
 974              	.L98:
 975 0018 70BD     		pop	{r4, r5, r6, pc}
 976              	.LVL123:
 977              	.L101:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 978              		.loc 1 1658 0
 979 001a 290C     		lsrs	r1, r5, #16
 980 001c 04F11400 		add	r0, r4, #20
 981 0020 FFF7FEFF 		bl	st_word
 982              	.LVL124:
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1660:Middlewares/Third_Party/FatFs/src/ff.c **** }
 983              		.loc 1 1660 0
 984 0024 F8E7     		b	.L98
 985              		.cfi_endproc
 986              	.LFE169:
 988              		.section	.text.get_fileinfo,"ax",%progbits
 989              		.align	1
 990              		.syntax unified
 991              		.thumb
 992              		.thumb_func
 993              		.fpu fpv5-sp-d16
 995              	get_fileinfo:
 996              	.LFB174:
1661:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 
1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
1665:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1666:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1667:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: LFN handling                                                  */
1668:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1669:Middlewares/Third_Party/FatFs/src/ff.c **** static
1670:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 
1673:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1674:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Compare a part of file name with an LFN entry */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 48


1675:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1676:Middlewares/Third_Party/FatFs/src/ff.c **** static
1677:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (				/* 1:matched, 0:not matched */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1680:Middlewares/Third_Party/FatFs/src/ff.c **** )
1681:Middlewares/Third_Party/FatFs/src/ff.c **** {
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = uc;
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1700:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN matched */
1705:Middlewares/Third_Party/FatFs/src/ff.c **** }
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 
1707:Middlewares/Third_Party/FatFs/src/ff.c **** 
1708:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
1709:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1710:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1711:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1712:Middlewares/Third_Party/FatFs/src/ff.c **** static
1713:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1715:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the LFN entry */
1716:Middlewares/Third_Party/FatFs/src/ff.c **** )
1717:Middlewares/Third_Party/FatFs/src/ff.c **** {
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
1721:Middlewares/Third_Party/FatFs/src/ff.c **** 
1722:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
1723:Middlewares/Third_Party/FatFs/src/ff.c **** 
1724:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
1725:Middlewares/Third_Party/FatFs/src/ff.c **** 
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1731:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 49


1732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN is valid */
1742:Middlewares/Third_Party/FatFs/src/ff.c **** }
1743:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 
1746:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1747:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1748:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create an entry of LFN entries */
1749:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1750:Middlewares/Third_Party/FatFs/src/ff.c **** static
1751:Middlewares/Third_Party/FatFs/src/ff.c **** void put_lfn (
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,			/* LFN order (1-20) */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum			/* Checksum of the corresponding SFN */
1756:Middlewares/Third_Party/FatFs/src/ff.c **** )
1757:Middlewares/Third_Party/FatFs/src/ff.c **** {
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1759:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 
1762:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
1763:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1764:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + LDIR_FstClusLO, 0);
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
1768:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
1769:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1771:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1772:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
1773:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1776:Middlewares/Third_Party/FatFs/src/ff.c **** }
1777:Middlewares/Third_Party/FatFs/src/ff.c **** 
1778:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1779:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1780:Middlewares/Third_Party/FatFs/src/ff.c **** 
1781:Middlewares/Third_Party/FatFs/src/ff.c **** 
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && !_FS_READONLY
1784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1785:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create a Numbered SFN                                        */
1786:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 
1788:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 50


1789:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1794:Middlewares/Third_Party/FatFs/src/ff.c **** )
1795:Middlewares/Third_Party/FatFs/src/ff.c **** {
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1797:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 
1802:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
1803:Middlewares/Third_Party/FatFs/src/ff.c **** 
1804:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1813:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
1819:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)((seq % 16) + '0');
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
1824:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 
1827:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
1831:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1832:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1833:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1836:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
1837:Middlewares/Third_Party/FatFs/src/ff.c **** }
1838:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 && !_FS_READONLY */
1839:Middlewares/Third_Party/FatFs/src/ff.c **** 
1840:Middlewares/Third_Party/FatFs/src/ff.c **** 
1841:Middlewares/Third_Party/FatFs/src/ff.c **** 
1842:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1843:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1844:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
1845:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 51


1846:Middlewares/Third_Party/FatFs/src/ff.c **** 
1847:Middlewares/Third_Party/FatFs/src/ff.c **** static
1848:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1849:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1850:Middlewares/Third_Party/FatFs/src/ff.c **** )
1851:Middlewares/Third_Party/FatFs/src/ff.c **** {
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
1854:Middlewares/Third_Party/FatFs/src/ff.c **** 
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1856:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
1857:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--n);
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1859:Middlewares/Third_Party/FatFs/src/ff.c **** }
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 
1861:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** 
1865:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1866:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1867:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Checksum                                                       */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 
1870:Middlewares/Third_Party/FatFs/src/ff.c **** static
1871:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xdir_sum (			/* Get checksum of the directoly block */
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Directory entry block to be calculated */
1873:Middlewares/Third_Party/FatFs/src/ff.c **** )
1874:Middlewares/Third_Party/FatFs/src/ff.c **** {
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, szblk;
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum;
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 
1878:Middlewares/Third_Party/FatFs/src/ff.c **** 
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = sum = 0; i < szblk; i++) {
1881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == XDIR_SetSum) {	/* Skip sum field */
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 			i++;
1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1888:Middlewares/Third_Party/FatFs/src/ff.c **** }
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 
1892:Middlewares/Third_Party/FatFs/src/ff.c **** static
1893:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xname_sum (		/* Get check sum (to be used as hash) of the name */
1894:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* name	/* File name to be calculated */
1895:Middlewares/Third_Party/FatFs/src/ff.c **** )
1896:Middlewares/Third_Party/FatFs/src/ff.c **** {
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum = 0;
1899:Middlewares/Third_Party/FatFs/src/ff.c **** 
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	while ((chr = *name++) != 0) {
1902:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = ff_wtoupper(chr);		/* File name needs to be ignored case */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 52


1903:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1907:Middlewares/Third_Party/FatFs/src/ff.c **** }
1908:Middlewares/Third_Party/FatFs/src/ff.c **** 
1909:Middlewares/Third_Party/FatFs/src/ff.c **** 
1910:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _USE_MKFS
1911:Middlewares/Third_Party/FatFs/src/ff.c **** static
1912:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD xsum32 (
1913:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE  dat,	/* Data to be sumed */
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sum	/* Previous value */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** )
1916:Middlewares/Third_Party/FatFs/src/ff.c **** {
1917:Middlewares/Third_Party/FatFs/src/ff.c **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
1918:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1919:Middlewares/Third_Party/FatFs/src/ff.c **** }
1920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 
1923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1924:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1925:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get object information from a directory block */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 
1928:Middlewares/Third_Party/FatFs/src/ff.c **** static
1929:Middlewares/Third_Party/FatFs/src/ff.c **** void get_xdir_info (
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Buffer to store the extracted file information */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** )
1933:Middlewares/Third_Party/FatFs/src/ff.c **** {
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT di, si;
1935:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1937:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nc;
1938:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 
1940:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get file name */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** 	di = 0;
1942:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2; di < dirb[XDIR_NumName]; si += 2, di++) {
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ld_word(dirb + si);					/* Get a character */
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) { di = 0; break; }	/* Buffer overflow --> inaccessible object name */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di] = w;						/* Store it */
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1949:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2, nc = 0; nc < dirb[XDIR_NumName]; si += 2, nc++) {
1951:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1952:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(ld_word(dirb + si), 0);	/* Get a character and Unicode -> OEM */
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {				/* Is it a double byte char? (always false at SBCS cfg) */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[di++] = (char)(w >> 8);	/* Put 1st byte of the DBC */
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == 0 || di >= _MAX_LFN) { di = 0; break; }	/* Invalid char or buffer overflow --> inaccessi
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di++] = (char)w;
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 53


1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
1961:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[di] = 0;						/* Terminate file name */
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[0] = 0;							/* No SFN */
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dirb[XDIR_Attr];					/* Attribute */
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** }
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 
1970:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 
1973:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1974:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get a directry entry block */
1975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** static
1978:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the reading direcotry object pointing the 85 entry */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** )
1981:Middlewares/Third_Party/FatFs/src/ff.c **** {
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, sz_ent;
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load 85 entry */
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0x85) return FR_INT_ERR;
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + 0, dp->dir, SZDIRE);
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
1995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C0 entry */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_next(dp, 0);
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0xC0) return FR_INT_ERR;
2001:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + SZDIRE, dp->dir, SZDIRE);
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C1 entries */
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SZDIRE * 2;	/* C1 offset */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2008:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2009:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->dir[XDIR_Type] != 0xC1) return FR_INT_ERR;
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < MAXDIRB(_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while ((i += SZDIRE) < sz_ent);
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Sanity check (do it when accessible object name) */
2016:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i <= MAXDIRB(_MAX_LFN)) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 54


2017:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2020:Middlewares/Third_Party/FatFs/src/ff.c **** }
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 
2023:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY || _FS_RPATH != 0
2024:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2025:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Load the object's directory entry block */
2026:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2027:Middlewares/Third_Party/FatFs/src/ff.c **** static
2028:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_obj_dir (
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 	const _FDID* obj	/* Object with its containing directory information */
2031:Middlewares/Third_Party/FatFs/src/ff.c **** )
2032:Middlewares/Third_Party/FatFs/src/ff.c **** {
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Open object containing directory */
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.fs = obj->fs;
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.sclust = obj->c_scl;
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.stat = (BYTE)obj->c_size;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->blk_ofs = obj->c_ofs;
2041:Middlewares/Third_Party/FatFs/src/ff.c **** 
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_xdir(dp);		/* Load the object's entry block */
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2047:Middlewares/Third_Party/FatFs/src/ff.c **** }
2048:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2052:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2053:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Store the directory block to the media */
2054:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2055:Middlewares/Third_Party/FatFs/src/ff.c **** static
2056:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT store_xdir (
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Pointer to the direcotry object */
2058:Middlewares/Third_Party/FatFs/src/ff.c **** )
2059:Middlewares/Third_Party/FatFs/src/ff.c **** {
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2063:Middlewares/Third_Party/FatFs/src/ff.c **** 
2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create set sum */
2065:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = dirb[XDIR_NumSec] + 1;
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Store the set of directory to the volume */
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (res == FR_OK) {
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2073:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(dp->dir, dirb, SZDIRE);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 55


2074:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.fs->wflag = 1;
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (--nent == 0) break;
2076:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb += SZDIRE;
2077:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2079:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2080:Middlewares/Third_Party/FatFs/src/ff.c **** }
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 
2084:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2085:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Create a new directory enrty block */
2086:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 
2088:Middlewares/Third_Party/FatFs/src/ff.c **** static
2089:Middlewares/Third_Party/FatFs/src/ff.c **** void create_xdir (
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn	/* Pointer to the nul terminated file name */
2092:Middlewares/Third_Party/FatFs/src/ff.c **** )
2093:Middlewares/Third_Party/FatFs/src/ff.c **** {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE nb, nc;
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create 85+C0 entry */
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dirb, 0, 2 * SZDIRE);
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type] = 0x85;
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type + SZDIRE] = 0xC0;
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create C1 entries */
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	nc = 0; nb = 1; chr = 1; i = SZDIRE * 2;
2106:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb[i++] = 0xC1; dirb[i++] = 0;	/* Entry type C1 */
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill name field */
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chr && (chr = lfn[nc]) != 0) nc++;	/* Get a character if exist */
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirb + i, chr); 		/* Store it */
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while ((i += 2) % SZDIRE != 0);
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb++;
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (lfn[nc]);	/* Fill next entry if any char follows */
2114:Middlewares/Third_Party/FatFs/src/ff.c **** 
2115:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumName] = nc;	/* Set name length */
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumSec] = nb;		/* Set block length */
2117:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2118:Middlewares/Third_Party/FatFs/src/ff.c **** }
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
2120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
2121:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
2122:Middlewares/Third_Party/FatFs/src/ff.c **** 
2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** 
2125:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
2126:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2127:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 
2130:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 56


2131:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2134:Middlewares/Third_Party/FatFs/src/ff.c **** )
2135:Middlewares/Third_Party/FatFs/src/ff.c **** {
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
2139:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
2141:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2150:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_USE_LABEL && vol) {
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x83) break;	/* Volume label entry? */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x85) {		/* Start of the file entry block? */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_xdir(dp);	/* Load the entry block */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2163:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else
2165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2166:Middlewares/Third_Party/FatFs/src/ff.c **** 		{	/* On the FAT12/16/32 volume */
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid 
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (a == AM_LFN) {			/* An LFN entry is found */
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2178:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check LFN validity and capture it */
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
2180:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ord || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2182:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2183:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2184:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2186:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2187:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 57


2188:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a 
2189:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2191:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** }
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 
2205:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2206:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
2207:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 
2209:Middlewares/Third_Party/FatFs/src/ff.c **** static
2210:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
2212:Middlewares/Third_Party/FatFs/src/ff.c **** )
2213:Middlewares/Third_Party/FatFs/src/ff.c **** {
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
2217:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
2219:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2220:Middlewares/Third_Party/FatFs/src/ff.c **** 
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2223:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE nc;
2226:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT di, ni;
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2228:Middlewares/Third_Party/FatFs/src/ff.c **** 
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((res = dir_read(dp, 0)) == FR_OK) {	/* Read an item */
2230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 255
2231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->dirbuf[XDIR_NumName] > _MAX_LFN) continue;			/* Skip comparison if inaccessible object n
2232:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
2235:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((di % SZDIRE) == 0) di += 2;
2236:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
2237:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2238:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return res;
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2243:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2244:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 58


2245:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2246:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2247:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
2251:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2252:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2264:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2266:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2271:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2272:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2273:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2275:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2276:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);	/* Next entry */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 
2280:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2281:Middlewares/Third_Party/FatFs/src/ff.c **** }
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 
2286:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2287:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2288:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
2289:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** static
2292:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DI
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
2294:Middlewares/Third_Party/FatFs/src/ff.c **** )
2295:Middlewares/Third_Party/FatFs/src/ff.c **** {
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2298:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nlen, nent;
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], sum;
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 59


2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 
2306:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_alloc(dp, nent);		/* Allocate entries */
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.sclust != 0 && (dp->obj.stat & 4)) {	/* Has the sub-directory been stretched? */
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.objsize += (DWORD)fs->csize * SS(fs);	/* Increase the directory size by cluster size */
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_first_frag(&dp->obj);				/* Fill first fragment on the FAT if needed */
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if neede
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = load_obj_dir(&dj, &dp->obj);				/* Load the object status */
2322:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);		/* Update the allocation status */
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2325:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = store_xdir(&dj);							/* Store the object status */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2334:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, dp->fn, 12);
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create an SFN with/without LFNs. */
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dp->sect);
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 60


2359:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
2365:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
2368:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set SFN entry */
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2376:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2384:Middlewares/Third_Party/FatFs/src/ff.c **** }
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 
2386:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 
2390:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE == 0
2391:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2392:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 
2395:Middlewares/Third_Party/FatFs/src/ff.c **** static
2396:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
2398:Middlewares/Third_Party/FatFs/src/ff.c **** )
2399:Middlewares/Third_Party/FatFs/src/ff.c **** {
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2402:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD last = dp->dptr;
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Mark an entry 'deleted' */
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[XDIR_Type] &= 0x7F;
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* On the FAT12/16/32 volume */
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[DIR_Name] = DDEM;
2415:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 61


2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2418:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2421:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
2423:Middlewares/Third_Party/FatFs/src/ff.c **** 
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(fs, dp->sect);
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** 
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2432:Middlewares/Third_Party/FatFs/src/ff.c **** }
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY && _FS_MINIMIZE == 0 */
2435:Middlewares/Third_Party/FatFs/src/ff.c **** 
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
2439:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2442:Middlewares/Third_Party/FatFs/src/ff.c **** 
2443:Middlewares/Third_Party/FatFs/src/ff.c **** static
2444:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
2445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
 997              		.loc 1 2448 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001              	.LVL125:
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c;
2451:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, lfv;
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2455:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 
2458:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[0] = 0;		/* Invaidate file info */
 1002              		.loc 1 2458 0
 1003 0000 0023     		movs	r3, #0
 1004 0002 4B72     		strb	r3, [r1, #9]
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 1005              		.loc 1 2459 0
 1006 0004 C369     		ldr	r3, [r0, #28]
 1007 0006 73B3     		cbz	r3, .L111
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
 1008              		.loc 1 2448 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 62


 1009 0008 70B5     		push	{r4, r5, r6, lr}
 1010              	.LCFI14:
 1011              		.cfi_def_cfa_offset 16
 1012              		.cfi_offset 4, -16
 1013              		.cfi_offset 5, -12
 1014              		.cfi_offset 6, -8
 1015              		.cfi_offset 14, -4
 1016 000a 0024     		movs	r4, #0
 1017 000c 2346     		mov	r3, r4
 1018 000e 05E0     		b	.L104
 1019              	.LVL126:
 1020              	.L106:
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2462:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2463:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_xdir_info(fs->dirbuf, fno);
2465:Middlewares/Third_Party/FatFs/src/ff.c **** 		return;
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2467:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = j = 0;
2471:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
2472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2473:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
2475:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 					fno->fname[i++] = (char)(w >> 8);
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= _MAX_LFN) { i = 0; break; }	/* No LFN if buffer overflow */
2480:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[i] = 0;	/* Terminate the LFN */
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfv = fno->fname[i];	/* LFN is exist if non-zero */
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2492:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!lfv) fno->fname[j] = '.';
2494:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
2495:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2496:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
2497:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dp->dir[i])) {
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = c << 8 | dp->dir[i++];
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
2501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
2502:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2503:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->altname[j] = c;
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!lfv) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 63


2505:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[j] = c;
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 		j++;
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!lfv) {
2513:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j] = 0;
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is ex
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[j] = 0;	/* Terminate the SFN */
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2519:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 1021              		.loc 1 2524 0
 1022 0010 092A     		cmp	r2, #9
 1023 0012 0ED0     		beq	.L114
 1024              	.L107:
 1025              	.LVL127:
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 1026              		.loc 1 2525 0
 1027 0014 0D19     		adds	r5, r1, r4
 1028 0016 6B72     		strb	r3, [r5, #9]
 1029 0018 0134     		adds	r4, r4, #1
 1030              	.LVL128:
 1031              	.L105:
 1032 001a 1346     		mov	r3, r2
 1033              	.LVL129:
 1034              	.L104:
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
 1035              		.loc 1 2520 0
 1036 001c 0A2B     		cmp	r3, #10
 1037 001e 0DD8     		bhi	.L115
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
 1038              		.loc 1 2521 0
 1039 0020 056A     		ldr	r5, [r0, #32]
 1040 0022 5A1C     		adds	r2, r3, #1
 1041              	.LVL130:
 1042 0024 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 1043              	.LVL131:
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 1044              		.loc 1 2522 0
 1045 0026 202B     		cmp	r3, #32
 1046 0028 F7D0     		beq	.L105
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 1047              		.loc 1 2523 0
 1048 002a 052B     		cmp	r3, #5
 1049 002c F0D1     		bne	.L106
 1050 002e E523     		movs	r3, #229
 1051              	.LVL132:
 1052 0030 EEE7     		b	.L106
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 64


 1053              	.LVL133:
 1054              	.L114:
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 1055              		.loc 1 2524 0 discriminator 1
 1056 0032 0D19     		adds	r5, r1, r4
 1057 0034 2E26     		movs	r6, #46
 1058 0036 6E72     		strb	r6, [r5, #9]
 1059 0038 0134     		adds	r4, r4, #1
 1060              	.LVL134:
 1061 003a EBE7     		b	.L107
 1062              	.LVL135:
 1063              	.L115:
 1064 003c 0E46     		mov	r6, r1
 1065 003e 0546     		mov	r5, r0
2526:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2527:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[j] = 0;
 1066              		.loc 1 2527 0
 1067 0040 0C44     		add	r4, r4, r1
 1068              	.LVL136:
 1069 0042 0023     		movs	r3, #0
 1070              	.LVL137:
 1071 0044 6372     		strb	r3, [r4, #9]
2528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dp->dir[DIR_Attr];				/* Attribute */
 1072              		.loc 1 2530 0
 1073 0046 036A     		ldr	r3, [r0, #32]
 1074 0048 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1075 004a 0B72     		strb	r3, [r1, #8]
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 1076              		.loc 1 2531 0
 1077 004c 006A     		ldr	r0, [r0, #32]
 1078              	.LVL138:
 1079 004e 1C30     		adds	r0, r0, #28
 1080 0050 FFF7FEFF 		bl	ld_dword
 1081              	.LVL139:
 1082 0054 3060     		str	r0, [r6]
2532:Middlewares/Third_Party/FatFs/src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 1083              		.loc 1 2532 0
 1084 0056 286A     		ldr	r0, [r5, #32]
 1085 0058 1630     		adds	r0, r0, #22
 1086 005a FFF7FEFF 		bl	ld_dword
 1087              	.LVL140:
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
 1088              		.loc 1 2533 0
 1089 005e F080     		strh	r0, [r6, #6]	@ movhi
 1090 0060 000C     		lsrs	r0, r0, #16
 1091              	.LVL141:
 1092 0062 B080     		strh	r0, [r6, #4]	@ movhi
 1093 0064 70BD     		pop	{r4, r5, r6, pc}
 1094              	.LVL142:
 1095              	.L111:
 1096              	.LCFI15:
 1097              		.cfi_def_cfa_offset 0
 1098              		.cfi_restore 4
 1099              		.cfi_restore 5
 1100              		.cfi_restore 6
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 65


 1101              		.cfi_restore 14
 1102 0066 7047     		bx	lr
 1103              		.cfi_endproc
 1104              	.LFE174:
 1106              		.section	.text.create_name,"ax",%progbits
 1107              		.align	1
 1108              		.syntax unified
 1109              		.thumb
 1110              		.thumb_func
 1111              		.fpu fpv5-sp-d16
 1113              	create_name:
 1114              	.LFB175:
2534:Middlewares/Third_Party/FatFs/src/ff.c **** }
2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
2541:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2542:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
2543:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2544:Middlewares/Third_Party/FatFs/src/ff.c **** 
2545:Middlewares/Third_Party/FatFs/src/ff.c **** static
2546:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
2547:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
2548:Middlewares/Third_Party/FatFs/src/ff.c **** )
2549:Middlewares/Third_Party/FatFs/src/ff.c **** {
2550:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2552:Middlewares/Third_Party/FatFs/src/ff.c **** 
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2556:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr)) {		/* Get DBC 2nd byte if needed */
2559:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
2563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
2565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2566:Middlewares/Third_Party/FatFs/src/ff.c **** }
2567:Middlewares/Third_Party/FatFs/src/ff.c **** 
2568:Middlewares/Third_Party/FatFs/src/ff.c **** 
2569:Middlewares/Third_Party/FatFs/src/ff.c **** static
2570:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* 0:not matched, 1:matched */
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
2573:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
2575:Middlewares/Third_Party/FatFs/src/ff.c **** )
2576:Middlewares/Third_Party/FatFs/src/ff.c **** {
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 66


2579:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
2607:Middlewares/Third_Party/FatFs/src/ff.c **** }
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 
2609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 
2613:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a top segment and create the object name in directory form       */
2615:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 
2617:Middlewares/Third_Party/FatFs/src/ff.c **** static
2618:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2620:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** )
2622:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1115              		.loc 1 2622 0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 0
 1118              		@ frame_needed = 0, uses_anonymous_args = 0
 1119              	.LVL143:
 1120 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1121              	.LCFI16:
 1122              		.cfi_def_cfa_offset 40
 1123              		.cfi_offset 3, -40
 1124              		.cfi_offset 4, -36
 1125              		.cfi_offset 5, -32
 1126              		.cfi_offset 6, -28
 1127              		.cfi_offset 7, -24
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 67


 1128              		.cfi_offset 8, -20
 1129              		.cfi_offset 9, -16
 1130              		.cfi_offset 10, -12
 1131              		.cfi_offset 11, -8
 1132              		.cfi_offset 14, -4
 1133 0004 8346     		mov	fp, r0
 1134 0006 8A46     		mov	r10, r1
2623:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2624:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
2628:Middlewares/Third_Party/FatFs/src/ff.c **** 
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
2630:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; lfn = dp->obj.fs->lfnbuf; si = di = 0;
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ') break;				/* Break if end of the path name */
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == '/' || w == '\\') {	/* Break if a separator is found */
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2639:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2640:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2642:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b)) return FR_INVALID_NAME;	/* Reject invalid sequence */
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
2648:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) return FR_INVALID_NAME;	/* Reject illegal characters
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2654:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') ||
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)		/* Create dot name for SFN entry */
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2663:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2664:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
2671:Middlewares/Third_Party/FatFs/src/ff.c **** 
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 68


2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = b = 0; ni = 8;
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
2694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
2697:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
2700:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2702:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* Is this DBC? (always false at SBCS cfg) */
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2711:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2714:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2717:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2718:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 69


2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2739:Middlewares/Third_Party/FatFs/src/ff.c **** 
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 
2741:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* _USE_LFN != 0 : Non-LFN configuration */
2742:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, d, *sfn;
2743:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2745:Middlewares/Third_Party/FatFs/src/ff.c **** 
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; sfn = dp->fn;
 1135              		.loc 1 2747 0
 1136 0008 D1F80080 		ldr	r8, [r1]
 1137              	.LVL144:
 1138 000c 00F12409 		add	r9, r0, #36
 1139              	.LVL145:
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
 1140              		.loc 1 2748 0
 1141 0010 0B22     		movs	r2, #11
 1142 0012 2021     		movs	r1, #32
 1143              	.LVL146:
 1144 0014 4846     		mov	r0, r9
 1145              	.LVL147:
 1146 0016 FFF7FEFF 		bl	mem_set
 1147              	.LVL148:
2749:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = 0; ni = 8;
 1148              		.loc 1 2749 0
 1149 001a 0025     		movs	r5, #0
 1150 001c 2B46     		mov	r3, r5
 1151 001e 0827     		movs	r7, #8
 1152 0020 25E0     		b	.L117
 1153              	.LVL149:
 1154              	.L121:
2750:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2754:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2755:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2756:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2757:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2758:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = p + si;								/* Return pointer to the next segment */
2759:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 70


2767:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1155              		.loc 1 2767 0 discriminator 2
 1156 0022 0136     		adds	r6, r6, #1
 1157              	.LVL150:
 1158              	.L119:
 1159              		.loc 1 2767 0 is_stmt 0 discriminator 1
 1160 0024 18F80630 		ldrb	r3, [r8, r6]	@ zero_extendqisi2
 1161 0028 5C2B     		cmp	r3, #92
 1162 002a 18BF     		it	ne
 1163 002c 2F2B     		cmpne	r3, #47
 1164 002e F8D0     		beq	.L121
 1165              	.L118:
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {		/* End of body or over size? */
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
2776:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
2778:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2779:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII only cfg) */
2781:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2782:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false at SBCS cfg.) */
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2793:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = p + si;						/* Return pointer to the next segment */
 1166              		.loc 1 2795 0 is_stmt 1
 1167 0030 4644     		add	r6, r6, r8
 1168              	.LVL151:
 1169 0032 CAF80060 		str	r6, [r10]
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 1170              		.loc 1 2796 0
 1171 0036 002D     		cmp	r5, #0
 1172 0038 37D1     		bne	.L135
 1173 003a 0620     		movs	r0, #6
2797:Middlewares/Third_Party/FatFs/src/ff.c **** 
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LFN != 0 */
2803:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1174              		.loc 1 2803 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 71


 1175 003c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1176              	.LVL152:
 1177              	.L137:
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 1178              		.loc 1 2772 0
 1179 0040 0825     		movs	r5, #8
 1180              	.LVL153:
 1181 0042 0B27     		movs	r7, #11
 1182 0044 12E0     		b	.L124
 1183              	.LVL154:
 1184              	.L122:
2775:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 1185              		.loc 1 2775 0
 1186 0046 14F0800F 		tst	r4, #128
 1187 004a 2AD1     		bne	.L136
 1188              	.L125:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1189              		.loc 1 2790 0
 1190 004c 2146     		mov	r1, r4
 1191 004e 2148     		ldr	r0, .L139
 1192 0050 FFF7FEFF 		bl	chk_chr
 1193              	.LVL155:
 1194 0054 0028     		cmp	r0, #0
 1195 0056 3AD1     		bne	.L130
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1196              		.loc 1 2791 0
 1197 0058 A4F16103 		sub	r3, r4, #97
 1198 005c DBB2     		uxtb	r3, r3
 1199 005e 192B     		cmp	r3, #25
 1200 0060 01D8     		bhi	.L126
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1201              		.loc 1 2791 0 is_stmt 0 discriminator 1
 1202 0062 203C     		subs	r4, r4, #32
 1203              	.LVL156:
 1204 0064 E4B2     		uxtb	r4, r4
 1205              	.LVL157:
 1206              	.L126:
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1207              		.loc 1 2792 0 is_stmt 1
 1208 0066 09F80540 		strb	r4, [r9, r5]
 1209 006a 0135     		adds	r5, r5, #1
 1210              	.LVL158:
 1211              	.L124:
 1212 006c 3346     		mov	r3, r6
 1213              	.LVL159:
 1214              	.L117:
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 1215              		.loc 1 2764 0
 1216 006e 5E1C     		adds	r6, r3, #1
 1217              	.LVL160:
 1218 0070 18F80340 		ldrb	r4, [r8, r3]	@ zero_extendqisi2
 1219              	.LVL161:
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 1220              		.loc 1 2765 0
 1221 0074 202C     		cmp	r4, #32
 1222 0076 DBD9     		bls	.L118
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 72


 1223              		.loc 1 2766 0
 1224 0078 5C2C     		cmp	r4, #92
 1225 007a 18BF     		it	ne
 1226 007c 2F2C     		cmpne	r4, #47
 1227 007e D1D0     		beq	.L119
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
 1228              		.loc 1 2770 0
 1229 0080 2E2C     		cmp	r4, #46
 1230 0082 18BF     		it	ne
 1231 0084 AF42     		cmpne	r7, r5
 1232 0086 DED8     		bhi	.L122
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1233              		.loc 1 2771 0
 1234 0088 2E3C     		subs	r4, r4, #46
 1235              	.LVL162:
 1236 008a 18BF     		it	ne
 1237 008c 0124     		movne	r4, #1
 1238              	.LVL163:
 1239 008e 0B2F     		cmp	r7, #11
 1240 0090 14BF     		ite	ne
 1241 0092 2746     		movne	r7, r4
 1242 0094 44F00107 		orreq	r7, r4, #1
 1243              	.LVL164:
 1244 0098 002F     		cmp	r7, #0
 1245 009a D1D0     		beq	.L137
 1246 009c 0620     		movs	r0, #6
 1247 009e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1248              	.LVL165:
 1249              	.L136:
2777:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 1250              		.loc 1 2777 0
 1251 00a2 803C     		subs	r4, r4, #128
 1252              	.LVL166:
 1253 00a4 0C4B     		ldr	r3, .L139+4
 1254 00a6 1C5D     		ldrb	r4, [r3, r4]	@ zero_extendqisi2
 1255              	.LVL167:
 1256 00a8 D0E7     		b	.L125
 1257              	.LVL168:
 1258              	.L135:
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1259              		.loc 1 2798 0
 1260 00aa 9BF82430 		ldrb	r3, [fp, #36]	@ zero_extendqisi2
 1261 00ae E52B     		cmp	r3, #229
 1262 00b0 07D0     		beq	.L138
 1263              	.L127:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1264              		.loc 1 2799 0
 1265 00b2 202C     		cmp	r4, #32
 1266 00b4 09D8     		bhi	.L132
 1267 00b6 0423     		movs	r3, #4
 1268              	.L128:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1269              		.loc 1 2799 0 is_stmt 0 discriminator 4
 1270 00b8 8BF82F30 		strb	r3, [fp, #47]
2801:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LFN != 0 */
 1271              		.loc 1 2801 0 is_stmt 1 discriminator 4
 1272 00bc 0020     		movs	r0, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 73


 1273 00be BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1274              	.LVL169:
 1275              	.L138:
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1276              		.loc 1 2798 0 discriminator 1
 1277 00c2 0523     		movs	r3, #5
 1278 00c4 8BF82430 		strb	r3, [fp, #36]
 1279 00c8 F3E7     		b	.L127
 1280              	.L132:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1281              		.loc 1 2799 0
 1282 00ca 0023     		movs	r3, #0
 1283 00cc F4E7     		b	.L128
 1284              	.LVL170:
 1285              	.L130:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1286              		.loc 1 2790 0
 1287 00ce 0620     		movs	r0, #6
 1288 00d0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1289              	.LVL171:
 1290              	.L140:
 1291              		.align	2
 1292              	.L139:
 1293 00d4 00000000 		.word	.LC0
 1294 00d8 00000000 		.word	.LANCHOR1
 1295              		.cfi_endproc
 1296              	.LFE175:
 1298              		.section	.text.get_ldnumber,"ax",%progbits
 1299              		.align	1
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1303              		.fpu fpv5-sp-d16
 1305              	get_ldnumber:
 1306              	.LFB177:
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 
2806:Middlewares/Third_Party/FatFs/src/ff.c **** 
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 
2808:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2809:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 
2812:Middlewares/Third_Party/FatFs/src/ff.c **** static
2813:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2816:Middlewares/Third_Party/FatFs/src/ff.c **** )
2817:Middlewares/Third_Party/FatFs/src/ff.c **** {
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns;
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj = &dp->obj;
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 
2824:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2825:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 74


2826:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = fs->cdir;				/* Start from current directory */
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2828:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 	{										/* With heading separator */
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj->n_frag = 0;	/* Invalidate last fragment counter of the object */
2835:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2836:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT && obj->sclust) {	/* Retrieve the sub-directory status if needed */
2837:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_scl = fs->cdc_scl;
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_size = fs->cdc_size;
2841:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_ofs = fs->cdc_ofs;
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_obj_dir(&dj, obj);
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
2845:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2846:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2847:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2848:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2862:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
2865:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;
2866:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2876:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2877:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2878:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_scl = obj->sclust;
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
2881:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_ofs = dp->blk_ofs;
2882:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Open next directory */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 75


2883:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
2886:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2894:Middlewares/Third_Party/FatFs/src/ff.c **** }
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 
2899:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2900:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2901:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 
2903:Middlewares/Third_Party/FatFs/src/ff.c **** static
2904:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** )
2907:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1307              		.loc 1 2907 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
 1312              	.LVL172:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2911:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const volid[] = {_VOLUME_STRS};
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2916:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 
2919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 1313              		.loc 1 2919 0
 1314 0000 0168     		ldr	r1, [r0]
 1315 0002 09B1     		cbz	r1, .L153
 1316 0004 0A46     		mov	r2, r1
 1317 0006 03E0     		b	.L142
 1318              	.L153:
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1319              		.loc 1 2910 0
 1320 0008 4FF0FF33 		mov	r3, #-1
 1321 000c 08E0     		b	.L150
 1322              	.LVL173:
 1323              	.L144:
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 1324              		.loc 1 2920 0 discriminator 3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 76


 1325 000e 0132     		adds	r2, r2, #1
 1326              	.LVL174:
 1327              	.L142:
 1328              		.loc 1 2920 0 is_stmt 0 discriminator 1
 1329 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1330 0012 3A2B     		cmp	r3, #58
 1331 0014 18BF     		it	ne
 1332 0016 202B     		cmpne	r3, #32
 1333 0018 F9D8     		bhi	.L144
2921:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 1334              		.loc 1 2921 0 is_stmt 1
 1335 001a 3A2B     		cmp	r3, #58
 1336 001c 02D0     		beq	.L154
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0';
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2926:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
2928:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2929:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2930:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
2934:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = volid[i]; tp = *path;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2937:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2940:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2944:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2946:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
2947:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2948:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
 1337              		.loc 1 2951 0
 1338 001e 0023     		movs	r3, #0
 1339              	.LVL175:
 1340              	.L150:
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2954:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2955:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1341              		.loc 1 2955 0
 1342 0020 1846     		mov	r0, r3
 1343              	.LVL176:
 1344 0022 7047     		bx	lr
 1345              	.LVL177:
 1346              	.L154:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 77


2907:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 1347              		.loc 1 2907 0
 1348 0024 10B4     		push	{r4}
 1349              	.LCFI17:
 1350              		.cfi_def_cfa_offset 4
 1351              		.cfi_offset 4, -4
 1352              	.LVL178:
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 1353              		.loc 1 2923 0
 1354 0026 4C1C     		adds	r4, r1, #1
 1355              	.LVL179:
 1356 0028 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1357 002a 303B     		subs	r3, r3, #48
 1358              	.LVL180:
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1359              		.loc 1 2924 0
 1360 002c 092B     		cmp	r3, #9
 1361 002e 98BF     		it	ls
 1362 0030 A242     		cmpls	r2, r4
 1363 0032 07D1     		bne	.L147
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
 1364              		.loc 1 2925 0
 1365 0034 012B     		cmp	r3, #1
 1366 0036 08D8     		bhi	.L148
 1367              	.LVL181:
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1368              		.loc 1 2927 0
 1369 0038 0132     		adds	r2, r2, #1
 1370              	.LVL182:
 1371 003a 0260     		str	r2, [r0]
 1372              	.LVL183:
 1373              	.L141:
 1374              		.loc 1 2955 0
 1375 003c 1846     		mov	r0, r3
 1376              	.LVL184:
 1377 003e 5DF8044B 		ldr	r4, [sp], #4
 1378              	.LCFI18:
 1379              		.cfi_remember_state
 1380              		.cfi_restore 4
 1381              		.cfi_def_cfa_offset 0
 1382              	.LVL185:
 1383 0042 7047     		bx	lr
 1384              	.LVL186:
 1385              	.L147:
 1386              	.LCFI19:
 1387              		.cfi_restore_state
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1388              		.loc 1 2910 0
 1389 0044 4FF0FF33 		mov	r3, #-1
 1390              	.LVL187:
 1391 0048 F8E7     		b	.L141
 1392              	.LVL188:
 1393              	.L148:
 1394 004a 4FF0FF33 		mov	r3, #-1
 1395              	.LVL189:
 1396 004e F5E7     		b	.L141
 1397              		.cfi_endproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 78


 1398              	.LFE177:
 1400              		.section	.text.putc_init,"ax",%progbits
 1401              		.align	1
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv5-sp-d16
 1407              	putc_init:
 1408              	.LFB201:
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2961:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2962:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2963:Middlewares/Third_Party/FatFs/src/ff.c **** 
2964:Middlewares/Third_Party/FatFs/src/ff.c **** static
2965:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2967:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
2968:Middlewares/Third_Party/FatFs/src/ff.c **** )
2969:Middlewares/Third_Party/FatFs/src/ff.c **** {
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
2972:Middlewares/Third_Party/FatFs/src/ff.c **** 
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed 
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
2978:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2979:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;
2981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2982:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 2;
2983:Middlewares/Third_Party/FatFs/src/ff.c **** }
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** 
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 
2988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2989:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2990:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 
2992:Middlewares/Third_Party/FatFs/src/ff.c **** static
2993:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* !=0: Check write protection for write access */
2997:Middlewares/Third_Party/FatFs/src/ff.c **** )
2998:Middlewares/Third_Party/FatFs/src/ff.c **** {
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
3002:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
3003:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 79


3004:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
3019:Middlewares/Third_Party/FatFs/src/ff.c **** 
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
3028:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
3042:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3043:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS					/* Get sector size (multiple sector size cfg only) */
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (SS(fs) > _MAX_SS || SS(fs) < _MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3047:Middlewares/Third_Party/FatFs/src/ff.c **** 
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3056:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {							/* Find an FAT volume */
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 80


3061:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
3062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found (bsect). Following code initializes the file system object */
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 
3068:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1) {
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 		QWORD maxlba;
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3074:Middlewares/Third_Party/FatFs/src/ff.c **** 
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT revision (Mu
3076:Middlewares/Third_Party/FatFs/src/ff.c **** 
3077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_NO_FILESYSTEM;
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-bit LBA) */
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 
3084:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
3085:Middlewares/Third_Party/FatFs/src/ff.c **** 
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3091:Middlewares/Third_Party/FatFs/src/ff.c **** 
3092:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3097:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;
3098:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
3099:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3100:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3102:Middlewares/Third_Party/FatFs/src/ff.c **** 
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Check if bitmap location is in assumption (at the first cluster) */
3104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, clust2sect(fs, fs->dirbase)) != FR_OK) return FR_DISK_ERR;
3105:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < SS(fs); i += SZDIRE) {
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->win[i] == 0x81 && ld_dword(fs->win + i + 20) == 2) break;	/* 81 entry with cluster #2? *
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == SS(fs)) return FR_NO_FILESYSTEM;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_EXFAT;			/* FAT sub-type */
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 81


3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine the FAT sub type */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3157:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 
3165:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3166:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get FSINFO if available */
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
3169:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
3173:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 82


3175:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3181:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3182:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3184:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3187:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* (_FS_NOFSINFO & 3) != 3 */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;		/* FAT sub-type */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3197:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3198:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3199:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
3200:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;			/* Initialize current directory */
3201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3202:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0			/* Clear file lock semaphores */
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3205:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3206:Middlewares/Third_Party/FatFs/src/ff.c **** }
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 
3211:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3212:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
3213:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 
3215:Middlewares/Third_Party/FatFs/src/ff.c **** static
3216:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
3219:Middlewares/Third_Party/FatFs/src/ff.c **** )
3220:Middlewares/Third_Party/FatFs/src/ff.c **** {
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!obj || !obj->fs || !obj->fs->fs_type || obj->fs->id != obj->id || (disk_status(obj->fs->drv) 
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INVALID_OBJECT;	/* The object is invalid */
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = obj->fs;			/* Owner file sytem object */
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		ENTER_FF(obj->fs);		/* Lock file system */
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;			/* Valid object */
3230:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 83


3232:Middlewares/Third_Party/FatFs/src/ff.c **** }
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 
3235:Middlewares/Third_Party/FatFs/src/ff.c **** 
3236:Middlewares/Third_Party/FatFs/src/ff.c **** 
3237:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------------------------------------
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 
3239:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions (FatFs API)
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 
3241:Middlewares/Third_Party/FatFs/src/ff.c **** ----------------------------------------------------------------------------*/
3242:Middlewares/Third_Party/FatFs/src/ff.c **** 
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 
3245:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3246:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
3247:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3248:Middlewares/Third_Party/FatFs/src/ff.c **** 
3249:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
3250:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
3252:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3253:Middlewares/Third_Party/FatFs/src/ff.c **** )
3254:Middlewares/Third_Party/FatFs/src/ff.c **** {
3255:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
3256:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3257:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3258:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** 
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
3267:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
3269:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3270:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
3272:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
3278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
3280:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
3283:Middlewares/Third_Party/FatFs/src/ff.c **** 
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3288:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 84


3289:Middlewares/Third_Party/FatFs/src/ff.c **** 
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 
3293:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3294:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
3295:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 
3297:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
3299:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
3301:Middlewares/Third_Party/FatFs/src/ff.c **** )
3302:Middlewares/Third_Party/FatFs/src/ff.c **** {
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3305:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3306:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3307:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl, bcs, clst, sc;
3308:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs;
3309:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 
3312:Middlewares/Third_Party/FatFs/src/ff.c **** 
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
3314:Middlewares/Third_Party/FatFs/src/ff.c **** 
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= _FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_A
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3322:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3327:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3328:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3331:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3333:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
3337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3338:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3339:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
3341:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3342:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
3344:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3345:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 85


3346:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
3348:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
3350:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3351:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
3354:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get current allocation info */
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.fs = fs;
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3361:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.n_frag = 0;
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Initialize directory entry block */
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_CrtTime, dw);	/* Set created time */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_CrtTime10] = 0;
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, dw);	/* Set modified time */
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_ModTime10] = 0;
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;				/* Reset attribute */
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, 0);		/* Reset file allocation info */
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_FileSize, 0);
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_ValidFileSize, 0);
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK && fp->obj.sclust) {		/* Remove the cluster chain if exist */
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3377:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
3378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean directory info */
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_CrtTime, dw);	/* Set created time */
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3388:Middlewares/Third_Party/FatFs/src/ff.c **** 
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cl) {							/* Remove the cluster chain if exist */
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Following succeeded */
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 86


3403:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* R/O violation */
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3408:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
3416:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3418:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
3419:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3421:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* R/O configuration */
3422:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3426:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3427:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3430:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3431:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3432:Middlewares/Third_Party/FatFs/src/ff.c **** 
3433:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3437:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3438:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_ofs = dj.blk_ofs;
3439:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
3440:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3441:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3442:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3443:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3445:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3448:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3450:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.fs = fs;	 	/* Validate the file object */
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3458:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fp->buf, 0, _MAX_SS);	/* Clear sector buffer */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 87


3460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
3469:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
3474:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3475:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
3476:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3477:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_read(fs->drv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
3478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3482:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3487:Middlewares/Third_Party/FatFs/src/ff.c **** 
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
3489:Middlewares/Third_Party/FatFs/src/ff.c **** 
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3491:Middlewares/Third_Party/FatFs/src/ff.c **** }
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 
3496:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3497:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
3498:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 
3500:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 	/* Pointer to the file object */
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,	/* Pointer to data buffer */
3503:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,	/* Number of bytes to read */
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br	/* Pointer to number of bytes read */
3505:Middlewares/Third_Party/FatFs/src/ff.c **** )
3506:Middlewares/Third_Party/FatFs/src/ff.c **** {
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3509:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc, csect;
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *rbuff = (BYTE*)buff;
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 88


3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
3530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3534:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3541:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
3542:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3546:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3552:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
3553:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->wflag && fs->winsect - sect < cc) {
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3562:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3566:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
3568:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 89


3574:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3576:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3578:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
3581:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3584:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3586:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 
3589:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3590:Middlewares/Third_Party/FatFs/src/ff.c **** }
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 
3592:Middlewares/Third_Party/FatFs/src/ff.c **** 
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 
3595:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3596:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3597:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
3598:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
3602:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void* buff,	/* Pointer to the data to be written */
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
3605:Middlewares/Third_Party/FatFs/src/ff.c **** )
3606:Middlewares/Third_Party/FatFs/src/ff.c **** {
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3608:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3609:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc, csect;
3611:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
3618:Middlewares/Third_Party/FatFs/src/ff.c **** 
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check fptr wrap-around (file size cannot reach 4GiB on FATxx) */
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((!_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 90


3631:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* On the middle or end of the file */
3635:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3639:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3650:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
3652:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3657:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3661:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3666:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3667:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3668:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3669:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
3671:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 0;
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3673:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3678:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3679:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3683:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->winsect = sect;
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 91


3688:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3694:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
3699:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
3703:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
3706:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3712:Middlewares/Third_Party/FatFs/src/ff.c **** }
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 
3717:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3718:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
3719:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 
3721:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3723:Middlewares/Third_Party/FatFs/src/ff.c **** )
3724:Middlewares/Third_Party/FatFs/src/ff.c **** {
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3728:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3729:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3730:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3731:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3732:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
3737:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
3740:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3741:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3742:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3743:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
3744:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();				/* Modified time */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 92


3745:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3747:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
3748:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 					INIT_NAMBUF(fs);
3753:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_obj_dir(&dj, &fp->obj);	/* Load directory entry block */
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive bit */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation info */
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);
3760:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_ModTime10] = 0;
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&dj);	/* Restore it to the directory */
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = sync_fs(fs);
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag &= (BYTE)~FA_MODIFIED;
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 					FREE_NAMBUF();
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3772:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, fp->dir_sect);
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3783:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3786:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3789:Middlewares/Third_Party/FatFs/src/ff.c **** 
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3791:Middlewares/Third_Party/FatFs/src/ff.c **** }
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 
3793:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 
3798:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3799:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
3800:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 93


3802:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object to be closed */
3804:Middlewares/Third_Party/FatFs/src/ff.c **** )
3805:Middlewares/Third_Party/FatFs/src/ff.c **** {
3806:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3808:Middlewares/Third_Party/FatFs/src/ff.c **** 
3809:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3812:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3816:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->obj.lockid);	/* Decrement file open counter */
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
3819:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.fs = 0;			/* Invalidate file object */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3823:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
3825:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3829:Middlewares/Third_Party/FatFs/src/ff.c **** }
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 
3834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
3835:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3836:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
3837:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 
3839:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
3842:Middlewares/Third_Party/FatFs/src/ff.c **** )
3843:Middlewares/Third_Party/FatFs/src/ff.c **** {
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3845:Middlewares/Third_Party/FatFs/src/ff.c **** 
3846:Middlewares/Third_Party/FatFs/src/ff.c **** 
3847:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3848:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3850:Middlewares/Third_Party/FatFs/src/ff.c **** 
3851:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 
3853:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3854:Middlewares/Third_Party/FatFs/src/ff.c **** }
3855:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
3858:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 94


3859:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3860:Middlewares/Third_Party/FatFs/src/ff.c **** )
3861:Middlewares/Third_Party/FatFs/src/ff.c **** {
3862:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3865:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3866:Middlewares/Third_Party/FatFs/src/ff.c **** 
3867:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
3869:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3872:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
3876:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_scl = dj.obj.c_scl;
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_size = dj.obj.c_size;
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_ofs = dj.obj.c_ofs;
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3882:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
3885:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
3887:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_ofs = dj.blk_ofs;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3892:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3893:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3896:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3900:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3901:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3903:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3906:Middlewares/Third_Party/FatFs/src/ff.c **** }
3907:Middlewares/Third_Party/FatFs/src/ff.c **** 
3908:Middlewares/Third_Party/FatFs/src/ff.c **** 
3909:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
3910:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3912:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3913:Middlewares/Third_Party/FatFs/src/ff.c **** )
3914:Middlewares/Third_Party/FatFs/src/ff.c **** {
3915:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 95


3916:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3920:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3921:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3923:Middlewares/Third_Party/FatFs/src/ff.c **** 
3924:Middlewares/Third_Party/FatFs/src/ff.c **** 
3925:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3931:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root path)
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
3936:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dj.sect);
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 0);
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {							/* Find the entry links to the child directory */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_read(&dj, 0);
3944:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
3946:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_next(&dj, 0);
3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (res == FR_OK);
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < n + 3) {
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
3954:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (n) buff[--i] = fno.fname[--n];
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 				buff[--i] = '/';
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3961:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3964:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3970:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
3971:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3972:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 96


3973:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3974:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3975:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3976:Middlewares/Third_Party/FatFs/src/ff.c **** 
3977:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3978:Middlewares/Third_Party/FatFs/src/ff.c **** }
3979:Middlewares/Third_Party/FatFs/src/ff.c **** 
3980:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3982:Middlewares/Third_Party/FatFs/src/ff.c **** 
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 
3985:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3986:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3987:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
3988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3989:Middlewares/Third_Party/FatFs/src/ff.c **** 
3990:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
3991:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File pointer from top of file */
3993:Middlewares/Third_Party/FatFs/src/ff.c **** )
3994:Middlewares/Third_Party/FatFs/src/ff.c **** {
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3996:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3997:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect;
3998:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ifptr;
3999:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
4001:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4002:Middlewares/Third_Party/FatFs/src/ff.c **** 
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
4004:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
4005:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4008:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4009:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
4011:Middlewares/Third_Party/FatFs/src/ff.c **** 
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4020:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 97


4030:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4048:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4049:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4054:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fs->drv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current sec
4056:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sect = dsc;
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4059:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4060:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
4062:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4063:Middlewares/Third_Party/FatFs/src/ff.c **** 
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
4065:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4067:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4GiB-1 if at FATx
4068:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->obj.objsize && (_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, cl
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
4071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
4081:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;					/* start from the first cluster */
4083:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 98


4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4090:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
4096:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->obj.objsize = fp->fptr;
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag |= FA_MODIFIED;
4101:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4107:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
4110:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_READONLY && fp->fptr > fp->obj.objsize) {		/* Set file change flag if the file size is e
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
4126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
4128:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4129:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4133:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4134:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4135:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
4136:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = nsect;
4138:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4139:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4140:Middlewares/Third_Party/FatFs/src/ff.c **** 
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4142:Middlewares/Third_Party/FatFs/src/ff.c **** }
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 99


4144:Middlewares/Third_Party/FatFs/src/ff.c **** 
4145:Middlewares/Third_Party/FatFs/src/ff.c **** 
4146:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
4147:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4148:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
4149:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 
4151:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4154:Middlewares/Third_Party/FatFs/src/ff.c **** )
4155:Middlewares/Third_Party/FatFs/src/ff.c **** {
4156:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4157:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4158:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj;
4159:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj = &dp->obj;
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
4174:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4175:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4176:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_scl = obj->sclust;							/* Get containing directory inforamation */
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_ofs = dp->blk_ofs;
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* This object is a file */
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
4194:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = 0;	/* Root directory need not to be locked */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 100


4201:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4212:Middlewares/Third_Party/FatFs/src/ff.c **** }
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 
4214:Middlewares/Third_Party/FatFs/src/ff.c **** 
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 
4217:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4218:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
4219:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 
4221:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
4223:Middlewares/Third_Party/FatFs/src/ff.c **** )
4224:Middlewares/Third_Party/FatFs/src/ff.c **** {
4225:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);			/* Check validity of the file object */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4231:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.lockid) {				/* Decrement sub-directory open counter */
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
4234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
4236:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.fs = 0;			/* Invalidate directory object */
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4240:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4245:Middlewares/Third_Party/FatFs/src/ff.c **** }
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 
4250:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4251:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
4252:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4253:Middlewares/Third_Party/FatFs/src/ff.c **** 
4254:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4257:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 101


4258:Middlewares/Third_Party/FatFs/src/ff.c **** {
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 
4263:Middlewares/Third_Party/FatFs/src/ff.c **** 
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_NAMBUF(fs);
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_NAMBUF();
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4281:Middlewares/Third_Party/FatFs/src/ff.c **** }
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 
4285:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
4286:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4287:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find Next File                                                        */
4288:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 
4290:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
4293:Middlewares/Third_Party/FatFs/src/ff.c **** )
4294:Middlewares/Third_Party/FatFs/src/ff.c **** {
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4296:Middlewares/Third_Party/FatFs/src/ff.c **** 
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 
4298:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
4302:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && _USE_FIND == 2
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4304:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4307:Middlewares/Third_Party/FatFs/src/ff.c **** }
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 
4311:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find First File                                                       */
4313:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 102


4315:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4320:Middlewares/Third_Party/FatFs/src/ff.c **** )
4321:Middlewares/Third_Party/FatFs/src/ff.c **** {
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4326:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4331:Middlewares/Third_Party/FatFs/src/ff.c **** }
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 
4333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 
4337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
4338:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4339:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
4340:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 
4342:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4345:Middlewares/Third_Party/FatFs/src/ff.c **** )
4346:Middlewares/Third_Party/FatFs/src/ff.c **** {
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4348:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4349:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 
4351:Middlewares/Third_Party/FatFs/src/ff.c **** 
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &dj.obj.fs, 0);
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
4356:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.obj.fs, res);
4368:Middlewares/Third_Party/FatFs/src/ff.c **** }
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 103


4372:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4373:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4374:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
4375:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 
4377:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4379:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4380:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
4381:Middlewares/Third_Party/FatFs/src/ff.c **** )
4382:Middlewares/Third_Party/FatFs/src/ff.c **** {
4383:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4384:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4385:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nfree, clst, sect, stat;
4386:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
4387:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
4388:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4389:Middlewares/Third_Party/FatFs/src/ff.c **** 
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
4395:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) {
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			nfree = 0;
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(&obj, clst);
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4410:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan bitmap table */
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 					BYTE bm;
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 					UINT b;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent - 2;
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					sect = fs->database;
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0;
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0 && (res = move_window(fs, sect++)) != FR_OK) break;
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4421:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!(bm & 1)) nfree++;
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 							bm >>= 1;
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = (i + 1) % SS(fs);
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (clst);
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4427:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4428:Middlewares/Third_Party/FatFs/src/ff.c **** 				{	/* FAT16/32: Sector alighed FAT entries */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 104


4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent; sect = fs->fatbase;
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0) {
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_FAT16) {
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							if ((ld_dword(p) & 0x0FFFFFFF) == 0) nfree++;
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (--clst);
4446:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4447:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = nfree;			/* Return the free clusters */
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4452:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 
4454:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4455:Middlewares/Third_Party/FatFs/src/ff.c **** }
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 
4457:Middlewares/Third_Party/FatFs/src/ff.c **** 
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 
4460:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4461:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
4462:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 
4464:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4466:Middlewares/Third_Party/FatFs/src/ff.c **** )
4467:Middlewares/Third_Party/FatFs/src/ff.c **** {
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4470:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
4471:Middlewares/Third_Party/FatFs/src/ff.c **** 
4472:Middlewares/Third_Party/FatFs/src/ff.c **** 
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = get_fat(&fp->obj, fp->clust);
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 105


4486:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current R/W point */
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
4492:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) ABORT(fs, res);
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4503:Middlewares/Third_Party/FatFs/src/ff.c **** 
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4505:Middlewares/Third_Party/FatFs/src/ff.c **** }
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 
4509:Middlewares/Third_Party/FatFs/src/ff.c **** 
4510:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4511:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File/Directory                                               */
4512:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4513:Middlewares/Third_Party/FatFs/src/ff.c **** 
4514:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
4516:Middlewares/Third_Party/FatFs/src/ff.c **** )
4517:Middlewares/Third_Party/FatFs/src/ff.c **** {
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4522:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4524:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4525:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 
4527:Middlewares/Third_Party/FatFs/src/ff.c **** 
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4533:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4535:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4536:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4537:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4539:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 106


4543:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_RDO) {
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4547:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4548:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4550:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj.fs = fs;
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.sclust = dclst = ld_dword(fs->dirbuf + XDIR_FstClus);
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4556:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 					dclst = ld_clust(fs, dj.dir);
4559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4560:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
4561:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == fs->cdir) {		 		/* Is it the current directory? */
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.fs = fs;						/* Open the sub-directory */
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
4569:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_EXFAT) {
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.objsize = obj.objsize;
4572:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.stat = obj.stat;
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4574:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 0);
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
4580:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4581:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4585:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
4587:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&obj, dclst, 0);
4589:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&dj.obj, dclst, 0);
4591:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(fs);
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4595:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4598:Middlewares/Third_Party/FatFs/src/ff.c **** 
4599:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 107


4600:Middlewares/Third_Party/FatFs/src/ff.c **** }
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 
4602:Middlewares/Third_Party/FatFs/src/ff.c **** 
4603:Middlewares/Third_Party/FatFs/src/ff.c **** 
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 
4605:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4606:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
4607:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 
4609:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
4611:Middlewares/Third_Party/FatFs/src/ff.c **** )
4612:Middlewares/Third_Party/FatFs/src/ff.c **** {
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4615:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
4617:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
4618:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm;
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4620:Middlewares/Third_Party/FatFs/src/ff.c **** 
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 
4622:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
4630:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
4631:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
4645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 108


4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4668:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)dj.obj.objsize);	/* File size needs to be valid */
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)dj.obj.objsize);
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag (contiguous) */
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4678:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4679:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = dj.dir;
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4688:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4697:Middlewares/Third_Party/FatFs/src/ff.c **** }
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 
4702:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4703:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename a File/Directory                                               */
4704:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 
4706:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
4709:Middlewares/Third_Party/FatFs/src/ff.c **** )
4710:Middlewares/Third_Party/FatFs/src/ff.c **** {
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
4713:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 109


4714:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[_FS_EXFAT ? SZDIRE * 2 : 24], *dir;
4715:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
4716:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4717:Middlewares/Third_Party/FatFs/src/ff.c **** 
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	get_ldnumber(&path_new);						/* Snip drive number of new name off */
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
4726:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
4729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4730:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Object to be renamed is found */
4732:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT */
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 				BYTE nf, nn;
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 				WORD nh;
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof djo);
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4741:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4743:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4745:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);
4749:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
4750:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
4751:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4752:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&djn);
4753:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4754:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4755:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4756:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4757:Middlewares/Third_Party/FatFs/src/ff.c **** 			{	/* At FAT12/FAT16/FAT32 */
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about the object except name */
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4763:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4767:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 110


4771:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
4775:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
4776:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(fs, dw);
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
4783:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
4784:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4785:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4786:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4787:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4792:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4793:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4794:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of the critical section */
4795:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4796:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4797:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4798:Middlewares/Third_Party/FatFs/src/ff.c **** 
4799:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4800:Middlewares/Third_Party/FatFs/src/ff.c **** }
4801:Middlewares/Third_Party/FatFs/src/ff.c **** 
4802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4803:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
4804:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
4805:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
4806:Middlewares/Third_Party/FatFs/src/ff.c **** 
4807:Middlewares/Third_Party/FatFs/src/ff.c **** 
4808:Middlewares/Third_Party/FatFs/src/ff.c **** 
4809:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_CHMOD && !_FS_READONLY
4810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4811:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
4812:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4813:Middlewares/Third_Party/FatFs/src/ff.c **** 
4814:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
4815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4816:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
4817:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
4818:Middlewares/Third_Party/FatFs/src/ff.c **** )
4819:Middlewares/Third_Party/FatFs/src/ff.c **** {
4820:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4821:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4822:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4823:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4824:Middlewares/Third_Party/FatFs/src/ff.c **** 
4825:Middlewares/Third_Party/FatFs/src/ff.c **** 
4826:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4827:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 111


4828:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4829:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4830:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4831:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4832:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4833:Middlewares/Third_Party/FatFs/src/ff.c **** 			mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
4834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4835:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4836:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->dirbuf[XDIR_Attr] = (attr & mask) | (fs->dirbuf[XDIR_Attr] & (BYTE)~mask);	/* Apply attribu
4837:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4838:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4839:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4840:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4841:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[DIR_Attr] = (attr & mask) | (dj.dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change 
4842:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4843:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4844:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4845:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4846:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4847:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4848:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4849:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4850:Middlewares/Third_Party/FatFs/src/ff.c **** 
4851:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4852:Middlewares/Third_Party/FatFs/src/ff.c **** }
4853:Middlewares/Third_Party/FatFs/src/ff.c **** 
4854:Middlewares/Third_Party/FatFs/src/ff.c **** 
4855:Middlewares/Third_Party/FatFs/src/ff.c **** 
4856:Middlewares/Third_Party/FatFs/src/ff.c **** 
4857:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4858:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
4859:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4860:Middlewares/Third_Party/FatFs/src/ff.c **** 
4861:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
4862:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
4863:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
4864:Middlewares/Third_Party/FatFs/src/ff.c **** )
4865:Middlewares/Third_Party/FatFs/src/ff.c **** {
4866:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4867:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4868:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4869:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4870:Middlewares/Third_Party/FatFs/src/ff.c **** 
4871:Middlewares/Third_Party/FatFs/src/ff.c **** 
4872:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4873:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4874:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4875:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4876:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4877:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4879:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4880:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4881:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(fs->dirbuf + XDIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4882:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4883:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4884:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 112


4885:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4886:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(dj.dir + DIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4887:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4889:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4890:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4891:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4892:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4893:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4895:Middlewares/Third_Party/FatFs/src/ff.c **** 
4896:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4897:Middlewares/Third_Party/FatFs/src/ff.c **** }
4898:Middlewares/Third_Party/FatFs/src/ff.c **** 
4899:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_CHMOD && !_FS_READONLY */
4900:Middlewares/Third_Party/FatFs/src/ff.c **** 
4901:Middlewares/Third_Party/FatFs/src/ff.c **** 
4902:Middlewares/Third_Party/FatFs/src/ff.c **** 
4903:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
4904:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4905:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Volume Label                                                      */
4906:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4907:Middlewares/Third_Party/FatFs/src/ff.c **** 
4908:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
4909:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4910:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
4911:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
4912:Middlewares/Third_Party/FatFs/src/ff.c **** )
4913:Middlewares/Third_Party/FatFs/src/ff.c **** {
4914:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4915:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4917:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT si, di;
4918:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE || _FS_EXFAT
4919:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
4920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4921:Middlewares/Third_Party/FatFs/src/ff.c **** 
4922:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4923:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4924:Middlewares/Third_Party/FatFs/src/ff.c **** 
4925:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
4926:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
4927:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs; dj.obj.sclust = 0;	/* Open root directory */
4928:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
4929:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4930:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	res = dir_read(&dj, 1);			/* Find a volume label entry */
4931:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	if (res == FR_OK) {
4932:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4933:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4934:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (si = di = 0; si < dj.dir[XDIR_NumLabel]; si++) {	/* Extract volume label from 83 entry */
4935:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ld_word(dj.dir + XDIR_Label + si * 2);
4936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4937:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = w;
4938:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4939:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ff_convert(w, 0);	/* Unicode -> OEM */
4940:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (w == 0) w = '?';	/* Replace wrong character */
4941:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_DF1S && w >= 0x100) label[di++] = (char)(w >> 8);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 113


4942:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = (char)w;
4943:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4944:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4945:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[di] = 0;
4946:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4947:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4948:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4949:Middlewares/Third_Party/FatFs/src/ff.c **** 					si = di = 0;		/* Extract volume label from AM_VOL entry with code comversion */
4950:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4951:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4952:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = (si < 11) ? dj.dir[si++] : ' ';
4953:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsDBCS1(w) && si < 11 && IsDBCS2(dj.dir[si])) {
4954:Middlewares/Third_Party/FatFs/src/ff.c **** 							w = w << 8 | dj.dir[si++];
4955:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4956:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = ff_convert(w, 1);	/* OEM -> Unicode */
4957:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4958:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = dj.dir[si++];
4959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4960:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (di < 11);
4961:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {				/* Truncate trailing spaces */
4962:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di] = 0;
4963:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (di == 0) break;
4964:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (label[--di] == ' ');
4965:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4966:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4967:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {	/* No label entry and return nul string */
4969:Middlewares/Third_Party/FatFs/src/ff.c **** 			label[0] = 0;
4970:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4971:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4972:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4973:Middlewares/Third_Party/FatFs/src/ff.c **** 
4974:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
4975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
4976:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, fs->volbase);
4977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4978:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (fs->fs_type) {
4979:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_EXFAT:
4980:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BPB_VolIDEx; break;
4981:Middlewares/Third_Party/FatFs/src/ff.c **** 
4982:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_FAT32:
4983:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID32; break;
4984:Middlewares/Third_Party/FatFs/src/ff.c **** 
4985:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
4986:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID;
4987:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4988:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = ld_dword(fs->win + di);
4989:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4990:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4991:Middlewares/Third_Party/FatFs/src/ff.c **** 
4992:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4993:Middlewares/Third_Party/FatFs/src/ff.c **** }
4994:Middlewares/Third_Party/FatFs/src/ff.c **** 
4995:Middlewares/Third_Party/FatFs/src/ff.c **** 
4996:Middlewares/Third_Party/FatFs/src/ff.c **** 
4997:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 114


4999:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set Volume Label                                                      */
5000:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5001:Middlewares/Third_Party/FatFs/src/ff.c **** 
5002:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
5003:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
5004:Middlewares/Third_Party/FatFs/src/ff.c **** )
5005:Middlewares/Third_Party/FatFs/src/ff.c **** {
5006:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
5008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5009:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE dirvn[22];
5010:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, slen;
5011:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
5012:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char badchr[] = "\"*+,.:;<=>\?[]|\x7F";
5013:Middlewares/Third_Party/FatFs/src/ff.c **** 
5014:Middlewares/Third_Party/FatFs/src/ff.c **** 
5015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
5016:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&label, &fs, FA_WRITE);
5017:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
5018:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
5019:Middlewares/Third_Party/FatFs/src/ff.c **** 
5020:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get length of given volume label */
5021:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (slen = 0; (UINT)label[slen] >= ' '; slen++) ;	/* Get name length */
5022:Middlewares/Third_Party/FatFs/src/ff.c **** 
5023:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5024:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
5025:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = j = 0; i < slen; ) {	/* Create volume label in directory form */
5026:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = label[i++];
5027:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
5028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w)) {
5029:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5030:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5031:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 1);
5032:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w == 0 || chk_chr(badchr, w) || j == 22) {	/* Check validity check validity of the volume la
5034:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(fs, FR_INVALID_NAME);
5035:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5036:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirvn + j, w); j += 2;
5037:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5038:Middlewares/Third_Party/FatFs/src/ff.c **** 		slen = j;
5039:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5040:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5041:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
5042:Middlewares/Third_Party/FatFs/src/ff.c **** 		for ( ; slen && label[slen - 1] == ' '; slen--) ;	/* Remove trailing spaces */
5043:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
5044:Middlewares/Third_Party/FatFs/src/ff.c **** 			dirvn[0] = 0; i = j = 0;	/* Create volume label in directory form */
5045:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
5046:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5047:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(label[i++]), 0);
5048:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5049:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (BYTE)label[i++];
5050:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsDBCS1(w)) {
5051:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (j < 10 && i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5052:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5053:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
5054:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
5055:Middlewares/Third_Party/FatFs/src/ff.c **** #else
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 115


5056:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
5057:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
5058:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
5059:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5060:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
5061:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5062:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5064:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0 || chk_chr(badchr, w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) {	/* Reject invalid ch
5065:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
5066:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x100) dirvn[j++] = (BYTE)(w >> 8);
5068:Middlewares/Third_Party/FatFs/src/ff.c **** 				dirvn[j++] = (BYTE)w;
5069:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (i < slen);
5070:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j < 11) dirvn[j++] = ' ';	/* Fill remaining name field */
5071:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dirvn[0] == DDEM) LEAVE_FF(fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
5072:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5073:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5074:Middlewares/Third_Party/FatFs/src/ff.c **** 
5075:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
5076:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.sclust = 0;		/* Open root directory */
5077:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
5078:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5079:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);	/* Get volume label entry */
5080:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
5081:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5082:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);	/* Change the volume label */
5083:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5084:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5085:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {
5086:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dj.dir, dirvn, 11);	/* Change the volume label */
5087:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5088:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Name] = DDEM;	/* Remove the volume label */
5089:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5090:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5091:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
5092:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(fs);
5093:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* No volume label entry is found or error */
5094:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
5095:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
5096:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {	/* Create a volume label entry */
5097:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry */
5098:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
5099:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZDIRE);	/* Clear the entry */
5100:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5101:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_Type] = 0x83;		/* Create 83 entry */
5102:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);
5103:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5104:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
5105:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[DIR_Attr] = AM_VOL;		/* Create volume label entry */
5106:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir, dirvn, 11);
5107:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
5108:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
5109:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(fs);
5110:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5111:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5112:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 116


5113:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5114:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5115:Middlewares/Third_Party/FatFs/src/ff.c **** 
5116:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5117:Middlewares/Third_Party/FatFs/src/ff.c **** }
5118:Middlewares/Third_Party/FatFs/src/ff.c **** 
5119:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
5120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
5121:Middlewares/Third_Party/FatFs/src/ff.c **** 
5122:Middlewares/Third_Party/FatFs/src/ff.c **** 
5123:Middlewares/Third_Party/FatFs/src/ff.c **** 
5124:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_EXPAND && !_FS_READONLY
5125:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5126:Middlewares/Third_Party/FatFs/src/ff.c **** /* Allocate a Contiguous Blocks to the File                              */
5127:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5128:Middlewares/Third_Party/FatFs/src/ff.c **** 
5129:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_expand (
5130:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
5131:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t fsz,	/* File size to be expanded to */
5132:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt		/* Operation mode 0:Find and prepare or 1:Find and allocate */
5133:Middlewares/Third_Party/FatFs/src/ff.c **** )
5134:Middlewares/Third_Party/FatFs/src/ff.c **** {
5135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5137:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, stcl, scl, ncl, tcl, lclst;
5138:Middlewares/Third_Party/FatFs/src/ff.c **** 
5139:Middlewares/Third_Party/FatFs/src/ff.c **** 
5140:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5141:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5142:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fsz == 0 || fp->obj.objsize != 0 || !(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);
5143:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5144:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type != FS_EXFAT && fsz >= 0x100000000) LEAVE_FF(fs, FR_DENIED);	/* Check if in size li
5145:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5146:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (DWORD)fs->csize * SS(fs);	/* Cluster size */
5147:Middlewares/Third_Party/FatFs/src/ff.c **** 	tcl = (DWORD)(fsz / n) + ((fsz & (n - 1)) ? 1 : 0);	/* Number of clusters required */
5148:Middlewares/Third_Party/FatFs/src/ff.c **** 	stcl = fs->last_clst; lclst = 0;
5149:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stcl < 2 || stcl >= fs->n_fatent) stcl = 2;
5150:Middlewares/Third_Party/FatFs/src/ff.c **** 
5151:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5152:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
5153:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = find_bitmap(fs, stcl, tcl);			/* Find a contiguous cluster block */
5154:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0) res = FR_DENIED;				/* No contiguous cluster block was found */
5155:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0xFFFFFFFF) res = FR_DISK_ERR;
5156:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5157:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5158:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, tcl, 1);	/* Mark the cluster block 'in use' */
5159:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl + tcl - 1;
5160:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5161:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5162:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5163:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5164:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5166:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
5167:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst = stcl; ncl = 0;
5168:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {	/* Find a contiguous cluster block */
5169:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = get_fat(&fp->obj, clst);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 117


5170:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (++clst >= fs->n_fatent) clst = 2;
5171:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 1) { res = FR_INT_ERR; break; }
5172:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
5173:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0) {	/* Is it a free cluster? */
5174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++ncl == tcl) break;	/* Break if a contiguous cluster block is found */
5175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5176:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = clst; ncl = 0;		/* Not a free cluster */
5177:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == stcl) { res = FR_DENIED; break; }	/* No contiguous cluster? */
5179:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5180:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5181:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5182:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (clst = scl, n = tcl; n; clst++, n--) {	/* Create a cluster chain on the FAT */
5183:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fs, clst, (n == 1) ? 0xFFFFFFFF : clst + 1);
5184:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
5185:Middlewares/Third_Party/FatFs/src/ff.c **** 					lclst = clst;
5186:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5187:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5188:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5189:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5190:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5191:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5192:Middlewares/Third_Party/FatFs/src/ff.c **** 
5193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5194:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = lclst;		/* Set suggested start cluster to start next */
5195:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt) {	/* Is it allocated now? */
5196:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = scl;		/* Update object allocation information */
5197:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fsz;
5198:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT) fp->obj.stat = 2;	/* Set status 'contiguous chain' */
5199:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
5200:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clst <= fs->n_fatent - 2) {	/* Update FSINFO */
5201:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst -= tcl;
5202:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
5203:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5204:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5205:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5206:Middlewares/Third_Party/FatFs/src/ff.c **** 
5207:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5208:Middlewares/Third_Party/FatFs/src/ff.c **** }
5209:Middlewares/Third_Party/FatFs/src/ff.c **** 
5210:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_EXPAND && !_FS_READONLY */
5211:Middlewares/Third_Party/FatFs/src/ff.c **** 
5212:Middlewares/Third_Party/FatFs/src/ff.c **** 
5213:Middlewares/Third_Party/FatFs/src/ff.c **** 
5214:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD
5215:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5216:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly                                   */
5217:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5218:Middlewares/Third_Party/FatFs/src/ff.c **** 
5219:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
5220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
5221:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
5222:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
5223:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
5224:Middlewares/Third_Party/FatFs/src/ff.c **** )
5225:Middlewares/Third_Party/FatFs/src/ff.c **** {
5226:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 118


5227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
5229:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
5230:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, csect;
5231:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dbuf;
5232:Middlewares/Third_Party/FatFs/src/ff.c **** 
5233:Middlewares/Third_Party/FatFs/src/ff.c **** 
5234:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
5235:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5236:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5237:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
5238:Middlewares/Third_Party/FatFs/src/ff.c **** 
5239:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
5240:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
5241:Middlewares/Third_Party/FatFs/src/ff.c **** 
5242:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream goes busy */
5243:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
5244:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
5245:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {				/* On the sector boundary? */
5246:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {						/* On the cluster boundary? */
5247:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
5248:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust : get_fat(&fp->obj, fp->clust);
5249:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fs, FR_INT_ERR);
5250:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
5251:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
5252:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5253:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5254:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fs, fp->clust);			/* Get current data sector */
5255:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fs, FR_INT_ERR);
5256:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
5257:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
5258:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window to the file dat
5259:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fs->win;
5260:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5261:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->sect != sect) {		/* Fill sector cache with file data */
5262:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5263:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
5264:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5265:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
5266:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5267:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5268:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5269:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5270:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fp->buf;
5271:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5272:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->sect = sect;
5273:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
5274:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;					/* Clip it by btr if needed */
5275:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(dbuf + ((UINT)fp->fptr % SS(fs)), rcnt);	/* Forward the file data */
5276:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fs, FR_INT_ERR);
5277:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5278:Middlewares/Third_Party/FatFs/src/ff.c **** 
5279:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
5280:Middlewares/Third_Party/FatFs/src/ff.c **** }
5281:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
5282:Middlewares/Third_Party/FatFs/src/ff.c **** 
5283:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 119


5284:Middlewares/Third_Party/FatFs/src/ff.c **** 
5285:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
5286:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5287:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create an FAT/exFAT volume                                            */
5288:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5289:Middlewares/Third_Party/FatFs/src/ff.c **** 
5290:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
5291:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
5292:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt,			/* Format option */
5293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD au,			/* Size of allocation unit (cluster) [byte] */
5294:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work,			/* Pointer to working buffer */
5295:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len			/* Size of working buffer */
5296:Middlewares/Third_Party/FatFs/src/ff.c **** )
5297:Middlewares/Third_Party/FatFs/src/ff.c **** {
5298:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
5299:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_rootdir = 512;	/* Number of root directory entries for FAT12/16 volume */
5300:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {1, 4, 16, 64, 256, 512, 0};	/* Cluster size boundary for FAT12/16 volum
5301:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst32[] = {1, 2, 4, 8, 16, 32, 0};	/* Cluster size boundary for FAT32 volume (12
5302:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, sys, *buf, *pte, pdrv, part;
5303:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ss;
5304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD szb_buf, sz_buf, sz_blk, n_clst, pau, sect, nsect, n;
5305:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_data;				/* Base LBA for volume, fat, data */
5306:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_vol, sz_rsv, sz_fat, sz_dir;	/* Size for volume, fat, dir, data */
5307:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
5308:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
5309:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5310:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM || _FS_EXFAT
5311:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tbl[3];
5312:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5313:Middlewares/Third_Party/FatFs/src/ff.c **** 
5314:Middlewares/Third_Party/FatFs/src/ff.c **** 
5315:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);					/* Get target logical drive */
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
5320:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
5321:Middlewares/Third_Party/FatFs/src/ff.c **** 
5322:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check physical drive status */
5323:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5326:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
5327:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &ss) != RES_OK) return FR_DISK_ERR;
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ss > _MAX_SS || ss < _MIN_SS || (ss & (ss - 1))) return FR_DISK_ERR;
5330:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5331:Middlewares/Third_Party/FatFs/src/ff.c **** 	ss = _MAX_SS;
5332:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((au != 0 && au < ss) || au > 0x1000000 || (au & (au - 1))) return FR_INVALID_PARAMETER;	/* Che
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get working buffer */
5337:Middlewares/Third_Party/FatFs/src/ff.c **** 	buf = (BYTE*)work;		/* Working buffer */
5338:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_buf = len / ss;		/* Size of working buffer (sector) */
5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 120


5341:Middlewares/Third_Party/FatFs/src/ff.c **** 
5342:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine where the volume to be located (b_vol, sz_vol) */
5343:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
5345:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Load MBR */
5346:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(buf + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;	/* Check if MBR is valid */
5347:Middlewares/Third_Party/FatFs/src/ff.c **** 		pte = buf + (MBR_Table + (part - 1) * SZ_PTE);
5348:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!pte[PTE_System]) return FR_MKFS_ABORTED;	/* No partition? */
5349:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = ld_dword(pte + PTE_StLba);		/* Get volume start sector */
5350:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol = ld_dword(pte + PTE_SizLba);	/* Get volume size */
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5352:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a single-partition in this function */
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_vol) != RES_OK) return FR_DISK_ERR;
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
5357:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_vol < 128) return FR_MKFS_ABORTED;	/* Check if volume size is >=128s */
5359:Middlewares/Third_Party/FatFs/src/ff.c **** 
5360:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-determine the FAT type */
5361:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
5362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT && (opt & FM_EXFAT)) {	/* exFAT possible? */
5363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_EXFAT || sz_vol >= 0x4000000 || au > 128) {	/* exFAT only, vol >= 64Ms 
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_EXFAT; break;
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (au > 128) return FR_INVALID_PARAMETER;	/* Too large au for FAT/FAT32 */
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
5371:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5372:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_FAT)) return FR_INVALID_PARAMETER;	/* no-FAT? */
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
5375:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
5376:Middlewares/Third_Party/FatFs/src/ff.c **** 
5377:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_EXFAT) {	/* Create an exFAT volume */
5379:Middlewares/Third_Party/FatFs/src/ff.c **** 		DWORD szb_bit, szb_case, sum, nb, cl;
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 		WCHAR ch, si;
5381:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT j, st;
5382:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE b;
5383:Middlewares/Third_Party/FatFs/src/ff.c **** 
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x1000) return FR_MKFS_ABORTED;	/* Too small volume? */
5385:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5386:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area may be erased *
5387:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5388:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5389:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine FAT location, data location and number of clusters */
5390:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!au) {	/* au auto-selection */
5391:Middlewares/Third_Party/FatFs/src/ff.c **** 			au = 8;
5392:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x80000) au = 64;		/* >= 512Ks */
5393:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x4000000) au = 256;	/* >= 64Ms */
5394:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5395:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat = b_vol + 32;										/* FAT start at offset 32 */
5396:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_fat = ((sz_vol / au + 2) * 4 + ss - 1) / ss;			/* Number of FAT sectors */
5397:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_data = (b_fat + sz_fat + sz_blk - 1) & ~(sz_blk - 1);	/* Align data area to the erase block bou
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 121


5398:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (b_data >= sz_vol / 2) return FR_MKFS_ABORTED;		/* Too small volume? */
5399:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_clst = (sz_vol - (b_data - b_vol)) / au;				/* Number of clusters */
5400:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst <16) return FR_MKFS_ABORTED;					/* Too few clusters? */
5401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst > MAX_EXFAT) return FR_MKFS_ABORTED;			/* Too many clusters? */
5402:Middlewares/Third_Party/FatFs/src/ff.c **** 
5403:Middlewares/Third_Party/FatFs/src/ff.c **** 		szb_bit = (n_clst + 7) / 8;						/* Size of allocation bitmap */
5404:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = (szb_bit + au * ss - 1) / (au * ss);	/* Number of allocation bitmap clusters */
5405:Middlewares/Third_Party/FatFs/src/ff.c **** 
5406:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a compressed up-case table */
5407:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * tbl[0];	/* Table start sector */
5408:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = 0;						/* Table checksum to be stored in the 82 entry */
5409:Middlewares/Third_Party/FatFs/src/ff.c **** 		st = si = i = j = szb_case = 0;
5410:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5411:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (st) {
5412:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 0:
5413:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = ff_wtoupper(si);	/* Get an up-case char */
5414:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ch != si) {
5415:Middlewares/Third_Party/FatFs/src/ff.c **** 					si++; break;		/* Store the up-case char if exist */
5416:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5417:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (j = 1; (WCHAR)(si + j) && (WCHAR)(si + j) == ff_wtoupper((WCHAR)(si + j)); j++) ;	/* Get r
5418:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (j >= 128) {
5419:Middlewares/Third_Party/FatFs/src/ff.c **** 					ch = 0xFFFF; st = 2; break;	/* Compress the no-case block if run is >= 128 */
5420:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5421:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 1;			/* Do not compress short run */
5422:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* go to next case */
5423:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 1:
5424:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = si++;		/* Fill the short run */
5425:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--j == 0) st = 0;
5426:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
5427:Middlewares/Third_Party/FatFs/src/ff.c **** 
5428:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
5429:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = (WCHAR)j; si += j;	/* Number of chars to skip */
5430:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 0;
5431:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5432:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 0] = (BYTE)ch, sum);		/* Put it into the write buffer */
5433:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 1] = (BYTE)(ch >> 8), sum);
5434:Middlewares/Third_Party/FatFs/src/ff.c **** 			i += 2; szb_case += 2;
5435:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!si || i == szb_buf) {		/* Write buffered data when buffer full or end of process */
5436:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (i + ss - 1) / ss;
5437:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5438:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; i = 0;
5439:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5440:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (si);
5441:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[1] = (szb_case + au * ss - 1) / (au * ss);	/* Number of up-case table clusters */
5442:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[2] = 1;										/* Number of root dir clusters */
5443:Middlewares/Third_Party/FatFs/src/ff.c **** 
5444:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the allocation bitmap */
5445:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data; nsect = (szb_bit + ss - 1) / ss;	/* Start of bitmap and number of sectors */
5446:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb = tbl[0] + tbl[1] + tbl[2];					/* Number of clusters in-use by system */
5447:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5448:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf);
5449:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; nb >= 8 && i < szb_buf; buf[i++] = 0xFF, nb -= 8) ;
5450:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (b = 1; nb && i < szb_buf; buf[i] |= b, b <<= 1, nb--) ;
5451:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;		/* Write the buffered data */
5452:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5453:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5454:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 122


5455:Middlewares/Third_Party/FatFs/src/ff.c **** 
5456:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the FAT */
5457:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat; nsect = sz_fat;	/* Start of FAT and number of FAT sectors */
5458:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = nb = cl = 0;
5459:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5460:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf); i = 0;	/* Clear work area and reset write index */
5461:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl == 0) {	/* Set entry 0 and 1 */
5462:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFF8); i += 4; cl++;
5463:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFFF); i += 4; cl++;
5464:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5465:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {			/* Create chains of bitmap, up-case and root dir */
5466:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (nb && i < szb_buf) {			/* Create a chain */
5467:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(buf + i, (nb > 1) ? cl + 1 : 0xFFFFFFFF);
5468:Middlewares/Third_Party/FatFs/src/ff.c **** 					i += 4; cl++; nb--;
5469:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5470:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!nb && j < 3) nb = tbl[j++];	/* Next chain */
5471:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nb && i < szb_buf);
5472:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;	/* Write the buffered data */
5473:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5474:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5475:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5476:Middlewares/Third_Party/FatFs/src/ff.c **** 
5477:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the root directory */
5478:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, szb_buf);
5479:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 0 + 0] = 0x83;		/* 83 entry (volume label) */
5480:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 1 + 0] = 0x81;		/* 81 entry (allocation bitmap) */
5481:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 20, 2);
5482:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 24, szb_bit);
5483:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 2 + 0] = 0x82;		/* 82 entry (up-case table) */
5484:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 4, sum);
5485:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 20, 2 + tbl[0]);
5486:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 24, szb_case);
5487:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * (tbl[0] + tbl[1]);	nsect = au;	/* Start of the root directory and number of 
5488:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill root directory sectors */
5489:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5490:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5491:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5492:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5493:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5494:Middlewares/Third_Party/FatFs/src/ff.c **** 
5495:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create two set of the exFAT VBR blocks */
5496:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_vol;
5497:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; n < 2; n++) {
5498:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Main record (+0) */
5499:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5500:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11);	/* Boot jump code (x86), OEM name */
5501:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolOfsEx, b_vol);					/* Volume offset in the physical drive [sector] */
5502:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSecEx, sz_vol);					/* Volume size [sector] */
5503:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatOfsEx, b_fat - b_vol);			/* FAT offset [sector] */
5504:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatSzEx, sz_fat);					/* FAT size [sector] */
5505:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_DataOfsEx, b_data - b_vol);			/* Data offset [sector] */
5506:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_NumClusEx, n_clst);					/* Number of clusters */
5507:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClusEx, 2 + tbl[0] + tbl[1]);	/* Root dir cluster # */
5508:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolIDEx, GET_FATTIME());				/* VSN */
5509:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSVerEx, 0x100);						/* File system version (1.00) */
5510:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_BytsPerSecEx] = 0, i = ss; i >>= 1; buf[BPB_BytsPerSecEx]++) ;	/* Log2 of sector si
5511:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_SecPerClusEx] = 0, i = au; i >>= 1; buf[BPB_SecPerClusEx]++) ;	/* Log2 of cluster s
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 123


5512:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_NumFATsEx] = 1;					/* Number of FATs */
5513:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_DrvNumEx] = 0x80;				/* Drive number (for int13) */
5514:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_BootCodeEx, 0xFEEB);	/* Boot code (x86) */
5515:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);			/* Signature (placed here regardless of sector size) */
5516:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = sum = 0; i < ss; i++) {		/* VBR checksum */
5517:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i != BPB_VolFlagEx && i != BPB_VolFlagEx + 1 && i != BPB_PercInUseEx) sum = xsum32(buf[i], 
5518:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5519:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5520:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Extended bootstrap record (+1..+8) */
5521:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5522:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + ss - 2, 0xAA55);	/* Signature (placed at end of sector) */
5523:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 1; j < 9; j++) {
5524:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5525:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5526:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5527:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* OEM/Reserved record (+9..+10) */
5528:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5529:Middlewares/Third_Party/FatFs/src/ff.c **** 			for ( ; j < 11; j++) {
5530:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5531:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5532:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5533:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Sum record (+11) */
5534:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < ss; i += 4) st_dword(buf + i, sum);		/* Fill with checksum value */
5535:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5536:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5537:Middlewares/Third_Party/FatFs/src/ff.c **** 
5538:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5539:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
5540:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* Create an FAT12/16/32 volume */
5541:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 			pau = au;
5543:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {	/* FAT32 volume */
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5548:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;	/* Number of clusters */
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
5554:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fmt = FS_FAT12;
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
5565:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n + ss - 1) / ss;		/* FAT size [sector] */
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 124


5569:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_fat = b_vol + sz_rsv;						/* FAT base */
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
5572:Middlewares/Third_Party/FatFs/src/ff.c **** 
5573:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Align data base to erase block boundary (for flash memory media) */
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current d
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat += n / n_fats;
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5580:Middlewares/Third_Party/FatFs/src/ff.c **** 
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Determine number of clusters and final check of validity of the FAT sub-type */
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol < b_data + pau * 16 - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5588:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT16) {
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((opt & FM_FAT32)) {
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5600:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 				if  (n_clst <= MAX_FAT12) {	/* Too few clusters for FAT16 */
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5605:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT12 && n_clst > MAX_FAT12) return FR_MKFS_ABORTED;	/* Too many clusters for FAT1
5607:Middlewares/Third_Party/FatFs/src/ff.c **** 
5608:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Ok, it is the valid cluster configuration */
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (1);
5611:Middlewares/Third_Party/FatFs/src/ff.c **** 
5612:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area can be erased *
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5615:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5616:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FAT VBR */
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, ss);
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 125


5626:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSec32, sz_vol);		/* Volume size in 32-bit LBA */
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_Media] = 0xF8;							/* Media descriptor byte */
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID, GET_FATTIME());	/* VSN */
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BS_55AA, 0xAA55);					/* Signature (offset is fixed here regardless of sector size)
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
5651:Middlewares/Third_Party/FatFs/src/ff.c **** 
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FSINFO record if needed */
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
5663:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5664:Middlewares/Third_Party/FatFs/src/ff.c **** 
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize FAT area */
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, (UINT)szb_buf);
5667:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < n_fats; i++) {			/* Initialize FATs each */
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, (fmt == FS_FAT12) ? 0xFFFFF8 : 0xFFFFFFF8);	/* Entry 0 and 1 */
5675:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5676:Middlewares/Third_Party/FatFs/src/ff.c **** 			nsect = sz_fat;		/* Number of FAT sectors */
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {	/* Fill FAT sectors */
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (nsect > sz_buf) ? sz_buf : nsect;
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 126


5683:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5684:Middlewares/Third_Party/FatFs/src/ff.c **** 
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize root directory (fill with zero) */
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		nsect = (fmt == FS_FAT32) ? pau : sz_dir;	/* Number of root directory sectors */
5687:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 
5694:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
5695:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_EXFAT && fmt == FS_EXFAT) {
5696:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x07;			/* HPFS/NTFS/exFAT */
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x10000) {
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
5703:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = (fmt == FS_FAT16) ? 0x04 : 0x01;	/* FAT16 (<64KS) : FAT12 (<64KS) */
5705:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5706:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5707:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5708:Middlewares/Third_Party/FatFs/src/ff.c **** 
5709:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Update partition information */
5710:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {	/* Created in the existing partition */
5711:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
5712:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Read the MBR */
5713:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[MBR_Table + (part - 1) * SZ_PTE + PTE_System] = sys;		/* Set system ID */
5714:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it back to the MBR */
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Created as a new single partition */
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_SFD)) {	/* Create partition table if in FDISK format */
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
5719:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_Boot] = 0;					/* Boot indicator */
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
5732:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) return FR_DISK_ERR;
5736:Middlewares/Third_Party/FatFs/src/ff.c **** 
5737:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
5738:Middlewares/Third_Party/FatFs/src/ff.c **** }
5739:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 127


5740:Middlewares/Third_Party/FatFs/src/ff.c **** 
5741:Middlewares/Third_Party/FatFs/src/ff.c **** 
5742:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
5743:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5744:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
5745:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5746:Middlewares/Third_Party/FatFs/src/ff.c **** 
5747:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
5748:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
5749:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD* szt,	/* Pointer to the size table for each partitions */
5750:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
5751:Middlewares/Third_Party/FatFs/src/ff.c **** )
5752:Middlewares/Third_Party/FatFs/src/ff.c **** {
5753:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
5754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
5755:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5756:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
5757:Middlewares/Third_Party/FatFs/src/ff.c **** 
5758:Middlewares/Third_Party/FatFs/src/ff.c **** 
5759:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5760:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5761:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5762:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
5763:Middlewares/Third_Party/FatFs/src/ff.c **** 
5764:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the CHS without any consideration of the drive geometry */
5765:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
5766:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
5767:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
5768:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
5769:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
5770:Middlewares/Third_Party/FatFs/src/ff.c **** 
5771:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
5772:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
5773:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
5774:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
5775:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;	/* Number of cylinder
5776:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
5777:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
5778:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
5779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
5780:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
5781:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
5782:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5783:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
5784:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5785:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;	/* End cylinder */
5786:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
5787:Middlewares/Third_Party/FatFs/src/ff.c **** 
5788:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
5789:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
5790:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
5791:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
5792:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x07;						/* System type (temporary setting) */
5793:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
5794:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
5795:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
5796:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 8, s_part);			/* Start sector in LBA */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 128


5797:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 12, sz_part);			/* Number of sectors */
5798:Middlewares/Third_Party/FatFs/src/ff.c **** 
5799:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
5800:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
5801:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5802:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(p, 0xAA55);
5803:Middlewares/Third_Party/FatFs/src/ff.c **** 
5804:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
5805:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
5806:Middlewares/Third_Party/FatFs/src/ff.c **** }
5807:Middlewares/Third_Party/FatFs/src/ff.c **** 
5808:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
5809:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
5810:Middlewares/Third_Party/FatFs/src/ff.c **** 
5811:Middlewares/Third_Party/FatFs/src/ff.c **** 
5812:Middlewares/Third_Party/FatFs/src/ff.c **** 
5813:Middlewares/Third_Party/FatFs/src/ff.c **** 
5814:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
5815:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5816:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
5817:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5818:Middlewares/Third_Party/FatFs/src/ff.c **** 
5819:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
5820:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
5821:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
5822:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
5823:Middlewares/Third_Party/FatFs/src/ff.c **** )
5824:Middlewares/Third_Party/FatFs/src/ff.c **** {
5825:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
5826:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
5827:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
5828:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
5829:Middlewares/Third_Party/FatFs/src/ff.c **** 
5830:Middlewares/Third_Party/FatFs/src/ff.c **** 
5831:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
5832:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
5834:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5835:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5836:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5837:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
5838:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
5839:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence (0x80-0x7FF) */
5840:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
5841:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
5842:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
5843:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';	/* Reject invalid code range */
5844:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5845:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence (0x800-0xFFFF) */
5846:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
5847:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
5848:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
5849:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';	/* Reject invalid code range */
5850:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
5851:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
5852:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5853:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 129


5854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5855:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
5856:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5857:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5858:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
5859:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
5860:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5861:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5862:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
5863:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
5864:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5865:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5866:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5867:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
5868:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
5869:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
5870:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
5871:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5872:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
5873:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
5874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5875:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5878:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5879:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
5884:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5885:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
5886:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
5887:Middlewares/Third_Party/FatFs/src/ff.c **** }
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 
5889:Middlewares/Third_Party/FatFs/src/ff.c **** 
5890:Middlewares/Third_Party/FatFs/src/ff.c **** 
5891:Middlewares/Third_Party/FatFs/src/ff.c **** 
5892:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5893:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
5894:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5895:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
5896:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5897:Middlewares/Third_Party/FatFs/src/ff.c **** 
5898:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
5899:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp;		/* Ptr to the writing file */
5900:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;	/* Write index of buf[] (-1:error), number of chars written */
5901:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];	/* Write buffer */
5902:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
5903:Middlewares/Third_Party/FatFs/src/ff.c **** 
5904:Middlewares/Third_Party/FatFs/src/ff.c **** 
5905:Middlewares/Third_Party/FatFs/src/ff.c **** static
5906:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (		/* Buffered write with code conversion */
5907:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5908:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
5909:Middlewares/Third_Party/FatFs/src/ff.c **** )
5910:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 130


5911:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
5912:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
5913:Middlewares/Third_Party/FatFs/src/ff.c **** 
5914:Middlewares/Third_Party/FatFs/src/ff.c **** 
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n') {	 /* LF -> CRLF conversion */
5916:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
5917:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5918:Middlewares/Third_Party/FatFs/src/ff.c **** 
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;		/* Write index of pb->buf[] */
5920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
5921:Middlewares/Third_Party/FatFs/src/ff.c **** 
5922:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
5924:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
5925:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
5926:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5927:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
5928:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
5929:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
5930:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
5931:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
5932:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5933:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
5934:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5935:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
5936:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5937:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5938:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
5939:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5940:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5941:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
5942:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
5943:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
5944:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
5945:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
5946:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5947:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5948:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
5949:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5950:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5951:Middlewares/Third_Party/FatFs/src/ff.c **** 
5952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
5955:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
5957:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
5958:Middlewares/Third_Party/FatFs/src/ff.c **** }
5959:Middlewares/Third_Party/FatFs/src/ff.c **** 
5960:Middlewares/Third_Party/FatFs/src/ff.c **** 
5961:Middlewares/Third_Party/FatFs/src/ff.c **** static
5962:Middlewares/Third_Party/FatFs/src/ff.c **** int putc_flush (		/* Flush left characters in the buffer */
5963:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb
5964:Middlewares/Third_Party/FatFs/src/ff.c **** )
5965:Middlewares/Third_Party/FatFs/src/ff.c **** {
5966:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
5967:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 131


5968:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb->idx >= 0	/* Flush buffered characters to the file */
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
5971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
5972:Middlewares/Third_Party/FatFs/src/ff.c **** }
5973:Middlewares/Third_Party/FatFs/src/ff.c **** 
5974:Middlewares/Third_Party/FatFs/src/ff.c **** 
5975:Middlewares/Third_Party/FatFs/src/ff.c **** static
5976:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_init (		/* Initialize write buffer */
5977:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5978:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp
5979:Middlewares/Third_Party/FatFs/src/ff.c **** )
5980:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1409              		.loc 1 5980 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
 1413              		@ link register save eliminated.
 1414              	.LVL190:
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->fp = fp;
 1415              		.loc 1 5981 0
 1416 0000 0160     		str	r1, [r0]
5982:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr = pb->idx = 0;
 1417              		.loc 1 5982 0
 1418 0002 0023     		movs	r3, #0
 1419 0004 4360     		str	r3, [r0, #4]
 1420 0006 8360     		str	r3, [r0, #8]
 1421 0008 7047     		bx	lr
 1422              		.cfi_endproc
 1423              	.LFE201:
 1425              		.section	.text.lock_fs,"ax",%progbits
 1426              		.align	1
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1430              		.fpu fpv5-sp-d16
 1432              	lock_fs:
 1433              	.LFB149:
 745:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 1434              		.loc 1 745 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438              	.LVL191:
 1439 0000 08B5     		push	{r3, lr}
 1440              	.LCFI20:
 1441              		.cfi_def_cfa_offset 8
 1442              		.cfi_offset 3, -8
 1443              		.cfi_offset 14, -4
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1444              		.loc 1 746 0
 1445 0002 40B1     		cbz	r0, .L158
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1446              		.loc 1 746 0 is_stmt 0 discriminator 1
 1447 0004 C068     		ldr	r0, [r0, #12]
 1448              	.LVL192:
 1449 0006 FFF7FEFF 		bl	ff_req_grant
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 132


 1450              	.LVL193:
 1451 000a 0346     		mov	r3, r0
 1452 000c 08B9     		cbnz	r0, .L160
 1453              	.L156:
 747:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1454              		.loc 1 747 0 is_stmt 1
 1455 000e 1846     		mov	r0, r3
 1456 0010 08BD     		pop	{r3, pc}
 1457              	.L160:
 746:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1458              		.loc 1 746 0
 1459 0012 0123     		movs	r3, #1
 1460 0014 FBE7     		b	.L156
 1461              	.LVL194:
 1462              	.L158:
 1463 0016 0023     		movs	r3, #0
 1464 0018 F9E7     		b	.L156
 1465              		.cfi_endproc
 1466              	.LFE149:
 1468              		.section	.text.validate,"ax",%progbits
 1469              		.align	1
 1470              		.syntax unified
 1471              		.thumb
 1472              		.thumb_func
 1473              		.fpu fpv5-sp-d16
 1475              	validate:
 1476              	.LFB180:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 1477              		.loc 1 3220 0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 0
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
 1481              	.LVL195:
 1482 0000 38B5     		push	{r3, r4, r5, lr}
 1483              	.LCFI21:
 1484              		.cfi_def_cfa_offset 16
 1485              		.cfi_offset 3, -16
 1486              		.cfi_offset 4, -12
 1487              		.cfi_offset 5, -8
 1488              		.cfi_offset 14, -4
 1489 0002 0C46     		mov	r4, r1
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1490              		.loc 1 3223 0
 1491 0004 20B1     		cbz	r0, .L162
 1492 0006 0546     		mov	r5, r0
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1493              		.loc 1 3223 0 is_stmt 0 discriminator 1
 1494 0008 0368     		ldr	r3, [r0]
 1495 000a 0BB1     		cbz	r3, .L162
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1496              		.loc 1 3223 0 discriminator 2
 1497 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1498 000e 1AB9     		cbnz	r2, .L167
 1499              	.LVL196:
 1500              	.L162:
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INVALID_OBJECT;	/* The object is invalid */
 1501              		.loc 1 3224 0 is_stmt 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 133


 1502 0010 0023     		movs	r3, #0
 1503 0012 2360     		str	r3, [r4]
 1504              	.LVL197:
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 1505              		.loc 1 3225 0
 1506 0014 0920     		movs	r0, #9
 1507 0016 38BD     		pop	{r3, r4, r5, pc}
 1508              	.LVL198:
 1509              	.L167:
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1510              		.loc 1 3223 0 discriminator 3
 1511 0018 D988     		ldrh	r1, [r3, #6]
 1512              	.LVL199:
 1513 001a 8288     		ldrh	r2, [r0, #4]
 1514 001c 9142     		cmp	r1, r2
 1515 001e F7D1     		bne	.L162
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fs = 0;
 1516              		.loc 1 3223 0 is_stmt 0 discriminator 4
 1517 0020 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1518              	.LVL200:
 1519 0022 FFF7FEFF 		bl	disk_status
 1520              	.LVL201:
 1521 0026 10F0010F 		tst	r0, #1
 1522 002a F1D1     		bne	.L162
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		ENTER_FF(obj->fs);		/* Lock file system */
 1523              		.loc 1 3227 0 is_stmt 1
 1524 002c 2B68     		ldr	r3, [r5]
 1525 002e 2360     		str	r3, [r4]
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;			/* Valid object */
 1526              		.loc 1 3228 0
 1527 0030 2868     		ldr	r0, [r5]
 1528 0032 FFF7FEFF 		bl	lock_fs
 1529              	.LVL202:
 1530 0036 08B9     		cbnz	r0, .L165
 1531 0038 0F20     		movs	r0, #15
 1532 003a 38BD     		pop	{r3, r4, r5, pc}
 1533              	.LVL203:
 1534              	.L165:
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1535              		.loc 1 3229 0
 1536 003c 0020     		movs	r0, #0
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1537              		.loc 1 3232 0
 1538 003e 38BD     		pop	{r3, r4, r5, pc}
 1539              		.cfi_endproc
 1540              	.LFE180:
 1542              		.section	.text.sync_window,"ax",%progbits
 1543              		.align	1
 1544              		.syntax unified
 1545              		.thumb
 1546              		.thumb_func
 1547              		.fpu fpv5-sp-d16
 1549              	sync_window:
 1550              	.LFB156:
 886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 1551              		.loc 1 886 0
 1552              		.cfi_startproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 134


 1553              		@ args = 0, pretend = 0, frame = 0
 1554              		@ frame_needed = 0, uses_anonymous_args = 0
 1555              	.LVL204:
 1556 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1557              	.LCFI22:
 1558              		.cfi_def_cfa_offset 24
 1559              		.cfi_offset 3, -24
 1560              		.cfi_offset 4, -20
 1561              		.cfi_offset 5, -16
 1562              		.cfi_offset 6, -12
 1563              		.cfi_offset 7, -8
 1564              		.cfi_offset 14, -4
 1565              	.LVL205:
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1566              		.loc 1 892 0
 1567 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1568 0004 0BB9     		cbnz	r3, .L176
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1569              		.loc 1 889 0
 1570 0006 0020     		movs	r0, #0
 1571              	.LVL206:
 1572 0008 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1573              	.LVL207:
 1574              	.L176:
 1575 000a 0446     		mov	r4, r0
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 1576              		.loc 1 893 0
 1577 000c 066B     		ldr	r6, [r0, #48]
 1578              	.LVL208:
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1579              		.loc 1 894 0
 1580 000e 00F13407 		add	r7, r0, #52
 1581 0012 0123     		movs	r3, #1
 1582 0014 3246     		mov	r2, r6
 1583 0016 3946     		mov	r1, r7
 1584 0018 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 1585              	.LVL209:
 1586 001a FFF7FEFF 		bl	disk_write
 1587              	.LVL210:
 1588 001e A8B9     		cbnz	r0, .L173
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 1589              		.loc 1 897 0
 1590 0020 0023     		movs	r3, #0
 1591 0022 E370     		strb	r3, [r4, #3]
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 1592              		.loc 1 898 0
 1593 0024 636A     		ldr	r3, [r4, #36]
 1594 0026 F31A     		subs	r3, r6, r3
 1595 0028 E269     		ldr	r2, [r4, #28]
 1596 002a 9342     		cmp	r3, r2
 1597 002c 10D2     		bcs	.L174
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1598              		.loc 1 899 0
 1599 002e A578     		ldrb	r5, [r4, #2]	@ zero_extendqisi2
 1600              	.LVL211:
 1601 0030 08E0     		b	.L170
 1602              	.L171:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 135


 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 1603              		.loc 1 900 0 discriminator 3
 1604 0032 E369     		ldr	r3, [r4, #28]
 1605 0034 1E44     		add	r6, r6, r3
 1606              	.LVL212:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1607              		.loc 1 901 0 discriminator 3
 1608 0036 0123     		movs	r3, #1
 1609 0038 3246     		mov	r2, r6
 1610 003a 3946     		mov	r1, r7
 1611 003c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1612 003e FFF7FEFF 		bl	disk_write
 1613              	.LVL213:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1614              		.loc 1 899 0 discriminator 3
 1615 0042 013D     		subs	r5, r5, #1
 1616              	.LVL214:
 1617              	.L170:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1618              		.loc 1 899 0 is_stmt 0 discriminator 1
 1619 0044 012D     		cmp	r5, #1
 1620 0046 F4D8     		bhi	.L171
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1621              		.loc 1 889 0 is_stmt 1
 1622 0048 0020     		movs	r0, #0
 1623 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1624              	.LVL215:
 1625              	.L173:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1626              		.loc 1 895 0
 1627 004c 0120     		movs	r0, #1
 1628 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1629              	.LVL216:
 1630              	.L174:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1631              		.loc 1 889 0
 1632 0050 0020     		movs	r0, #0
 1633              	.LVL217:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1634              		.loc 1 907 0
 1635 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1636              		.cfi_endproc
 1637              	.LFE156:
 1639              		.section	.text.move_window,"ax",%progbits
 1640              		.align	1
 1641              		.syntax unified
 1642              		.thumb
 1643              		.thumb_func
 1644              		.fpu fpv5-sp-d16
 1646              	move_window:
 1647              	.LFB157:
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 1648              		.loc 1 916 0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 0
 1651              		@ frame_needed = 0, uses_anonymous_args = 0
 1652              	.LVL218:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 136


 1653 0000 70B5     		push	{r4, r5, r6, lr}
 1654              	.LCFI23:
 1655              		.cfi_def_cfa_offset 16
 1656              		.cfi_offset 4, -16
 1657              		.cfi_offset 5, -12
 1658              		.cfi_offset 6, -8
 1659              		.cfi_offset 14, -4
 1660              	.LVL219:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 1661              		.loc 1 920 0
 1662 0002 036B     		ldr	r3, [r0, #48]
 1663 0004 8B42     		cmp	r3, r1
 1664 0006 14D0     		beq	.L180
 1665 0008 0446     		mov	r4, r0
 1666 000a 0D46     		mov	r5, r1
 922:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1667              		.loc 1 922 0
 1668 000c FFF7FEFF 		bl	sync_window
 1669              	.LVL220:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 1670              		.loc 1 924 0
 1671 0010 0646     		mov	r6, r0
 1672 0012 08B1     		cbz	r0, .L183
 1673              	.LVL221:
 1674              	.L178:
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1675              		.loc 1 933 0
 1676 0014 3046     		mov	r0, r6
 1677 0016 70BD     		pop	{r4, r5, r6, pc}
 1678              	.LVL222:
 1679              	.L183:
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 1680              		.loc 1 925 0
 1681 0018 0123     		movs	r3, #1
 1682 001a 2A46     		mov	r2, r5
 1683 001c 04F13401 		add	r1, r4, #52
 1684 0020 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1685              	.LVL223:
 1686 0022 FFF7FEFF 		bl	disk_read
 1687              	.LVL224:
 1688 0026 10B1     		cbz	r0, .L179
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1689              		.loc 1 927 0
 1690 0028 0126     		movs	r6, #1
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 1691              		.loc 1 926 0
 1692 002a 4FF0FF35 		mov	r5, #-1
 1693              	.LVL225:
 1694              	.L179:
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1695              		.loc 1 929 0
 1696 002e 2563     		str	r5, [r4, #48]
 1697 0030 F0E7     		b	.L178
 1698              	.LVL226:
 1699              	.L180:
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1700              		.loc 1 917 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 137


 1701 0032 0026     		movs	r6, #0
 1702 0034 EEE7     		b	.L178
 1703              		.cfi_endproc
 1704              	.LFE157:
 1706              		.section	.text.check_fs,"ax",%progbits
 1707              		.align	1
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv5-sp-d16
 1713              	check_fs:
 1714              	.LFB178:
2969:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 1715              		.loc 1 2969 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 1719              	.LVL227:
 1720 0000 10B5     		push	{r4, lr}
 1721              	.LCFI24:
 1722              		.cfi_def_cfa_offset 8
 1723              		.cfi_offset 4, -8
 1724              		.cfi_offset 14, -4
 1725 0002 0446     		mov	r4, r0
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 1726              		.loc 1 2970 0
 1727 0004 0023     		movs	r3, #0
 1728 0006 C370     		strb	r3, [r0, #3]
 1729 0008 4FF0FF33 		mov	r3, #-1
 1730 000c 0363     		str	r3, [r0, #48]
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1731              		.loc 1 2971 0
 1732 000e FFF7FEFF 		bl	move_window
 1733              	.LVL228:
 1734 0012 08B1     		cbz	r0, .L193
 1735 0014 0420     		movs	r0, #4
 1736 0016 10BD     		pop	{r4, pc}
 1737              	.LVL229:
 1738              	.L193:
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1739              		.loc 1 2973 0
 1740 0018 04F23220 		addw	r0, r4, #562
 1741 001c FFF7FEFF 		bl	ld_word
 1742              	.LVL230:
 1743 0020 4AF65523 		movw	r3, #43605
 1744 0024 9842     		cmp	r0, r3
 1745 0026 01D0     		beq	.L194
 1746 0028 0320     		movs	r0, #3
 1747 002a 10BD     		pop	{r4, pc}
 1748              	.LVL231:
 1749              	.L194:
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1750              		.loc 1 2975 0
 1751 002c 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 1752 0030 E92B     		cmp	r3, #233
 1753 0032 07D0     		beq	.L186
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 138


 1754              		.loc 1 2975 0 is_stmt 0 discriminator 1
 1755 0034 636B     		ldr	r3, [r4, #52]
 1756 0036 03F0FF13 		and	r3, r3, #16711935
 1757 003a 0D4A     		ldr	r2, .L196
 1758 003c 9342     		cmp	r3, r2
 1759 003e 01D0     		beq	.L186
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1760              		.loc 1 2982 0 is_stmt 1
 1761 0040 0220     		movs	r0, #2
 1762 0042 10BD     		pop	{r4, pc}
 1763              	.LVL232:
 1764              	.L186:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1765              		.loc 1 2976 0
 1766 0044 04F16A00 		add	r0, r4, #106
 1767 0048 FFF7FEFF 		bl	ld_dword
 1768              	.LVL233:
 1769 004c 20F07F40 		bic	r0, r0, #-16777216
 1770 0050 084B     		ldr	r3, .L196+4
 1771 0052 9842     		cmp	r0, r3
 1772 0054 0AD0     		beq	.L190
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1773              		.loc 1 2977 0
 1774 0056 04F18600 		add	r0, r4, #134
 1775 005a FFF7FEFF 		bl	ld_dword
 1776              	.LVL234:
 1777 005e 064B     		ldr	r3, .L196+8
 1778 0060 9842     		cmp	r0, r3
 1779 0062 01D0     		beq	.L195
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1780              		.loc 1 2982 0
 1781 0064 0220     		movs	r0, #2
2983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1782              		.loc 1 2983 0
 1783 0066 10BD     		pop	{r4, pc}
 1784              	.LVL235:
 1785              	.L195:
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1786              		.loc 1 2977 0
 1787 0068 0020     		movs	r0, #0
 1788 006a 10BD     		pop	{r4, pc}
 1789              	.LVL236:
 1790              	.L190:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1791              		.loc 1 2976 0
 1792 006c 0020     		movs	r0, #0
 1793 006e 10BD     		pop	{r4, pc}
 1794              	.LVL237:
 1795              	.L197:
 1796              		.align	2
 1797              	.L196:
 1798 0070 EB009000 		.word	9437419
 1799 0074 46415400 		.word	5521734
 1800 0078 46415433 		.word	861159750
 1801              		.cfi_endproc
 1802              	.LFE178:
 1804              		.section	.text.find_volume,"ax",%progbits
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 139


 1805              		.align	1
 1806              		.syntax unified
 1807              		.thumb
 1808              		.thumb_func
 1809              		.fpu fpv5-sp-d16
 1811              	find_volume:
 1812              	.LFB179:
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
 1813              		.loc 1 2998 0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 16
 1816              		@ frame_needed = 0, uses_anonymous_args = 0
 1817              	.LVL238:
 1818 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1819              	.LCFI25:
 1820              		.cfi_def_cfa_offset 32
 1821              		.cfi_offset 4, -32
 1822              		.cfi_offset 5, -28
 1823              		.cfi_offset 6, -24
 1824              		.cfi_offset 7, -20
 1825              		.cfi_offset 8, -16
 1826              		.cfi_offset 9, -12
 1827              		.cfi_offset 10, -8
 1828              		.cfi_offset 14, -4
 1829 0004 84B0     		sub	sp, sp, #16
 1830              	.LCFI26:
 1831              		.cfi_def_cfa_offset 48
 1832 0006 0C46     		mov	r4, r1
 1833 0008 1746     		mov	r7, r2
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 1834              		.loc 1 3009 0
 1835 000a 0023     		movs	r3, #0
 1836 000c 0B60     		str	r3, [r1]
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1837              		.loc 1 3010 0
 1838 000e FFF7FEFF 		bl	get_ldnumber
 1839              	.LVL239:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1840              		.loc 1 3011 0
 1841 0012 061E     		subs	r6, r0, #0
 1842 0014 C0F23C81 		blt	.L216
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 1843              		.loc 1 3014 0
 1844 0018 AC4B     		ldr	r3, .L251
 1845 001a 53F82650 		ldr	r5, [r3, r6, lsl #2]
 1846              	.LVL240:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1847              		.loc 1 3015 0
 1848 001e 002D     		cmp	r5, #0
 1849 0020 00F03A81 		beq	.L217
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
 1850              		.loc 1 3017 0
 1851 0024 2846     		mov	r0, r5
 1852              	.LVL241:
 1853 0026 FFF7FEFF 		bl	lock_fs
 1854              	.LVL242:
 1855 002a 08B9     		cbnz	r0, .L243
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 140


 1856 002c 0F20     		movs	r0, #15
 1857 002e 30E1     		b	.L199
 1858              	.L243:
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1859              		.loc 1 3018 0
 1860 0030 2560     		str	r5, [r4]
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
 1861              		.loc 1 3020 0
 1862 0032 07F0FE07 		and	r7, r7, #254
 1863              	.LVL243:
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 1864              		.loc 1 3021 0
 1865 0036 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1866 0038 7BB1     		cbz	r3, .L200
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1867              		.loc 1 3022 0
 1868 003a 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1869 003c FFF7FEFF 		bl	disk_status
 1870              	.LVL244:
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 1871              		.loc 1 3023 0
 1872 0040 10F0010F 		tst	r0, #1
 1873 0044 09D1     		bne	.L200
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1874              		.loc 1 3024 0
 1875 0046 002F     		cmp	r7, #0
 1876 0048 00F02881 		beq	.L219
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1877              		.loc 1 3024 0 is_stmt 0 discriminator 1
 1878 004c 10F0040F 		tst	r0, #4
 1879 0050 01D0     		beq	.L244
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1880              		.loc 1 3025 0 is_stmt 1
 1881 0052 0A20     		movs	r0, #10
 1882              	.LVL245:
 1883 0054 1DE1     		b	.L199
 1884              	.LVL246:
 1885              	.L244:
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1886              		.loc 1 3027 0
 1887 0056 0020     		movs	r0, #0
 1888              	.LVL247:
 1889 0058 1BE1     		b	.L199
 1890              	.L200:
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1891              		.loc 1 3034 0
 1892 005a 0023     		movs	r3, #0
 1893 005c 2B70     		strb	r3, [r5]
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1894              		.loc 1 3035 0
 1895 005e F0B2     		uxtb	r0, r6
 1896 0060 6870     		strb	r0, [r5, #1]
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 1897              		.loc 1 3036 0
 1898 0062 FFF7FEFF 		bl	disk_initialize
 1899              	.LVL248:
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 141


 1900              		.loc 1 3037 0
 1901 0066 10F0010F 		tst	r0, #1
 1902 006a 01D0     		beq	.L245
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1903              		.loc 1 3038 0
 1904 006c 0320     		movs	r0, #3
 1905              	.LVL249:
 1906 006e 10E1     		b	.L199
 1907              	.LVL250:
 1908              	.L245:
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1909              		.loc 1 3040 0
 1910 0070 27B1     		cbz	r7, .L201
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1911              		.loc 1 3040 0 is_stmt 0 discriminator 1
 1912 0072 10F0040F 		tst	r0, #4
 1913 0076 01D0     		beq	.L201
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1914              		.loc 1 3041 0 is_stmt 1
 1915 0078 0A20     		movs	r0, #10
 1916              	.LVL251:
 1917 007a 0AE1     		b	.L199
 1918              	.LVL252:
 1919              	.L201:
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 1920              		.loc 1 3050 0
 1921 007c 0021     		movs	r1, #0
 1922 007e 2846     		mov	r0, r5
 1923              	.LVL253:
 1924 0080 FFF7FEFF 		bl	check_fs
 1925              	.LVL254:
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 1926              		.loc 1 3051 0
 1927 0084 0228     		cmp	r0, #2
 1928 0086 1DD0     		beq	.L223
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 1929              		.loc 1 3049 0
 1930 0088 0026     		movs	r6, #0
 1931              	.LVL255:
 1932              	.L203:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1933              		.loc 1 3063 0
 1934 008a 0428     		cmp	r0, #4
 1935 008c 00F00881 		beq	.L226
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1936              		.loc 1 3064 0
 1937 0090 0128     		cmp	r0, #1
 1938 0092 2CD9     		bls	.L246
 1939 0094 0D20     		movs	r0, #13
 1940              	.LVL256:
 1941 0096 FCE0     		b	.L199
 1942              	.LVL257:
 1943              	.L224:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1944              		.loc 1 3054 0
 1945 0098 0020     		movs	r0, #0
 1946              	.LVL258:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 142


 1947              	.L204:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1948              		.loc 1 3054 0 is_stmt 0 discriminator 4
 1949 009a 04AB     		add	r3, sp, #16
 1950 009c 03EB8403 		add	r3, r3, r4, lsl #2
 1951 00a0 43F8100C 		str	r0, [r3, #-16]
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 1952              		.loc 1 3052 0 is_stmt 1 discriminator 4
 1953 00a4 0134     		adds	r4, r4, #1
 1954              	.LVL259:
 1955              	.L202:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 1956              		.loc 1 3052 0 is_stmt 0 discriminator 2
 1957 00a6 032C     		cmp	r4, #3
 1958 00a8 0ED8     		bhi	.L247
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 1959              		.loc 1 3053 0 is_stmt 1
 1960 00aa 05F13400 		add	r0, r5, #52
 1961 00ae 2301     		lsls	r3, r4, #4
 1962 00b0 03F5DF73 		add	r3, r3, #446
 1963 00b4 1844     		add	r0, r0, r3
 1964              	.LVL260:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1965              		.loc 1 3054 0
 1966 00b6 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1967 00b8 002B     		cmp	r3, #0
 1968 00ba EDD0     		beq	.L224
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1969              		.loc 1 3054 0 is_stmt 0 discriminator 1
 1970 00bc 0830     		adds	r0, r0, #8
 1971              	.LVL261:
 1972 00be FFF7FEFF 		bl	ld_dword
 1973              	.LVL262:
 1974 00c2 EAE7     		b	.L204
 1975              	.LVL263:
 1976              	.L223:
 1977 00c4 0024     		movs	r4, #0
 1978              	.LVL264:
 1979 00c6 EEE7     		b	.L202
 1980              	.LVL265:
 1981              	.L247:
 1982 00c8 0024     		movs	r4, #0
 1983              	.LVL266:
 1984              	.L207:
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 1985              		.loc 1 3059 0 is_stmt 1
 1986 00ca 04AB     		add	r3, sp, #16
 1987 00cc 03EB8403 		add	r3, r3, r4, lsl #2
 1988 00d0 53F8106C 		ldr	r6, [r3, #-16]
 1989              	.LVL267:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 1990              		.loc 1 3060 0
 1991 00d4 36B9     		cbnz	r6, .L248
 1992 00d6 0320     		movs	r0, #3
 1993              	.L206:
 1994              	.LVL268:
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 143


 1995              		.loc 1 3061 0 discriminator 4
 1996 00d8 0128     		cmp	r0, #1
 1997 00da D6D9     		bls	.L203
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1998              		.loc 1 3061 0 is_stmt 0 discriminator 1
 1999 00dc 0134     		adds	r4, r4, #1
 2000              	.LVL269:
 2001 00de 032C     		cmp	r4, #3
 2002 00e0 F3D9     		bls	.L207
 2003 00e2 D2E7     		b	.L203
 2004              	.LVL270:
 2005              	.L248:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2006              		.loc 1 3060 0 is_stmt 1 discriminator 1
 2007 00e4 3146     		mov	r1, r6
 2008 00e6 2846     		mov	r0, r5
 2009 00e8 FFF7FEFF 		bl	check_fs
 2010              	.LVL271:
 2011 00ec F4E7     		b	.L206
 2012              	.LVL272:
 2013              	.L246:
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2014              		.loc 1 3116 0
 2015 00ee 05F13F00 		add	r0, r5, #63
 2016              	.LVL273:
 2017 00f2 FFF7FEFF 		bl	ld_word
 2018              	.LVL274:
 2019 00f6 B0F5007F 		cmp	r0, #512
 2020 00fa 01D0     		beq	.L249
 2021 00fc 0D20     		movs	r0, #13
 2022 00fe C8E0     		b	.L199
 2023              	.L249:
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 2024              		.loc 1 3118 0
 2025 0100 05F14A00 		add	r0, r5, #74
 2026 0104 FFF7FEFF 		bl	ld_word
 2027              	.LVL275:
 2028 0108 8046     		mov	r8, r0
 2029              	.LVL276:
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 2030              		.loc 1 3119 0
 2031 010a 20B9     		cbnz	r0, .L208
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 2032              		.loc 1 3119 0 is_stmt 0 discriminator 1
 2033 010c 05F15800 		add	r0, r5, #88
 2034              	.LVL277:
 2035 0110 FFF7FEFF 		bl	ld_dword
 2036              	.LVL278:
 2037 0114 8046     		mov	r8, r0
 2038              	.LVL279:
 2039              	.L208:
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2040              		.loc 1 3120 0 is_stmt 1
 2041 0116 C5F81C80 		str	r8, [r5, #28]
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 2042              		.loc 1 3122 0
 2043 011a 95F84490 		ldrb	r9, [r5, #68]	@ zero_extendqisi2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 144


 2044 011e 85F80290 		strb	r9, [r5, #2]
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 2045              		.loc 1 3123 0
 2046 0122 09F1FF33 		add	r3, r9, #-1
 2047 0126 DBB2     		uxtb	r3, r3
 2048 0128 012B     		cmp	r3, #1
 2049 012a 01D9     		bls	.L250
 2050 012c 0D20     		movs	r0, #13
 2051              	.LVL280:
 2052 012e B0E0     		b	.L199
 2053              	.LVL281:
 2054              	.L250:
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2055              		.loc 1 3124 0
 2056 0130 09FB08F9 		mul	r9, r9, r8
 2057              	.LVL282:
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 2058              		.loc 1 3126 0
 2059 0134 95F84170 		ldrb	r7, [r5, #65]	@ zero_extendqisi2
 2060              	.LVL283:
 2061 0138 6F81     		strh	r7, [r5, #10]	@ movhi
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2062              		.loc 1 3127 0
 2063 013a 002F     		cmp	r7, #0
 2064 013c 00F0B280 		beq	.L230
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2065              		.loc 1 3127 0 is_stmt 0 discriminator 2
 2066 0140 7B1E     		subs	r3, r7, #1
 2067 0142 1F42     		tst	r7, r3
 2068 0144 40F0B080 		bne	.L231
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 2069              		.loc 1 3129 0 is_stmt 1
 2070 0148 05F14500 		add	r0, r5, #69
 2071 014c FFF7FEFF 		bl	ld_word
 2072              	.LVL284:
 2073 0150 8246     		mov	r10, r0
 2074 0152 2881     		strh	r0, [r5, #8]	@ movhi
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2075              		.loc 1 3130 0
 2076 0154 10F00F0F 		tst	r0, #15
 2077 0158 40F0A880 		bne	.L232
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 2078              		.loc 1 3132 0
 2079 015c 05F14700 		add	r0, r5, #71
 2080 0160 FFF7FEFF 		bl	ld_word
 2081              	.LVL285:
 2082 0164 0446     		mov	r4, r0
 2083              	.LVL286:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2084              		.loc 1 3133 0
 2085 0166 20B9     		cbnz	r0, .L209
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2086              		.loc 1 3133 0 is_stmt 0 discriminator 1
 2087 0168 05F15400 		add	r0, r5, #84
 2088              	.LVL287:
 2089 016c FFF7FEFF 		bl	ld_dword
 2090              	.LVL288:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 145


 2091 0170 0446     		mov	r4, r0
 2092              	.LVL289:
 2093              	.L209:
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 2094              		.loc 1 3135 0 is_stmt 1
 2095 0172 05F14200 		add	r0, r5, #66
 2096              	.LVL290:
 2097 0176 FFF7FEFF 		bl	ld_word
 2098              	.LVL291:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2099              		.loc 1 3136 0
 2100 017a 0246     		mov	r2, r0
 2101 017c 0028     		cmp	r0, #0
 2102 017e 00F09780 		beq	.L233
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 2103              		.loc 1 3139 0
 2104 0182 09EB0003 		add	r3, r9, r0
 2105 0186 03EB1A13 		add	r3, r3, r10, lsr #4
 2106              	.LVL292:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2107              		.loc 1 3140 0
 2108 018a 9C42     		cmp	r4, r3
 2109 018c C0F09280 		bcc	.L234
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 2110              		.loc 1 3141 0
 2111 0190 E41A     		subs	r4, r4, r3
 2112              	.LVL293:
 2113 0192 B4FBF7F4 		udiv	r4, r4, r7
 2114              	.LVL294:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2115              		.loc 1 3142 0
 2116 0196 002C     		cmp	r4, #0
 2117 0198 00F08E80 		beq	.L235
 2118              	.LVL295:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2119              		.loc 1 3144 0
 2120 019c 4FF6F571 		movw	r1, #65525
 2121 01a0 8C42     		cmp	r4, r1
 2122 01a2 63D9     		bls	.L236
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 2123              		.loc 1 3143 0
 2124 01a4 0327     		movs	r7, #3
 2125              	.L210:
 2126              	.LVL296:
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2127              		.loc 1 3145 0
 2128 01a6 40F6F571 		movw	r1, #4085
 2129 01aa 8C42     		cmp	r4, r1
 2130 01ac 00D8     		bhi	.L211
 2131 01ae 0127     		movs	r7, #1
 2132              	.LVL297:
 2133              	.L211:
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2134              		.loc 1 3148 0
 2135 01b0 0234     		adds	r4, r4, #2
 2136              	.LVL298:
 2137 01b2 AC61     		str	r4, [r5, #24]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 146


3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 2138              		.loc 1 3149 0
 2139 01b4 2E62     		str	r6, [r5, #32]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 2140              		.loc 1 3150 0
 2141 01b6 3244     		add	r2, r2, r6
 2142 01b8 6A62     		str	r2, [r5, #36]
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 2143              		.loc 1 3151 0
 2144 01ba 3344     		add	r3, r3, r6
 2145              	.LVL299:
 2146 01bc EB62     		str	r3, [r5, #44]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 2147              		.loc 1 3152 0
 2148 01be 032F     		cmp	r7, #3
 2149 01c0 56D1     		bne	.L212
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2150              		.loc 1 3153 0
 2151 01c2 05F15E00 		add	r0, r5, #94
 2152              	.LVL300:
 2153 01c6 FFF7FEFF 		bl	ld_word
 2154              	.LVL301:
 2155 01ca 0028     		cmp	r0, #0
 2156 01cc 76D1     		bne	.L238
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2157              		.loc 1 3154 0
 2158 01ce BAF1000F 		cmp	r10, #0
 2159 01d2 75D1     		bne	.L239
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 2160              		.loc 1 3155 0
 2161 01d4 05F16000 		add	r0, r5, #96
 2162 01d8 FFF7FEFF 		bl	ld_dword
 2163              	.LVL302:
 2164 01dc A862     		str	r0, [r5, #40]
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 2165              		.loc 1 3156 0
 2166 01de A400     		lsls	r4, r4, #2
 2167              	.LVL303:
 2168              	.L213:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2169              		.loc 1 3163 0
 2170 01e0 04F2FF14 		addw	r4, r4, #511
 2171              	.LVL304:
 2172 01e4 B8EB542F 		cmp	r8, r4, lsr #9
 2173 01e8 6ED3     		bcc	.L241
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
 2174              		.loc 1 3167 0
 2175 01ea 4FF0FF33 		mov	r3, #-1
 2176 01ee 6B61     		str	r3, [r5, #20]
 2177 01f0 2B61     		str	r3, [r5, #16]
3168:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2178              		.loc 1 3168 0
 2179 01f2 8023     		movs	r3, #128
 2180 01f4 2B71     		strb	r3, [r5, #4]
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 2181              		.loc 1 3170 0
 2182 01f6 032F     		cmp	r7, #3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 147


 2183 01f8 2CD1     		bne	.L215
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
 2184              		.loc 1 3171 0
 2185 01fa 05F16400 		add	r0, r5, #100
 2186 01fe FFF7FEFF 		bl	ld_word
 2187              	.LVL305:
 2188 0202 0128     		cmp	r0, #1
 2189 0204 26D1     		bne	.L215
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
 2190              		.loc 1 3172 0
 2191 0206 711C     		adds	r1, r6, #1
 2192 0208 2846     		mov	r0, r5
 2193 020a FFF7FEFF 		bl	move_window
 2194              	.LVL306:
 2195 020e 08BB     		cbnz	r0, .L215
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2196              		.loc 1 3174 0
 2197 0210 0023     		movs	r3, #0
 2198 0212 2B71     		strb	r3, [r5, #4]
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 2199              		.loc 1 3175 0
 2200 0214 05F23220 		addw	r0, r5, #562
 2201 0218 FFF7FEFF 		bl	ld_word
 2202              	.LVL307:
 2203 021c 4AF65523 		movw	r3, #43605
 2204 0220 9842     		cmp	r0, r3
 2205 0222 17D1     		bne	.L215
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 2206              		.loc 1 3176 0
 2207 0224 05F13400 		add	r0, r5, #52
 2208 0228 FFF7FEFF 		bl	ld_dword
 2209              	.LVL308:
 2210 022c 284B     		ldr	r3, .L251+4
 2211 022e 9842     		cmp	r0, r3
 2212 0230 10D1     		bne	.L215
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
 2213              		.loc 1 3177 0
 2214 0232 05F50670 		add	r0, r5, #536
 2215 0236 FFF7FEFF 		bl	ld_dword
 2216              	.LVL309:
 2217 023a 264B     		ldr	r3, .L251+8
 2218 023c 9842     		cmp	r0, r3
 2219 023e 09D1     		bne	.L215
3180:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2220              		.loc 1 3180 0
 2221 0240 05F50770 		add	r0, r5, #540
 2222 0244 FFF7FEFF 		bl	ld_dword
 2223              	.LVL310:
 2224 0248 6861     		str	r0, [r5, #20]
3183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2225              		.loc 1 3183 0
 2226 024a 05F50870 		add	r0, r5, #544
 2227 024e FFF7FEFF 		bl	ld_dword
 2228              	.LVL311:
 2229 0252 2861     		str	r0, [r5, #16]
 2230              	.L215:
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 148


 2231              		.loc 1 3191 0
 2232 0254 2F70     		strb	r7, [r5]
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 2233              		.loc 1 3192 0
 2234 0256 204A     		ldr	r2, .L251+12
 2235 0258 1388     		ldrh	r3, [r2]
 2236 025a 0133     		adds	r3, r3, #1
 2237 025c 9BB2     		uxth	r3, r3
 2238 025e 1380     		strh	r3, [r2]	@ movhi
 2239 0260 EB80     		strh	r3, [r5, #6]	@ movhi
3203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2240              		.loc 1 3203 0
 2241 0262 2846     		mov	r0, r5
 2242 0264 FFF7FEFF 		bl	clear_lock
 2243              	.LVL312:
3205:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2244              		.loc 1 3205 0
 2245 0268 0020     		movs	r0, #0
 2246 026a 12E0     		b	.L199
 2247              	.LVL313:
 2248              	.L236:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2249              		.loc 1 3144 0
 2250 026c 0227     		movs	r7, #2
 2251 026e 9AE7     		b	.L210
 2252              	.LVL314:
 2253              	.L212:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2254              		.loc 1 3158 0
 2255 0270 BAF1000F 		cmp	r10, #0
 2256 0274 26D0     		beq	.L240
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2257              		.loc 1 3159 0
 2258 0276 4A44     		add	r2, r2, r9
 2259 0278 AA62     		str	r2, [r5, #40]
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2260              		.loc 1 3161 0
 2261 027a 022F     		cmp	r7, #2
 2262 027c 01D1     		bne	.L214
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2263              		.loc 1 3161 0 is_stmt 0 discriminator 1
 2264 027e 6400     		lsls	r4, r4, #1
 2265              	.LVL315:
 2266 0280 AEE7     		b	.L213
 2267              	.LVL316:
 2268              	.L214:
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2269              		.loc 1 3161 0 discriminator 2
 2270 0282 04EB4403 		add	r3, r4, r4, lsl #1
 2271 0286 04F00104 		and	r4, r4, #1
 2272              	.LVL317:
 2273 028a 04EB5304 		add	r4, r4, r3, lsr #1
 2274 028e A7E7     		b	.L213
 2275              	.LVL318:
 2276              	.L216:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2277              		.loc 1 3011 0 is_stmt 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 149


 2278 0290 0B20     		movs	r0, #11
 2279              	.LVL319:
 2280              	.L199:
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2281              		.loc 1 3206 0
 2282 0292 04B0     		add	sp, sp, #16
 2283              	.LCFI27:
 2284              		.cfi_remember_state
 2285              		.cfi_def_cfa_offset 32
 2286              		@ sp needed
 2287 0294 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2288              	.LVL320:
 2289              	.L217:
 2290              	.LCFI28:
 2291              		.cfi_restore_state
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2292              		.loc 1 3015 0
 2293 0298 0C20     		movs	r0, #12
 2294              	.LVL321:
 2295 029a FAE7     		b	.L199
 2296              	.LVL322:
 2297              	.L219:
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2298              		.loc 1 3027 0
 2299 029c 0020     		movs	r0, #0
 2300              	.LVL323:
 2301 029e F8E7     		b	.L199
 2302              	.LVL324:
 2303              	.L226:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2304              		.loc 1 3063 0
 2305 02a0 0120     		movs	r0, #1
 2306              	.LVL325:
 2307 02a2 F6E7     		b	.L199
 2308              	.LVL326:
 2309              	.L230:
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2310              		.loc 1 3127 0
 2311 02a4 0D20     		movs	r0, #13
 2312 02a6 F4E7     		b	.L199
 2313              	.L231:
 2314 02a8 0D20     		movs	r0, #13
 2315 02aa F2E7     		b	.L199
 2316              	.L232:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2317              		.loc 1 3130 0
 2318 02ac 0D20     		movs	r0, #13
 2319 02ae F0E7     		b	.L199
 2320              	.LVL327:
 2321              	.L233:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2322              		.loc 1 3136 0
 2323 02b0 0D20     		movs	r0, #13
 2324              	.LVL328:
 2325 02b2 EEE7     		b	.L199
 2326              	.LVL329:
 2327              	.L234:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 150


3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2328              		.loc 1 3140 0
 2329 02b4 0D20     		movs	r0, #13
 2330              	.LVL330:
 2331 02b6 ECE7     		b	.L199
 2332              	.LVL331:
 2333              	.L235:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2334              		.loc 1 3142 0
 2335 02b8 0D20     		movs	r0, #13
 2336              	.LVL332:
 2337 02ba EAE7     		b	.L199
 2338              	.LVL333:
 2339              	.L238:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2340              		.loc 1 3153 0
 2341 02bc 0D20     		movs	r0, #13
 2342 02be E8E7     		b	.L199
 2343              	.L239:
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2344              		.loc 1 3154 0
 2345 02c0 0D20     		movs	r0, #13
 2346 02c2 E6E7     		b	.L199
 2347              	.LVL334:
 2348              	.L240:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2349              		.loc 1 3158 0
 2350 02c4 0D20     		movs	r0, #13
 2351              	.LVL335:
 2352 02c6 E4E7     		b	.L199
 2353              	.LVL336:
 2354              	.L241:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2355              		.loc 1 3163 0
 2356 02c8 0D20     		movs	r0, #13
 2357 02ca E2E7     		b	.L199
 2358              	.L252:
 2359              		.align	2
 2360              	.L251:
 2361 02cc 00000000 		.word	.LANCHOR2
 2362 02d0 52526141 		.word	1096897106
 2363 02d4 72724161 		.word	1631679090
 2364 02d8 00000000 		.word	.LANCHOR3
 2365              		.cfi_endproc
 2366              	.LFE179:
 2368              		.section	.text.put_fat,"ax",%progbits
 2369              		.align	1
 2370              		.syntax unified
 2371              		.thumb
 2372              		.thumb_func
 2373              		.fpu fpv5-sp-d16
 2375              	put_fat:
 2376              	.LFB161:
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2377              		.loc 1 1086 0
 2378              		.cfi_startproc
 2379              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 151


 2380              		@ frame_needed = 0, uses_anonymous_args = 0
 2381              	.LVL337:
 2382 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2383              	.LCFI29:
 2384              		.cfi_def_cfa_offset 32
 2385              		.cfi_offset 4, -32
 2386              		.cfi_offset 5, -28
 2387              		.cfi_offset 6, -24
 2388              		.cfi_offset 7, -20
 2389              		.cfi_offset 8, -16
 2390              		.cfi_offset 9, -12
 2391              		.cfi_offset 10, -8
 2392              		.cfi_offset 14, -4
 2393              	.LVL338:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2394              		.loc 1 1091 0
 2395 0004 0129     		cmp	r1, #1
 2396 0006 7CD9     		bls	.L262
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2397              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2398 0008 8369     		ldr	r3, [r0, #24]
 2399 000a 9942     		cmp	r1, r3
 2400 000c 01D3     		bcc	.L267
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2401              		.loc 1 1089 0 is_stmt 1
 2402 000e 0225     		movs	r5, #2
 2403 0010 78E0     		b	.L254
 2404              	.L267:
 2405 0012 1746     		mov	r7, r2
 2406 0014 0C46     		mov	r4, r1
 2407 0016 0646     		mov	r6, r0
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
 2408              		.loc 1 1092 0
 2409 0018 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2410 001a 022B     		cmp	r3, #2
 2411 001c 43D0     		beq	.L255
 2412 001e 032B     		cmp	r3, #3
 2413 0020 54D0     		beq	.L256
 2414 0022 012B     		cmp	r3, #1
 2415 0024 01D0     		beq	.L268
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2416              		.loc 1 1089 0
 2417 0026 0225     		movs	r5, #2
 2418 0028 6CE0     		b	.L254
 2419              	.L268:
 2420              	.LVL339:
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2421              		.loc 1 1094 0
 2422 002a 01EB5108 		add	r8, r1, r1, lsr #1
 2423              	.LVL340:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2424              		.loc 1 1095 0
 2425 002e 416A     		ldr	r1, [r0, #36]
 2426              	.LVL341:
 2427 0030 01EB5821 		add	r1, r1, r8, lsr #9
 2428 0034 FFF7FEFF 		bl	move_window
 2429              	.LVL342:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 152


1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
 2430              		.loc 1 1096 0
 2431 0038 0546     		mov	r5, r0
 2432 003a 0028     		cmp	r0, #0
 2433 003c 62D1     		bne	.L254
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2434              		.loc 1 1097 0
 2435 003e 06F1340A 		add	r10, r6, #52
 2436 0042 08F10109 		add	r9, r8, #1
 2437              	.LVL343:
 2438 0046 C8F30808 		ubfx	r8, r8, #0, #9
 2439              	.LVL344:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2440              		.loc 1 1098 0
 2441 004a 14F00104 		ands	r4, r4, #1
 2442              	.LVL345:
 2443 004e 1FD0     		beq	.L258
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2444              		.loc 1 1098 0 is_stmt 0 discriminator 1
 2445 0050 1AF90830 		ldrsb	r3, [r10, r8]
 2446 0054 03F00F03 		and	r3, r3, #15
 2447 0058 3A01     		lsls	r2, r7, #4
 2448 005a 02F47F62 		and	r2, r2, #4080
 2449 005e 1343     		orrs	r3, r3, r2
 2450 0060 DBB2     		uxtb	r3, r3
 2451              	.L259:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2452              		.loc 1 1098 0 discriminator 4
 2453 0062 0AF80830 		strb	r3, [r10, r8]
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2454              		.loc 1 1099 0 is_stmt 1 discriminator 4
 2455 0066 0123     		movs	r3, #1
 2456 0068 F370     		strb	r3, [r6, #3]
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2457              		.loc 1 1100 0 discriminator 4
 2458 006a 716A     		ldr	r1, [r6, #36]
 2459 006c 01EB5921 		add	r1, r1, r9, lsr #9
 2460 0070 3046     		mov	r0, r6
 2461              	.LVL346:
 2462 0072 FFF7FEFF 		bl	move_window
 2463              	.LVL347:
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
 2464              		.loc 1 1101 0 discriminator 4
 2465 0076 0546     		mov	r5, r0
 2466 0078 0028     		cmp	r0, #0
 2467 007a 43D1     		bne	.L254
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2468              		.loc 1 1102 0
 2469 007c C9F30809 		ubfx	r9, r9, #0, #9
 2470              	.LVL348:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2471              		.loc 1 1103 0
 2472 0080 44B1     		cbz	r4, .L260
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2473              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2474 0082 C7F30712 		ubfx	r2, r7, #4, #8
 2475              	.LVL349:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 153


 2476              	.L261:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2477              		.loc 1 1103 0 discriminator 4
 2478 0086 0AF80920 		strb	r2, [r10, r9]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2479              		.loc 1 1104 0 is_stmt 1 discriminator 4
 2480 008a 0123     		movs	r3, #1
 2481 008c F370     		strb	r3, [r6, #3]
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2482              		.loc 1 1105 0 discriminator 4
 2483 008e 39E0     		b	.L254
 2484              	.LVL350:
 2485              	.L258:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2486              		.loc 1 1098 0 discriminator 2
 2487 0090 FBB2     		uxtb	r3, r7
 2488 0092 E6E7     		b	.L259
 2489              	.LVL351:
 2490              	.L260:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2491              		.loc 1 1103 0 discriminator 2
 2492 0094 1AF90920 		ldrsb	r2, [r10, r9]
 2493 0098 22F00F02 		bic	r2, r2, #15
 2494 009c C7F30327 		ubfx	r7, r7, #8, #4
 2495              	.LVL352:
 2496 00a0 3A43     		orrs	r2, r2, r7
 2497 00a2 D2B2     		uxtb	r2, r2
 2498 00a4 EFE7     		b	.L261
 2499              	.LVL353:
 2500              	.L255:
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2501              		.loc 1 1108 0
 2502 00a6 416A     		ldr	r1, [r0, #36]
 2503              	.LVL354:
 2504 00a8 01EB1421 		add	r1, r1, r4, lsr #8
 2505 00ac FFF7FEFF 		bl	move_window
 2506              	.LVL355:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 2507              		.loc 1 1109 0
 2508 00b0 0546     		mov	r5, r0
 2509 00b2 38BB     		cbnz	r0, .L254
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2510              		.loc 1 1110 0
 2511 00b4 06F13400 		add	r0, r6, #52
 2512              	.LVL356:
 2513 00b8 6300     		lsls	r3, r4, #1
 2514 00ba 03F4FF73 		and	r3, r3, #510
 2515 00be B9B2     		uxth	r1, r7
 2516 00c0 1844     		add	r0, r0, r3
 2517 00c2 FFF7FEFF 		bl	st_word
 2518              	.LVL357:
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2519              		.loc 1 1111 0
 2520 00c6 0123     		movs	r3, #1
 2521 00c8 F370     		strb	r3, [r6, #3]
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2522              		.loc 1 1112 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 154


 2523 00ca 1BE0     		b	.L254
 2524              	.LVL358:
 2525              	.L256:
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2526              		.loc 1 1118 0
 2527 00cc 416A     		ldr	r1, [r0, #36]
 2528              	.LVL359:
 2529 00ce 01EBD411 		add	r1, r1, r4, lsr #7
 2530 00d2 FFF7FEFF 		bl	move_window
 2531              	.LVL360:
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2532              		.loc 1 1119 0
 2533 00d6 0546     		mov	r5, r0
 2534 00d8 A0B9     		cbnz	r0, .L254
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2535              		.loc 1 1121 0
 2536 00da 27F07047 		bic	r7, r7, #-268435456
 2537              	.LVL361:
 2538 00de 06F13403 		add	r3, r6, #52
 2539 00e2 A100     		lsls	r1, r4, #2
 2540 00e4 01F4FE71 		and	r1, r1, #508
 2541 00e8 5C18     		adds	r4, r3, r1
 2542              	.LVL362:
 2543 00ea 2046     		mov	r0, r4
 2544              	.LVL363:
 2545 00ec FFF7FEFF 		bl	ld_dword
 2546              	.LVL364:
 2547 00f0 00F07041 		and	r1, r0, #-268435456
 2548              	.LVL365:
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2549              		.loc 1 1123 0
 2550 00f4 3943     		orrs	r1, r1, r7
 2551              	.LVL366:
 2552 00f6 2046     		mov	r0, r4
 2553 00f8 FFF7FEFF 		bl	st_dword
 2554              	.LVL367:
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2555              		.loc 1 1124 0
 2556 00fc 0123     		movs	r3, #1
 2557 00fe F370     		strb	r3, [r6, #3]
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2558              		.loc 1 1125 0
 2559 0100 00E0     		b	.L254
 2560              	.LVL368:
 2561              	.L262:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2562              		.loc 1 1089 0
 2563 0102 0225     		movs	r5, #2
 2564              	.LVL369:
 2565              	.L254:
1129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2566              		.loc 1 1129 0
 2567 0104 2846     		mov	r0, r5
 2568 0106 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2569              		.cfi_endproc
 2570              	.LFE161:
 2572              		.section	.text.get_fat,"ax",%progbits
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 155


 2573              		.align	1
 2574              		.syntax unified
 2575              		.thumb
 2576              		.thumb_func
 2577              		.fpu fpv5-sp-d16
 2579              	get_fat:
 2580              	.LFB160:
1005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 2581              		.loc 1 1005 0
 2582              		.cfi_startproc
 2583              		@ args = 0, pretend = 0, frame = 0
 2584              		@ frame_needed = 0, uses_anonymous_args = 0
 2585              	.LVL370:
 2586 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2587              	.LCFI30:
 2588              		.cfi_def_cfa_offset 24
 2589              		.cfi_offset 3, -24
 2590              		.cfi_offset 4, -20
 2591              		.cfi_offset 5, -16
 2592              		.cfi_offset 6, -12
 2593              		.cfi_offset 7, -8
 2594              		.cfi_offset 14, -4
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2595              		.loc 1 1008 0
 2596 0002 0668     		ldr	r6, [r0]
 2597              	.LVL371:
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2598              		.loc 1 1011 0
 2599 0004 0129     		cmp	r1, #1
 2600 0006 5ED9     		bls	.L275
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2601              		.loc 1 1011 0 is_stmt 0 discriminator 1
 2602 0008 B369     		ldr	r3, [r6, #24]
 2603 000a 9942     		cmp	r1, r3
 2604 000c 5DD2     		bcs	.L276
 2605 000e 0C46     		mov	r4, r1
 2606              	.LVL372:
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2607              		.loc 1 1017 0 is_stmt 1
 2608 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2609 0012 022B     		cmp	r3, #2
 2610 0014 30D0     		beq	.L271
 2611 0016 032B     		cmp	r3, #3
 2612 0018 41D0     		beq	.L272
 2613 001a 012B     		cmp	r3, #1
 2614 001c 01D0     		beq	.L284
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2615              		.loc 1 1065 0
 2616 001e 0120     		movs	r0, #1
 2617              	.LVL373:
 2618 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2619              	.LVL374:
 2620              	.L284:
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2621              		.loc 1 1019 0
 2622 0022 01EB5105 		add	r5, r1, r1, lsr #1
 2623              	.LVL375:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 156


1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 2624              		.loc 1 1020 0
 2625 0026 716A     		ldr	r1, [r6, #36]
 2626              	.LVL376:
 2627 0028 01EB5521 		add	r1, r1, r5, lsr #9
 2628 002c 3046     		mov	r0, r6
 2629              	.LVL377:
 2630 002e FFF7FEFF 		bl	move_window
 2631              	.LVL378:
 2632 0032 10B1     		cbz	r0, .L285
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2633              		.loc 1 1015 0
 2634 0034 4FF0FF30 		mov	r0, #-1
 2635 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2636              	.LVL379:
 2637              	.L285:
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2638              		.loc 1 1021 0
 2639 003a 6F1C     		adds	r7, r5, #1
 2640              	.LVL380:
 2641 003c C5F30805 		ubfx	r5, r5, #0, #9
 2642 0040 3544     		add	r5, r5, r6
 2643 0042 95F83450 		ldrb	r5, [r5, #52]	@ zero_extendqisi2
 2644              	.LVL381:
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
 2645              		.loc 1 1022 0
 2646 0046 716A     		ldr	r1, [r6, #36]
 2647 0048 01EB5721 		add	r1, r1, r7, lsr #9
 2648 004c 3046     		mov	r0, r6
 2649 004e FFF7FEFF 		bl	move_window
 2650              	.LVL382:
 2651 0052 10B1     		cbz	r0, .L286
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2652              		.loc 1 1015 0
 2653 0054 4FF0FF30 		mov	r0, #-1
 2654 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2655              	.LVL383:
 2656              	.L286:
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 2657              		.loc 1 1023 0
 2658 005a C7F30803 		ubfx	r3, r7, #0, #9
 2659 005e 3344     		add	r3, r3, r6
 2660 0060 93F83400 		ldrb	r0, [r3, #52]	@ zero_extendqisi2
 2661 0064 45EA0020 		orr	r0, r5, r0, lsl #8
 2662              	.LVL384:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2663              		.loc 1 1024 0
 2664 0068 14F0010F 		tst	r4, #1
 2665 006c 01D0     		beq	.L274
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2666              		.loc 1 1024 0 is_stmt 0 discriminator 1
 2667 006e 0009     		lsrs	r0, r0, #4
 2668              	.LVL385:
 2669 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2670              	.LVL386:
 2671              	.L274:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 157


 2672              		.loc 1 1024 0 discriminator 2
 2673 0072 C0F30B00 		ubfx	r0, r0, #0, #12
 2674              	.LVL387:
 2675 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2676              	.LVL388:
 2677              	.L271:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 2678              		.loc 1 1028 0 is_stmt 1
 2679 0078 716A     		ldr	r1, [r6, #36]
 2680              	.LVL389:
 2681 007a 01EB1421 		add	r1, r1, r4, lsr #8
 2682 007e 3046     		mov	r0, r6
 2683              	.LVL390:
 2684 0080 FFF7FEFF 		bl	move_window
 2685              	.LVL391:
 2686 0084 10B1     		cbz	r0, .L287
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2687              		.loc 1 1015 0
 2688 0086 4FF0FF30 		mov	r0, #-1
 2689 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2690              	.LVL392:
 2691              	.L287:
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2692              		.loc 1 1029 0
 2693 008c 06F13400 		add	r0, r6, #52
 2694 0090 6100     		lsls	r1, r4, #1
 2695 0092 01F4FF71 		and	r1, r1, #510
 2696 0096 0844     		add	r0, r0, r1
 2697 0098 FFF7FEFF 		bl	ld_word
 2698              	.LVL393:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2699              		.loc 1 1030 0
 2700 009c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2701              	.LVL394:
 2702              	.L272:
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 2703              		.loc 1 1033 0
 2704 009e 716A     		ldr	r1, [r6, #36]
 2705              	.LVL395:
 2706 00a0 01EBD411 		add	r1, r1, r4, lsr #7
 2707 00a4 3046     		mov	r0, r6
 2708              	.LVL396:
 2709 00a6 FFF7FEFF 		bl	move_window
 2710              	.LVL397:
 2711 00aa 10B1     		cbz	r0, .L288
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2712              		.loc 1 1015 0
 2713 00ac 4FF0FF30 		mov	r0, #-1
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2714              		.loc 1 1070 0
 2715 00b0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2716              	.LVL398:
 2717              	.L288:
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2718              		.loc 1 1034 0
 2719 00b2 3436     		adds	r6, r6, #52
 2720              	.LVL399:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 158


 2721 00b4 A100     		lsls	r1, r4, #2
 2722 00b6 01F4FE70 		and	r0, r1, #508
 2723 00ba 3044     		add	r0, r0, r6
 2724 00bc FFF7FEFF 		bl	ld_dword
 2725              	.LVL400:
 2726 00c0 20F07040 		bic	r0, r0, #-268435456
 2727              	.LVL401:
1035:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 2728              		.loc 1 1035 0
 2729 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2730              	.LVL402:
 2731              	.L275:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2732              		.loc 1 1012 0
 2733 00c6 0120     		movs	r0, #1
 2734              	.LVL403:
 2735 00c8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2736              	.LVL404:
 2737              	.L276:
 2738 00ca 0120     		movs	r0, #1
 2739              	.LVL405:
 2740 00cc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2741              		.cfi_endproc
 2742              	.LFE160:
 2744              		.section	.text.dir_sdi,"ax",%progbits
 2745              		.align	1
 2746              		.syntax unified
 2747              		.thumb
 2748              		.thumb_func
 2749              		.fpu fpv5-sp-d16
 2751              	dir_sdi:
 2752              	.LFB165:
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
 2753              		.loc 1 1474 0
 2754              		.cfi_startproc
 2755              		@ args = 0, pretend = 0, frame = 0
 2756              		@ frame_needed = 0, uses_anonymous_args = 0
 2757              	.LVL406:
 2758 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2759              	.LCFI31:
 2760              		.cfi_def_cfa_offset 24
 2761              		.cfi_offset 4, -24
 2762              		.cfi_offset 5, -20
 2763              		.cfi_offset 6, -16
 2764              		.cfi_offset 7, -12
 2765              		.cfi_offset 8, -8
 2766              		.cfi_offset 14, -4
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2767              		.loc 1 1476 0
 2768 0004 0768     		ldr	r7, [r0]
 2769              	.LVL407:
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2770              		.loc 1 1479 0
 2771 0006 B1F5001F 		cmp	r1, #2097152
 2772 000a 02D3     		bcc	.L304
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2773              		.loc 1 1480 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 159


 2774 000c 0220     		movs	r0, #2
 2775              	.LVL408:
 2776 000e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2777              	.LVL409:
 2778              	.L304:
 2779 0012 0646     		mov	r6, r0
 2780 0014 0C46     		mov	r4, r1
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2781              		.loc 1 1479 0 discriminator 1
 2782 0016 11F01F0F 		tst	r1, #31
 2783 001a 02D0     		beq	.L305
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2784              		.loc 1 1480 0
 2785 001c 0220     		movs	r0, #2
 2786              	.LVL410:
 2787 001e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2788              	.LVL411:
 2789              	.L305:
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 2790              		.loc 1 1482 0
 2791 0022 7161     		str	r1, [r6, #20]
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 2792              		.loc 1 1483 0
 2793 0024 8568     		ldr	r5, [r0, #8]
 2794              	.LVL412:
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2795              		.loc 1 1484 0
 2796 0026 1DB9     		cbnz	r5, .L291
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2797              		.loc 1 1484 0 is_stmt 0 discriminator 1
 2798 0028 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2799 002a 022B     		cmp	r3, #2
 2800 002c 00D9     		bls	.L291
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 2801              		.loc 1 1485 0 is_stmt 1
 2802 002e BD6A     		ldr	r5, [r7, #40]
 2803              	.LVL413:
 2804              	.L291:
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 2805              		.loc 1 1489 0
 2806 0030 75B9     		cbnz	r5, .L292
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 2807              		.loc 1 1490 0
 2808 0032 3B89     		ldrh	r3, [r7, #8]
 2809 0034 B3EB541F 		cmp	r3, r4, lsr #5
 2810 0038 02D8     		bhi	.L306
 2811 003a 0220     		movs	r0, #2
 2812              	.LVL414:
 2813 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2814              	.LVL415:
 2815              	.L306:
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2816              		.loc 1 1491 0
 2817 0040 BB6A     		ldr	r3, [r7, #40]
 2818 0042 F361     		str	r3, [r6, #28]
 2819              	.LVL416:
 2820              	.L293:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 160


1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
 2821              		.loc 1 1503 0
 2822 0044 B561     		str	r5, [r6, #24]
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2823              		.loc 1 1504 0
 2824 0046 F369     		ldr	r3, [r6, #28]
 2825 0048 0BBB     		cbnz	r3, .L307
 2826 004a 0220     		movs	r0, #2
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2827              		.loc 1 1509 0
 2828 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2829              	.LVL417:
 2830              	.L292:
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 2831              		.loc 1 1494 0
 2832 0050 B7F80A80 		ldrh	r8, [r7, #10]
 2833 0054 4FEA4828 		lsl	r8, r8, #9
 2834              	.LVL418:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2835              		.loc 1 1495 0
 2836 0058 01E0     		b	.L294
 2837              	.LVL419:
 2838              	.L309:
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2839              		.loc 1 1499 0
 2840 005a A4EB0804 		sub	r4, r4, r8
 2841              	.LVL420:
 2842              	.L294:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2843              		.loc 1 1495 0
 2844 005e 4445     		cmp	r4, r8
 2845 0060 0FD3     		bcc	.L308
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2846              		.loc 1 1496 0
 2847 0062 2946     		mov	r1, r5
 2848 0064 3046     		mov	r0, r6
 2849 0066 FFF7FEFF 		bl	get_fat
 2850              	.LVL421:
 2851 006a 0546     		mov	r5, r0
 2852              	.LVL422:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2853              		.loc 1 1497 0
 2854 006c B0F1FF3F 		cmp	r0, #-1
 2855 0070 18D0     		beq	.L299
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2856              		.loc 1 1498 0
 2857 0072 0128     		cmp	r0, #1
 2858 0074 19D9     		bls	.L300
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2859              		.loc 1 1498 0 is_stmt 0 discriminator 2
 2860 0076 BB69     		ldr	r3, [r7, #24]
 2861 0078 9842     		cmp	r0, r3
 2862 007a EED3     		bcc	.L309
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2863              		.loc 1 1498 0
 2864 007c 0220     		movs	r0, #2
 2865              	.LVL423:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 161


 2866 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2867              	.LVL424:
 2868              	.L308:
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2869              		.loc 1 1501 0 is_stmt 1
 2870 0082 2946     		mov	r1, r5
 2871 0084 3846     		mov	r0, r7
 2872 0086 FFF7FEFF 		bl	clust2sect
 2873              	.LVL425:
 2874 008a F061     		str	r0, [r6, #28]
 2875 008c DAE7     		b	.L293
 2876              	.LVL426:
 2877              	.L307:
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 2878              		.loc 1 1505 0
 2879 008e 03EB5423 		add	r3, r3, r4, lsr #9
 2880 0092 F361     		str	r3, [r6, #28]
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2881              		.loc 1 1506 0
 2882 0094 3437     		adds	r7, r7, #52
 2883              	.LVL427:
 2884 0096 C4F30804 		ubfx	r4, r4, #0, #9
 2885              	.LVL428:
 2886 009a 3C44     		add	r4, r4, r7
 2887 009c 3462     		str	r4, [r6, #32]
1508:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2888              		.loc 1 1508 0
 2889 009e 0020     		movs	r0, #0
 2890 00a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2891              	.LVL429:
 2892              	.L299:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2893              		.loc 1 1497 0
 2894 00a4 0120     		movs	r0, #1
 2895              	.LVL430:
 2896 00a6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2897              	.LVL431:
 2898              	.L300:
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2899              		.loc 1 1498 0
 2900 00aa 0220     		movs	r0, #2
 2901              	.LVL432:
 2902 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2903              		.cfi_endproc
 2904              	.LFE165:
 2906              		.section	.text.create_chain,"ax",%progbits
 2907              		.align	1
 2908              		.syntax unified
 2909              		.thumb
 2910              		.thumb_func
 2911              		.fpu fpv5-sp-d16
 2913              	create_chain:
 2914              	.LFB163:
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 2915              		.loc 1 1355 0
 2916              		.cfi_startproc
 2917              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 162


 2918              		@ frame_needed = 0, uses_anonymous_args = 0
 2919              	.LVL433:
 2920 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2921              	.LCFI32:
 2922              		.cfi_def_cfa_offset 24
 2923              		.cfi_offset 4, -24
 2924              		.cfi_offset 5, -20
 2925              		.cfi_offset 6, -16
 2926              		.cfi_offset 7, -12
 2927              		.cfi_offset 8, -8
 2928              		.cfi_offset 14, -4
 2929 0004 0746     		mov	r7, r0
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2930              		.loc 1 1358 0
 2931 0006 0668     		ldr	r6, [r0]
 2932              	.LVL434:
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
 2933              		.loc 1 1361 0
 2934 0008 8846     		mov	r8, r1
 2935 000a 31B9     		cbnz	r1, .L311
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 2936              		.loc 1 1362 0
 2937 000c 3569     		ldr	r5, [r6, #16]
 2938              	.LVL435:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2939              		.loc 1 1363 0
 2940 000e 8DB1     		cbz	r5, .L320
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2941              		.loc 1 1363 0 is_stmt 0 discriminator 2
 2942 0010 B369     		ldr	r3, [r6, #24]
 2943 0012 9D42     		cmp	r5, r3
 2944 0014 0FD3     		bcc	.L312
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2945              		.loc 1 1363 0
 2946 0016 0125     		movs	r5, #1
 2947              	.LVL436:
 2948 0018 0DE0     		b	.L312
 2949              	.LVL437:
 2950              	.L311:
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
 2951              		.loc 1 1366 0 is_stmt 1
 2952 001a FFF7FEFF 		bl	get_fat
 2953              	.LVL438:
 2954 001e 0346     		mov	r3, r0
 2955              	.LVL439:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 2956              		.loc 1 1367 0
 2957 0020 0128     		cmp	r0, #1
 2958 0022 4BD9     		bls	.L322
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2959              		.loc 1 1368 0
 2960 0024 B0F1FF3F 		cmp	r0, #-1
 2961 0028 4DD0     		beq	.L310
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 2962              		.loc 1 1369 0
 2963 002a B269     		ldr	r2, [r6, #24]
 2964 002c 9042     		cmp	r0, r2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 163


 2965 002e 4AD3     		bcc	.L310
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2966              		.loc 1 1370 0
 2967 0030 4546     		mov	r5, r8
 2968 0032 00E0     		b	.L312
 2969              	.LVL440:
 2970              	.L320:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2971              		.loc 1 1363 0
 2972 0034 0125     		movs	r5, #1
 2973              	.LVL441:
 2974              	.L312:
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
 2975              		.loc 1 1400 0
 2976 0036 2C46     		mov	r4, r5
 2977 0038 0CE0     		b	.L316
 2978              	.LVL442:
 2979              	.L314:
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
 2980              		.loc 1 1407 0
 2981 003a 2146     		mov	r1, r4
 2982 003c 3846     		mov	r0, r7
 2983 003e FFF7FEFF 		bl	get_fat
 2984              	.LVL443:
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 2985              		.loc 1 1408 0
 2986 0042 0346     		mov	r3, r0
 2987 0044 70B1     		cbz	r0, .L315
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 2988              		.loc 1 1409 0
 2989 0046 B0F1FF3F 		cmp	r0, #-1
 2990 004a 18BF     		it	ne
 2991 004c 0128     		cmpne	r0, #1
 2992 004e 3AD0     		beq	.L310
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2993              		.loc 1 1410 0
 2994 0050 AC42     		cmp	r4, r5
 2995 0052 37D0     		beq	.L327
 2996              	.LVL444:
 2997              	.L316:
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 2998              		.loc 1 1402 0
 2999 0054 0134     		adds	r4, r4, #1
 3000              	.LVL445:
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
 3001              		.loc 1 1403 0
 3002 0056 B369     		ldr	r3, [r6, #24]
 3003 0058 9C42     		cmp	r4, r3
 3004 005a EED3     		bcc	.L314
 3005              	.LVL446:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3006              		.loc 1 1405 0
 3007 005c 012D     		cmp	r5, #1
 3008 005e 2FD9     		bls	.L323
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
 3009              		.loc 1 1404 0
 3010 0060 0224     		movs	r4, #2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 164


 3011 0062 EAE7     		b	.L314
 3012              	.LVL447:
 3013              	.L315:
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
 3014              		.loc 1 1412 0
 3015 0064 4FF0FF32 		mov	r2, #-1
 3016 0068 2146     		mov	r1, r4
 3017 006a 3046     		mov	r0, r6
 3018              	.LVL448:
 3019 006c FFF7FEFF 		bl	put_fat
 3020              	.LVL449:
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 3021              		.loc 1 1413 0
 3022 0070 0346     		mov	r3, r0
 3023 0072 B0FA80F0 		clz	r0, r0
 3024              	.LVL450:
 3025 0076 4009     		lsrs	r0, r0, #5
 3026 0078 B8F1000F 		cmp	r8, #0
 3027 007c 08BF     		it	eq
 3028 007e 0020     		moveq	r0, #0
 3029 0080 70B9     		cbnz	r0, .L328
 3030              	.L317:
 3031              	.LVL451:
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
 3032              		.loc 1 1418 0
 3033 0082 A3B9     		cbnz	r3, .L318
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 3034              		.loc 1 1419 0
 3035 0084 3461     		str	r4, [r6, #16]
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 3036              		.loc 1 1420 0
 3037 0086 7269     		ldr	r2, [r6, #20]
 3038 0088 B369     		ldr	r3, [r6, #24]
 3039              	.LVL452:
 3040 008a 023B     		subs	r3, r3, #2
 3041 008c 9A42     		cmp	r2, r3
 3042 008e 01D8     		bhi	.L319
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 3043              		.loc 1 1420 0 is_stmt 0 discriminator 1
 3044 0090 013A     		subs	r2, r2, #1
 3045 0092 7261     		str	r2, [r6, #20]
 3046              	.L319:
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 3047              		.loc 1 1421 0 is_stmt 1
 3048 0094 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 3049 0096 43F00103 		orr	r3, r3, #1
 3050 009a 3371     		strb	r3, [r6, #4]
 3051 009c 2346     		mov	r3, r4
 3052 009e 12E0     		b	.L310
 3053              	.L328:
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3054              		.loc 1 1414 0
 3055 00a0 2246     		mov	r2, r4
 3056 00a2 4146     		mov	r1, r8
 3057 00a4 3046     		mov	r0, r6
 3058 00a6 FFF7FEFF 		bl	put_fat
 3059              	.LVL453:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 165


 3060 00aa 0346     		mov	r3, r0
 3061              	.LVL454:
 3062 00ac E9E7     		b	.L317
 3063              	.L318:
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3064              		.loc 1 1423 0
 3065 00ae 012B     		cmp	r3, #1
 3066 00b0 01D0     		beq	.L329
 3067 00b2 0123     		movs	r3, #1
 3068              	.LVL455:
 3069 00b4 07E0     		b	.L310
 3070              	.LVL456:
 3071              	.L329:
 3072 00b6 4FF0FF33 		mov	r3, #-1
 3073              	.LVL457:
 3074 00ba 04E0     		b	.L310
 3075              	.LVL458:
 3076              	.L322:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3077              		.loc 1 1367 0
 3078 00bc 0123     		movs	r3, #1
 3079 00be 02E0     		b	.L310
 3080              	.LVL459:
 3081              	.L323:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3082              		.loc 1 1405 0
 3083 00c0 0023     		movs	r3, #0
 3084 00c2 00E0     		b	.L310
 3085              	.LVL460:
 3086              	.L327:
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3087              		.loc 1 1410 0
 3088 00c4 0023     		movs	r3, #0
 3089              	.LVL461:
 3090              	.L310:
1427:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3091              		.loc 1 1427 0
 3092 00c6 1846     		mov	r0, r3
 3093 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3094              		.cfi_endproc
 3095              	.LFE163:
 3097              		.section	.text.remove_chain,"ax",%progbits
 3098              		.align	1
 3099              		.syntax unified
 3100              		.thumb
 3101              		.thumb_func
 3102              		.fpu fpv5-sp-d16
 3104              	remove_chain:
 3105              	.LFB162:
1276:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 3106              		.loc 1 1276 0
 3107              		.cfi_startproc
 3108              		@ args = 0, pretend = 0, frame = 0
 3109              		@ frame_needed = 0, uses_anonymous_args = 0
 3110              	.LVL462:
 3111 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3112              	.LCFI33:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 166


 3113              		.cfi_def_cfa_offset 24
 3114              		.cfi_offset 3, -24
 3115              		.cfi_offset 4, -20
 3116              		.cfi_offset 5, -16
 3117              		.cfi_offset 6, -12
 3118              		.cfi_offset 7, -8
 3119              		.cfi_offset 14, -4
 3120 0002 0E46     		mov	r6, r1
 3121              	.LVL463:
1279:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
 3122              		.loc 1 1279 0
 3123 0004 0468     		ldr	r4, [r0]
 3124              	.LVL464:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3125              		.loc 1 1287 0
 3126 0006 0129     		cmp	r1, #1
 3127 0008 30D9     		bls	.L335
 3128 000a 0746     		mov	r7, r0
 3129 000c 1146     		mov	r1, r2
 3130              	.LVL465:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3131              		.loc 1 1287 0 is_stmt 0 discriminator 2
 3132 000e A369     		ldr	r3, [r4, #24]
 3133 0010 9E42     		cmp	r6, r3
 3134 0012 01D3     		bcc	.L341
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3135              		.loc 1 1287 0
 3136 0014 0221     		movs	r1, #2
 3137 0016 2AE0     		b	.L331
 3138              	.LVL466:
 3139              	.L341:
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 3140              		.loc 1 1290 0 is_stmt 1
 3141 0018 52B1     		cbz	r2, .L334
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
 3142              		.loc 1 1291 0
 3143 001a 4FF0FF32 		mov	r2, #-1
 3144 001e 2046     		mov	r0, r4
 3145              	.LVL467:
 3146 0020 FFF7FEFF 		bl	put_fat
 3147              	.LVL468:
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3148              		.loc 1 1292 0
 3149 0024 0146     		mov	r1, r0
 3150 0026 18B1     		cbz	r0, .L334
 3151 0028 21E0     		b	.L331
 3152              	.LVL469:
 3153              	.L333:
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 3154              		.loc 1 1327 0
 3155 002a 2E46     		mov	r6, r5
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3156              		.loc 1 1328 0
 3157 002c 9542     		cmp	r5, r2
 3158 002e 1ED2     		bcs	.L331
 3159              	.LVL470:
 3160              	.L334:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 167


1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 3161              		.loc 1 1297 0
 3162 0030 3146     		mov	r1, r6
 3163 0032 3846     		mov	r0, r7
 3164 0034 FFF7FEFF 		bl	get_fat
 3165              	.LVL471:
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3166              		.loc 1 1298 0
 3167 0038 0546     		mov	r5, r0
 3168 003a D0B1     		cbz	r0, .L337
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3169              		.loc 1 1299 0
 3170 003c 0128     		cmp	r0, #1
 3171 003e 1AD0     		beq	.L338
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3172              		.loc 1 1300 0
 3173 0040 B0F1FF3F 		cmp	r0, #-1
 3174 0044 19D0     		beq	.L339
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
 3175              		.loc 1 1302 0
 3176 0046 0022     		movs	r2, #0
 3177 0048 3146     		mov	r1, r6
 3178 004a 2046     		mov	r0, r4
 3179              	.LVL472:
 3180 004c FFF7FEFF 		bl	put_fat
 3181              	.LVL473:
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3182              		.loc 1 1303 0
 3183 0050 0146     		mov	r1, r0
 3184 0052 60B9     		cbnz	r0, .L331
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
 3185              		.loc 1 1305 0
 3186 0054 6369     		ldr	r3, [r4, #20]
 3187 0056 A269     		ldr	r2, [r4, #24]
 3188 0058 901E     		subs	r0, r2, #2
 3189              	.LVL474:
 3190 005a 8342     		cmp	r3, r0
 3191 005c E5D2     		bcs	.L333
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 3192              		.loc 1 1306 0
 3193 005e 0133     		adds	r3, r3, #1
 3194 0060 6361     		str	r3, [r4, #20]
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3195              		.loc 1 1307 0
 3196 0062 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3197 0064 43F00103 		orr	r3, r3, #1
 3198 0068 2371     		strb	r3, [r4, #4]
 3199 006a DEE7     		b	.L333
 3200              	.LVL475:
 3201              	.L335:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3202              		.loc 1 1287 0
 3203 006c 0221     		movs	r1, #2
 3204              	.LVL476:
 3205              	.L331:
1342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3206              		.loc 1 1342 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 168


 3207 006e 0846     		mov	r0, r1
 3208 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3209              	.LVL477:
 3210              	.L337:
1341:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3211              		.loc 1 1341 0
 3212 0072 0021     		movs	r1, #0
 3213 0074 FBE7     		b	.L331
 3214              	.L338:
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3215              		.loc 1 1299 0
 3216 0076 0221     		movs	r1, #2
 3217 0078 F9E7     		b	.L331
 3218              	.L339:
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3219              		.loc 1 1300 0
 3220 007a 0121     		movs	r1, #1
 3221 007c F7E7     		b	.L331
 3222              		.cfi_endproc
 3223              	.LFE162:
 3225              		.section	.text.dir_remove,"ax",%progbits
 3226              		.align	1
 3227              		.syntax unified
 3228              		.thumb
 3229              		.thumb_func
 3230              		.fpu fpv5-sp-d16
 3232              	dir_remove:
 3233              	.LFB173:
2399:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3234              		.loc 1 2399 0
 3235              		.cfi_startproc
 3236              		@ args = 0, pretend = 0, frame = 0
 3237              		@ frame_needed = 0, uses_anonymous_args = 0
 3238              	.LVL478:
 3239 0000 38B5     		push	{r3, r4, r5, lr}
 3240              	.LCFI34:
 3241              		.cfi_def_cfa_offset 16
 3242              		.cfi_offset 3, -16
 3243              		.cfi_offset 4, -12
 3244              		.cfi_offset 5, -8
 3245              		.cfi_offset 14, -4
 3246 0002 0446     		mov	r4, r0
2401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3247              		.loc 1 2401 0
 3248 0004 0568     		ldr	r5, [r0]
 3249              	.LVL479:
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3250              		.loc 1 2424 0
 3251 0006 C169     		ldr	r1, [r0, #28]
 3252 0008 2846     		mov	r0, r5
 3253              	.LVL480:
 3254 000a FFF7FEFF 		bl	move_window
 3255              	.LVL481:
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
 3256              		.loc 1 2425 0
 3257 000e 0346     		mov	r3, r0
 3258 0010 20B9     		cbnz	r0, .L343
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 169


2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
 3259              		.loc 1 2426 0
 3260 0012 226A     		ldr	r2, [r4, #32]
 3261 0014 E521     		movs	r1, #229
 3262 0016 1170     		strb	r1, [r2]
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3263              		.loc 1 2427 0
 3264 0018 0122     		movs	r2, #1
 3265 001a EA70     		strb	r2, [r5, #3]
 3266              	.L343:
2432:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3267              		.loc 1 2432 0
 3268 001c 1846     		mov	r0, r3
 3269              	.LVL482:
 3270 001e 38BD     		pop	{r3, r4, r5, pc}
 3271              		.cfi_endproc
 3272              	.LFE173:
 3274              		.section	.text.dir_next,"ax",%progbits
 3275              		.align	1
 3276              		.syntax unified
 3277              		.thumb
 3278              		.thumb_func
 3279              		.fpu fpv5-sp-d16
 3281              	dir_next:
 3282              	.LFB166:
1523:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
 3283              		.loc 1 1523 0
 3284              		.cfi_startproc
 3285              		@ args = 0, pretend = 0, frame = 0
 3286              		@ frame_needed = 0, uses_anonymous_args = 0
 3287              	.LVL483:
 3288 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3289              	.LCFI35:
 3290              		.cfi_def_cfa_offset 32
 3291              		.cfi_offset 3, -32
 3292              		.cfi_offset 4, -28
 3293              		.cfi_offset 5, -24
 3294              		.cfi_offset 6, -20
 3295              		.cfi_offset 7, -16
 3296              		.cfi_offset 8, -12
 3297              		.cfi_offset 9, -8
 3298              		.cfi_offset 14, -4
1525:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3299              		.loc 1 1525 0
 3300 0004 0668     		ldr	r6, [r0]
 3301              	.LVL484:
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
 3302              		.loc 1 1530 0
 3303 0006 4369     		ldr	r3, [r0, #20]
 3304 0008 03F12005 		add	r5, r3, #32
 3305              	.LVL485:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3306              		.loc 1 1531 0
 3307 000c C369     		ldr	r3, [r0, #28]
 3308 000e 13B9     		cbnz	r3, .L363
 3309 0010 0420     		movs	r0, #4
 3310              	.LVL486:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 170


 3311 0012 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3312              	.LVL487:
 3313              	.L363:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3314              		.loc 1 1531 0 is_stmt 0 discriminator 2
 3315 0016 B5F5001F 		cmp	r5, #2097152
 3316 001a 02D3     		bcc	.L364
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3317              		.loc 1 1531 0
 3318 001c 0420     		movs	r0, #4
 3319              	.LVL488:
 3320 001e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3321              	.LVL489:
 3322              	.L364:
 3323 0022 8846     		mov	r8, r1
 3324 0024 0446     		mov	r4, r0
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
 3325              		.loc 1 1533 0 is_stmt 1
 3326 0026 C5F30807 		ubfx	r7, r5, #0, #9
 3327 002a 8FB9     		cbnz	r7, .L347
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3328              		.loc 1 1534 0
 3329 002c 0133     		adds	r3, r3, #1
 3330 002e C361     		str	r3, [r0, #28]
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 3331              		.loc 1 1536 0
 3332 0030 8169     		ldr	r1, [r0, #24]
 3333              	.LVL490:
 3334 0032 41B9     		cbnz	r1, .L348
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 3335              		.loc 1 1537 0
 3336 0034 3389     		ldrh	r3, [r6, #8]
 3337 0036 B3EB551F 		cmp	r3, r5, lsr #5
 3338 003a 09D8     		bhi	.L347
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3339              		.loc 1 1538 0
 3340 003c 0023     		movs	r3, #0
 3341 003e C361     		str	r3, [r0, #28]
 3342 0040 0420     		movs	r0, #4
 3343              	.LVL491:
 3344 0042 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3345              	.LVL492:
 3346              	.L348:
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 3347              		.loc 1 1542 0
 3348 0046 7389     		ldrh	r3, [r6, #10]
 3349 0048 013B     		subs	r3, r3, #1
 3350 004a 13EA5523 		ands	r3, r3, r5, lsr #9
 3351 004e 06D0     		beq	.L365
 3352              	.LVL493:
 3353              	.L347:
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 3354              		.loc 1 1574 0
 3355 0050 6561     		str	r5, [r4, #20]
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3356              		.loc 1 1575 0
 3357 0052 3436     		adds	r6, r6, #52
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 171


 3358              	.LVL494:
 3359 0054 3E44     		add	r6, r6, r7
 3360              	.LVL495:
 3361 0056 2662     		str	r6, [r4, #32]
1577:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3362              		.loc 1 1577 0
 3363 0058 0020     		movs	r0, #0
 3364 005a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3365              	.LVL496:
 3366              	.L365:
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 3367              		.loc 1 1543 0
 3368 005e FFF7FEFF 		bl	get_fat
 3369              	.LVL497:
 3370 0062 8146     		mov	r9, r0
 3371              	.LVL498:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3372              		.loc 1 1544 0
 3373 0064 0128     		cmp	r0, #1
 3374 0066 48D9     		bls	.L355
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3375              		.loc 1 1545 0
 3376 0068 B0F1FF3F 		cmp	r0, #-1
 3377 006c 48D0     		beq	.L356
1546:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3378              		.loc 1 1546 0
 3379 006e B369     		ldr	r3, [r6, #24]
 3380 0070 9842     		cmp	r0, r3
 3381 0072 3AD3     		bcc	.L349
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 3382              		.loc 1 1548 0
 3383 0074 B8F1000F 		cmp	r8, #0
 3384 0078 04D1     		bne	.L350
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3385              		.loc 1 1549 0
 3386 007a 0023     		movs	r3, #0
 3387 007c E361     		str	r3, [r4, #28]
 3388 007e 0420     		movs	r0, #4
 3389              	.LVL499:
 3390 0080 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3391              	.LVL500:
 3392              	.L350:
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3393              		.loc 1 1551 0
 3394 0084 A169     		ldr	r1, [r4, #24]
 3395 0086 2046     		mov	r0, r4
 3396              	.LVL501:
 3397 0088 FFF7FEFF 		bl	create_chain
 3398              	.LVL502:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3399              		.loc 1 1552 0
 3400 008c 8146     		mov	r9, r0
 3401 008e 10B9     		cbnz	r0, .L366
 3402 0090 0720     		movs	r0, #7
 3403              	.LVL503:
 3404 0092 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3405              	.LVL504:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 172


 3406              	.L366:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3407              		.loc 1 1553 0
 3408 0096 0128     		cmp	r0, #1
 3409 0098 35D0     		beq	.L358
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3410              		.loc 1 1554 0
 3411 009a B0F1FF3F 		cmp	r0, #-1
 3412 009e 35D0     		beq	.L359
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3413              		.loc 1 1557 0
 3414 00a0 3046     		mov	r0, r6
 3415              	.LVL505:
 3416 00a2 FFF7FEFF 		bl	sync_window
 3417              	.LVL506:
 3418 00a6 A0BB     		cbnz	r0, .L360
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
 3419              		.loc 1 1558 0
 3420 00a8 4FF40072 		mov	r2, #512
 3421 00ac 0021     		movs	r1, #0
 3422 00ae 06F13400 		add	r0, r6, #52
 3423 00b2 FFF7FEFF 		bl	mem_set
 3424              	.LVL507:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3425              		.loc 1 1559 0
 3426 00b6 4946     		mov	r1, r9
 3427 00b8 3046     		mov	r0, r6
 3428 00ba FFF7FEFF 		bl	clust2sect
 3429              	.LVL508:
 3430 00be 3063     		str	r0, [r6, #48]
 3431 00c0 4FF00008 		mov	r8, #0
 3432              	.LVL509:
 3433              	.L351:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3434              		.loc 1 1559 0 is_stmt 0 discriminator 1
 3435 00c4 7389     		ldrh	r3, [r6, #10]
 3436 00c6 9845     		cmp	r8, r3
 3437 00c8 0BD2     		bcs	.L367
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 3438              		.loc 1 1560 0 is_stmt 1
 3439 00ca 0123     		movs	r3, #1
 3440 00cc F370     		strb	r3, [r6, #3]
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3441              		.loc 1 1561 0
 3442 00ce 3046     		mov	r0, r6
 3443 00d0 FFF7FEFF 		bl	sync_window
 3444              	.LVL510:
 3445 00d4 00BB     		cbnz	r0, .L361
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3446              		.loc 1 1559 0 discriminator 2
 3447 00d6 08F10108 		add	r8, r8, #1
 3448              	.LVL511:
 3449 00da 336B     		ldr	r3, [r6, #48]
 3450 00dc 0133     		adds	r3, r3, #1
 3451 00de 3363     		str	r3, [r6, #48]
 3452 00e0 F0E7     		b	.L351
 3453              	.L367:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 173


1563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 3454              		.loc 1 1563 0
 3455 00e2 336B     		ldr	r3, [r6, #48]
 3456 00e4 A3EB0803 		sub	r3, r3, r8
 3457 00e8 3363     		str	r3, [r6, #48]
 3458              	.LVL512:
 3459              	.L349:
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
 3460              		.loc 1 1569 0
 3461 00ea C4F81890 		str	r9, [r4, #24]
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3462              		.loc 1 1570 0
 3463 00ee 4946     		mov	r1, r9
 3464 00f0 3046     		mov	r0, r6
 3465 00f2 FFF7FEFF 		bl	clust2sect
 3466              	.LVL513:
 3467 00f6 E061     		str	r0, [r4, #28]
 3468 00f8 AAE7     		b	.L347
 3469              	.LVL514:
 3470              	.L355:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3471              		.loc 1 1544 0
 3472 00fa 0220     		movs	r0, #2
 3473              	.LVL515:
 3474 00fc BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3475              	.LVL516:
 3476              	.L356:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3477              		.loc 1 1545 0
 3478 0100 0120     		movs	r0, #1
 3479              	.LVL517:
 3480 0102 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3481              	.LVL518:
 3482              	.L358:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3483              		.loc 1 1553 0
 3484 0106 0220     		movs	r0, #2
 3485              	.LVL519:
 3486 0108 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3487              	.LVL520:
 3488              	.L359:
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3489              		.loc 1 1554 0
 3490 010c 0120     		movs	r0, #1
 3491              	.LVL521:
 3492 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3493              	.LVL522:
 3494              	.L360:
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3495              		.loc 1 1557 0
 3496 0112 0120     		movs	r0, #1
 3497 0114 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3498              	.LVL523:
 3499              	.L361:
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3500              		.loc 1 1561 0
 3501 0118 0120     		movs	r0, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 174


1578:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3502              		.loc 1 1578 0
 3503 011a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3504              		.cfi_endproc
 3505              	.LFE166:
 3507              		.section	.text.dir_find,"ax",%progbits
 3508              		.align	1
 3509              		.syntax unified
 3510              		.thumb
 3511              		.thumb_func
 3512              		.fpu fpv5-sp-d16
 3514              	dir_find:
 3515              	.LFB171:
2213:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3516              		.loc 1 2213 0
 3517              		.cfi_startproc
 3518              		@ args = 0, pretend = 0, frame = 0
 3519              		@ frame_needed = 0, uses_anonymous_args = 0
 3520              	.LVL524:
 3521 0000 70B5     		push	{r4, r5, r6, lr}
 3522              	.LCFI36:
 3523              		.cfi_def_cfa_offset 16
 3524              		.cfi_offset 4, -16
 3525              		.cfi_offset 5, -12
 3526              		.cfi_offset 6, -8
 3527              		.cfi_offset 14, -4
 3528 0002 0446     		mov	r4, r0
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
 3529              		.loc 1 2215 0
 3530 0004 0668     		ldr	r6, [r0]
 3531              	.LVL525:
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
 3532              		.loc 1 2221 0
 3533 0006 0021     		movs	r1, #0
 3534 0008 FFF7FEFF 		bl	dir_sdi
 3535              	.LVL526:
2222:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3536              		.loc 1 2222 0
 3537 000c 0546     		mov	r5, r0
 3538 000e 40B1     		cbz	r0, .L371
 3539              	.LVL527:
 3540              	.L369:
2281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3541              		.loc 1 2281 0
 3542 0010 2846     		mov	r0, r5
 3543 0012 70BD     		pop	{r4, r5, r6, pc}
 3544              	.LVL528:
 3545              	.L370:
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 3546              		.loc 1 2277 0
 3547 0014 0021     		movs	r1, #0
 3548 0016 2046     		mov	r0, r4
 3549 0018 FFF7FEFF 		bl	dir_next
 3550              	.LVL529:
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3551              		.loc 1 2278 0
 3552 001c 0546     		mov	r5, r0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 175


 3553 001e 0028     		cmp	r0, #0
 3554 0020 F6D1     		bne	.L369
 3555              	.L371:
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3556              		.loc 1 2248 0
 3557 0022 E169     		ldr	r1, [r4, #28]
 3558 0024 3046     		mov	r0, r6
 3559              	.LVL530:
 3560 0026 FFF7FEFF 		bl	move_window
 3561              	.LVL531:
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
 3562              		.loc 1 2249 0
 3563 002a 0546     		mov	r5, r0
 3564 002c 0028     		cmp	r0, #0
 3565 002e EFD1     		bne	.L369
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3566              		.loc 1 2250 0
 3567 0030 206A     		ldr	r0, [r4, #32]
 3568              	.LVL532:
 3569 0032 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3570              	.LVL533:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3571              		.loc 1 2251 0
 3572 0034 7BB1     		cbz	r3, .L372
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 3573              		.loc 1 2274 0
 3574 0036 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3575              	.LVL534:
 3576 0038 03F03F03 		and	r3, r3, #63
 3577 003c A371     		strb	r3, [r4, #6]
 3578              	.LVL535:
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3579              		.loc 1 2275 0
 3580 003e C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3581 0040 13F0080F 		tst	r3, #8
 3582 0044 E6D1     		bne	.L370
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3583              		.loc 1 2275 0 is_stmt 0 discriminator 1
 3584 0046 0B22     		movs	r2, #11
 3585 0048 04F12401 		add	r1, r4, #36
 3586 004c FFF7FEFF 		bl	mem_cmp
 3587              	.LVL536:
 3588 0050 0028     		cmp	r0, #0
 3589 0052 DFD1     		bne	.L370
 3590 0054 DCE7     		b	.L369
 3591              	.LVL537:
 3592              	.L372:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3593              		.loc 1 2251 0 is_stmt 1
 3594 0056 0425     		movs	r5, #4
 3595 0058 DAE7     		b	.L369
 3596              		.cfi_endproc
 3597              	.LFE171:
 3599              		.section	.text.follow_path,"ax",%progbits
 3600              		.align	1
 3601              		.syntax unified
 3602              		.thumb
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 176


 3603              		.thumb_func
 3604              		.fpu fpv5-sp-d16
 3606              	follow_path:
 3607              	.LFB176:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3608              		.loc 1 2817 0
 3609              		.cfi_startproc
 3610              		@ args = 0, pretend = 0, frame = 8
 3611              		@ frame_needed = 0, uses_anonymous_args = 0
 3612              	.LVL538:
 3613 0000 30B5     		push	{r4, r5, lr}
 3614              	.LCFI37:
 3615              		.cfi_def_cfa_offset 12
 3616              		.cfi_offset 4, -12
 3617              		.cfi_offset 5, -8
 3618              		.cfi_offset 14, -4
 3619 0002 83B0     		sub	sp, sp, #12
 3620              	.LCFI38:
 3621              		.cfi_def_cfa_offset 24
 3622 0004 0446     		mov	r4, r0
 3623 0006 0191     		str	r1, [sp, #4]
 3624              	.LVL539:
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3625              		.loc 1 2821 0
 3626 0008 0568     		ldr	r5, [r0]
 3627              	.LVL540:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3628              		.loc 1 2830 0
 3629 000a 01E0     		b	.L375
 3630              	.L376:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3631              		.loc 1 2830 0 is_stmt 0 discriminator 2
 3632 000c 0133     		adds	r3, r3, #1
 3633 000e 0193     		str	r3, [sp, #4]
 3634              	.L375:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3635              		.loc 1 2830 0 discriminator 1
 3636 0010 019B     		ldr	r3, [sp, #4]
 3637 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3638 0014 5C2A     		cmp	r2, #92
 3639 0016 18BF     		it	ne
 3640 0018 2F2A     		cmpne	r2, #47
 3641 001a F7D0     		beq	.L376
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3642              		.loc 1 2831 0 is_stmt 1
 3643 001c 0022     		movs	r2, #0
 3644 001e A260     		str	r2, [r4, #8]
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 3645              		.loc 1 2850 0
 3646 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3647 0022 1F2B     		cmp	r3, #31
 3648 0024 1ED9     		bls	.L383
 3649              	.LVL541:
 3650              	.L377:
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3651              		.loc 1 2856 0
 3652 0026 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 177


 3653 0028 2046     		mov	r0, r4
 3654 002a FFF7FEFF 		bl	create_name
 3655              	.LVL542:
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
 3656              		.loc 1 2857 0
 3657 002e 0346     		mov	r3, r0
 3658 0030 00BB     		cbnz	r0, .L378
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 3659              		.loc 1 2858 0
 3660 0032 2046     		mov	r0, r4
 3661              	.LVL543:
 3662 0034 FFF7FEFF 		bl	dir_find
 3663              	.LVL544:
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3664              		.loc 1 2859 0
 3665 0038 94F82F20 		ldrb	r2, [r4, #47]	@ zero_extendqisi2
 3666              	.LVL545:
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 3667              		.loc 1 2860 0
 3668 003c 0346     		mov	r3, r0
 3669 003e E0B9     		cbnz	r0, .L384
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
 3670              		.loc 1 2872 0
 3671 0040 12F0040F 		tst	r2, #4
 3672 0044 16D1     		bne	.L378
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 3673              		.loc 1 2874 0
 3674 0046 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3675 0048 13F0100F 		tst	r3, #16
 3676 004c 1CD0     		beq	.L381
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3677              		.loc 1 2888 0
 3678 004e 05F13401 		add	r1, r5, #52
 3679 0052 6369     		ldr	r3, [r4, #20]
 3680 0054 C3F30803 		ubfx	r3, r3, #0, #9
 3681 0058 1944     		add	r1, r1, r3
 3682 005a 2846     		mov	r0, r5
 3683              	.LVL546:
 3684 005c FFF7FEFF 		bl	ld_clust
 3685              	.LVL547:
 3686 0060 A060     		str	r0, [r4, #8]
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3687              		.loc 1 2856 0
 3688 0062 E0E7     		b	.L377
 3689              	.LVL548:
 3690              	.L383:
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 3691              		.loc 1 2851 0
 3692 0064 8023     		movs	r3, #128
 3693 0066 84F82F30 		strb	r3, [r4, #47]
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3694              		.loc 1 2852 0
 3695 006a 1146     		mov	r1, r2
 3696              	.LVL549:
 3697 006c 2046     		mov	r0, r4
 3698              	.LVL550:
 3699 006e FFF7FEFF 		bl	dir_sdi
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 178


 3700              	.LVL551:
 3701 0072 0346     		mov	r3, r0
 3702              	.LVL552:
 3703              	.L378:
2894:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3704              		.loc 1 2894 0
 3705 0074 1846     		mov	r0, r3
 3706 0076 03B0     		add	sp, sp, #12
 3707              	.LCFI39:
 3708              		.cfi_remember_state
 3709              		.cfi_def_cfa_offset 12
 3710              		@ sp needed
 3711 0078 30BD     		pop	{r4, r5, pc}
 3712              	.LVL553:
 3713              	.L384:
 3714              	.LCFI40:
 3715              		.cfi_restore_state
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 3716              		.loc 1 2861 0
 3717 007a 0428     		cmp	r0, #4
 3718 007c FAD1     		bne	.L378
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3719              		.loc 1 2867 0
 3720 007e 12F0040F 		tst	r2, #4
 3721 0082 F7D1     		bne	.L378
 3722 0084 0523     		movs	r3, #5
 3723 0086 F5E7     		b	.L378
 3724              	.L381:
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3725              		.loc 1 2875 0
 3726 0088 0523     		movs	r3, #5
 3727 008a F3E7     		b	.L378
 3728              		.cfi_endproc
 3729              	.LFE176:
 3731              		.section	.text.dir_alloc,"ax",%progbits
 3732              		.align	1
 3733              		.syntax unified
 3734              		.thumb
 3735              		.thumb_func
 3736              		.fpu fpv5-sp-d16
 3738              	dir_alloc:
 3739              	.LFB167:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3740              		.loc 1 1593 0
 3741              		.cfi_startproc
 3742              		@ args = 0, pretend = 0, frame = 0
 3743              		@ frame_needed = 0, uses_anonymous_args = 0
 3744              	.LVL554:
 3745 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3746              	.LCFI41:
 3747              		.cfi_def_cfa_offset 24
 3748              		.cfi_offset 3, -24
 3749              		.cfi_offset 4, -20
 3750              		.cfi_offset 5, -16
 3751              		.cfi_offset 6, -12
 3752              		.cfi_offset 7, -8
 3753              		.cfi_offset 14, -4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 179


 3754 0002 0446     		mov	r4, r0
 3755 0004 0F46     		mov	r7, r1
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3756              		.loc 1 1596 0
 3757 0006 0668     		ldr	r6, [r0]
 3758              	.LVL555:
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3759              		.loc 1 1599 0
 3760 0008 0021     		movs	r1, #0
 3761              	.LVL556:
 3762 000a FFF7FEFF 		bl	dir_sdi
 3763              	.LVL557:
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
 3764              		.loc 1 1600 0
 3765 000e 0246     		mov	r2, r0
 3766 0010 B8B9     		cbnz	r0, .L386
 3767 0012 0025     		movs	r5, #0
 3768 0014 06E0     		b	.L388
 3769              	.LVL558:
 3770              	.L390:
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3771              		.loc 1 1612 0
 3772 0016 0025     		movs	r5, #0
 3773              	.LVL559:
 3774              	.L387:
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 3775              		.loc 1 1614 0
 3776 0018 0121     		movs	r1, #1
 3777 001a 2046     		mov	r0, r4
 3778              	.LVL560:
 3779 001c FFF7FEFF 		bl	dir_next
 3780              	.LVL561:
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3781              		.loc 1 1615 0
 3782 0020 0246     		mov	r2, r0
 3783 0022 70B9     		cbnz	r0, .L386
 3784              	.LVL562:
 3785              	.L388:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3786              		.loc 1 1603 0
 3787 0024 E169     		ldr	r1, [r4, #28]
 3788 0026 3046     		mov	r0, r6
 3789              	.LVL563:
 3790 0028 FFF7FEFF 		bl	move_window
 3791              	.LVL564:
1604:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3792              		.loc 1 1604 0
 3793 002c 0246     		mov	r2, r0
 3794 002e 40B9     		cbnz	r0, .L386
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3795              		.loc 1 1608 0
 3796 0030 236A     		ldr	r3, [r4, #32]
 3797 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3798 0034 002B     		cmp	r3, #0
 3799 0036 18BF     		it	ne
 3800 0038 E52B     		cmpne	r3, #229
 3801 003a ECD1     		bne	.L390
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 180


1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 3802              		.loc 1 1610 0
 3803 003c 0135     		adds	r5, r5, #1
 3804              	.LVL565:
 3805 003e BD42     		cmp	r5, r7
 3806 0040 EAD1     		bne	.L387
 3807              	.LVL566:
 3808              	.L386:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3809              		.loc 1 1618 0
 3810 0042 042A     		cmp	r2, #4
 3811 0044 01D0     		beq	.L393
 3812              	.LVL567:
 3813              	.L389:
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3814              		.loc 1 1620 0
 3815 0046 1046     		mov	r0, r2
 3816 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3817              	.LVL568:
 3818              	.L393:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3819              		.loc 1 1618 0
 3820 004a 0722     		movs	r2, #7
 3821              	.LVL569:
 3822 004c FBE7     		b	.L389
 3823              		.cfi_endproc
 3824              	.LFE167:
 3826              		.section	.text.dir_register,"ax",%progbits
 3827              		.align	1
 3828              		.syntax unified
 3829              		.thumb
 3830              		.thumb_func
 3831              		.fpu fpv5-sp-d16
 3833              	dir_register:
 3834              	.LFB172:
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3835              		.loc 1 2295 0
 3836              		.cfi_startproc
 3837              		@ args = 0, pretend = 0, frame = 0
 3838              		@ frame_needed = 0, uses_anonymous_args = 0
 3839              	.LVL570:
 3840 0000 70B5     		push	{r4, r5, r6, lr}
 3841              	.LCFI42:
 3842              		.cfi_def_cfa_offset 16
 3843              		.cfi_offset 4, -16
 3844              		.cfi_offset 5, -12
 3845              		.cfi_offset 6, -8
 3846              		.cfi_offset 14, -4
 3847 0002 0446     		mov	r4, r0
2297:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3848              		.loc 1 2297 0
 3849 0004 0668     		ldr	r6, [r0]
 3850              	.LVL571:
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3851              		.loc 1 2366 0
 3852 0006 0121     		movs	r1, #1
 3853 0008 FFF7FEFF 		bl	dir_alloc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 181


 3854              	.LVL572:
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3855              		.loc 1 2371 0
 3856 000c 0546     		mov	r5, r0
 3857 000e 08B1     		cbz	r0, .L397
 3858              	.LVL573:
 3859              	.L395:
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3860              		.loc 1 2384 0
 3861 0010 2846     		mov	r0, r5
 3862 0012 70BD     		pop	{r4, r5, r6, pc}
 3863              	.LVL574:
 3864              	.L397:
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 3865              		.loc 1 2372 0
 3866 0014 E169     		ldr	r1, [r4, #28]
 3867 0016 3046     		mov	r0, r6
 3868              	.LVL575:
 3869 0018 FFF7FEFF 		bl	move_window
 3870              	.LVL576:
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 3871              		.loc 1 2373 0
 3872 001c 0546     		mov	r5, r0
 3873 001e 0028     		cmp	r0, #0
 3874 0020 F6D1     		bne	.L395
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 3875              		.loc 1 2374 0
 3876 0022 2022     		movs	r2, #32
 3877 0024 0021     		movs	r1, #0
 3878 0026 206A     		ldr	r0, [r4, #32]
 3879              	.LVL577:
 3880 0028 FFF7FEFF 		bl	mem_set
 3881              	.LVL578:
2375:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 3882              		.loc 1 2375 0
 3883 002c 0B22     		movs	r2, #11
 3884 002e 04F12401 		add	r1, r4, #36
 3885 0032 206A     		ldr	r0, [r4, #32]
 3886 0034 FFF7FEFF 		bl	mem_cpy
 3887              	.LVL579:
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3888              		.loc 1 2379 0
 3889 0038 0123     		movs	r3, #1
 3890 003a F370     		strb	r3, [r6, #3]
 3891 003c E8E7     		b	.L395
 3892              		.cfi_endproc
 3893              	.LFE172:
 3895              		.section	.text.dir_read,"ax",%progbits
 3896              		.align	1
 3897              		.syntax unified
 3898              		.thumb
 3899              		.thumb_func
 3900              		.fpu fpv5-sp-d16
 3902              	dir_read:
 3903              	.LFB170:
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
 3904              		.loc 1 2135 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 182


 3905              		.cfi_startproc
 3906              		@ args = 0, pretend = 0, frame = 0
 3907              		@ frame_needed = 0, uses_anonymous_args = 0
 3908              	.LVL580:
 3909 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3910              	.LCFI43:
 3911              		.cfi_def_cfa_offset 24
 3912              		.cfi_offset 3, -24
 3913              		.cfi_offset 4, -20
 3914              		.cfi_offset 5, -16
 3915              		.cfi_offset 6, -12
 3916              		.cfi_offset 7, -8
 3917              		.cfi_offset 14, -4
 3918 0002 0446     		mov	r4, r0
 3919 0004 0E46     		mov	r6, r1
 3920              	.LVL581:
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
 3921              		.loc 1 2137 0
 3922 0006 0568     		ldr	r5, [r0]
 3923              	.LVL582:
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
 3924              		.loc 1 2136 0
 3925 0008 0427     		movs	r7, #4
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3926              		.loc 1 2143 0
 3927 000a 05E0     		b	.L399
 3928              	.LVL583:
 3929              	.L401:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3930              		.loc 1 2193 0
 3931 000c 0021     		movs	r1, #0
 3932 000e 2046     		mov	r0, r4
 3933              	.LVL584:
 3934 0010 FFF7FEFF 		bl	dir_next
 3935              	.LVL585:
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3936              		.loc 1 2194 0
 3937 0014 0746     		mov	r7, r0
 3938 0016 E8B9     		cbnz	r0, .L400
 3939              	.LVL586:
 3940              	.L399:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3941              		.loc 1 2143 0
 3942 0018 E169     		ldr	r1, [r4, #28]
 3943 001a D9B1     		cbz	r1, .L400
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3944              		.loc 1 2144 0
 3945 001c 2846     		mov	r0, r5
 3946 001e FFF7FEFF 		bl	move_window
 3947              	.LVL587:
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 3948              		.loc 1 2145 0
 3949 0022 0746     		mov	r7, r0
 3950 0024 B0B9     		cbnz	r0, .L400
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
 3951              		.loc 1 2146 0
 3952 0026 236A     		ldr	r3, [r4, #32]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 183


 3953 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3954              	.LVL588:
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 3955              		.loc 1 2147 0
 3956 002a 92B1     		cbz	r2, .L404
2167:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3957              		.loc 1 2167 0
 3958 002c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3959 002e 03F03F03 		and	r3, r3, #63
 3960              	.LVL589:
 3961 0032 A371     		strb	r3, [r4, #6]
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3962              		.loc 1 2188 0
 3963 0034 E52A     		cmp	r2, #229
 3964 0036 18BF     		it	ne
 3965 0038 2E2A     		cmpne	r2, #46
 3966 003a E7D0     		beq	.L401
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3967              		.loc 1 2188 0 is_stmt 0 discriminator 1
 3968 003c 0F2B     		cmp	r3, #15
 3969 003e E5D0     		beq	.L401
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3970              		.loc 1 2188 0 discriminator 2
 3971 0040 23F02003 		bic	r3, r3, #32
 3972              	.LVL590:
 3973 0044 082B     		cmp	r3, #8
 3974 0046 14BF     		ite	ne
 3975 0048 0023     		movne	r3, #0
 3976 004a 0123     		moveq	r3, #1
 3977 004c B342     		cmp	r3, r6
 3978 004e DDD1     		bne	.L401
 3979 0050 00E0     		b	.L400
 3980              	.LVL591:
 3981              	.L404:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3982              		.loc 1 2148 0 is_stmt 1
 3983 0052 0427     		movs	r7, #4
 3984              	.LVL592:
 3985              	.L400:
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3986              		.loc 1 2197 0
 3987 0054 0FB1     		cbz	r7, .L403
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3988              		.loc 1 2197 0 is_stmt 0 discriminator 1
 3989 0056 0023     		movs	r3, #0
 3990 0058 E361     		str	r3, [r4, #28]
 3991              	.L403:
2199:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3992              		.loc 1 2199 0 is_stmt 1
 3993 005a 3846     		mov	r0, r7
 3994 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3995              		.cfi_endproc
 3996              	.LFE170:
 3998              		.section	.text.unlock_fs,"ax",%progbits
 3999              		.align	1
 4000              		.syntax unified
 4001              		.thumb
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 184


 4002              		.thumb_func
 4003              		.fpu fpv5-sp-d16
 4005              	unlock_fs:
 4006              	.LFB150:
 755:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 4007              		.loc 1 755 0
 4008              		.cfi_startproc
 4009              		@ args = 0, pretend = 0, frame = 0
 4010              		@ frame_needed = 0, uses_anonymous_args = 0
 4011              	.LVL593:
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 4012              		.loc 1 756 0
 4013 0000 0028     		cmp	r0, #0
 4014 0002 18BF     		it	ne
 4015 0004 0C29     		cmpne	r1, #12
 4016 0006 0BD0     		beq	.L409
 755:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 4017              		.loc 1 755 0 discriminator 1
 4018 0008 08B5     		push	{r3, lr}
 4019              	.LCFI44:
 4020              		.cfi_def_cfa_offset 8
 4021              		.cfi_offset 3, -8
 4022              		.cfi_offset 14, -4
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 4023              		.loc 1 756 0 discriminator 1
 4024 000a B1F10F02 		subs	r2, r1, #15
 4025 000e 18BF     		it	ne
 4026 0010 0122     		movne	r2, #1
 4027 0012 0B29     		cmp	r1, #11
 4028 0014 03D0     		beq	.L406
 4029 0016 12B1     		cbz	r2, .L406
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4030              		.loc 1 757 0
 4031 0018 C068     		ldr	r0, [r0, #12]
 4032              	.LVL594:
 4033 001a FFF7FEFF 		bl	ff_rel_grant
 4034              	.LVL595:
 4035              	.L406:
 4036 001e 08BD     		pop	{r3, pc}
 4037              	.LVL596:
 4038              	.L409:
 4039              	.LCFI45:
 4040              		.cfi_def_cfa_offset 0
 4041              		.cfi_restore 3
 4042              		.cfi_restore 14
 4043 0020 7047     		bx	lr
 4044              		.cfi_endproc
 4045              	.LFE150:
 4047              		.section	.text.sync_fs,"ax",%progbits
 4048              		.align	1
 4049              		.syntax unified
 4050              		.thumb
 4051              		.thumb_func
 4052              		.fpu fpv5-sp-d16
 4054              	sync_fs:
 4055              	.LFB158:
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 185


 4056              		.loc 1 947 0
 4057              		.cfi_startproc
 4058              		@ args = 0, pretend = 0, frame = 0
 4059              		@ frame_needed = 0, uses_anonymous_args = 0
 4060              	.LVL597:
 4061 0000 70B5     		push	{r4, r5, r6, lr}
 4062              	.LCFI46:
 4063              		.cfi_def_cfa_offset 16
 4064              		.cfi_offset 4, -16
 4065              		.cfi_offset 5, -12
 4066              		.cfi_offset 6, -8
 4067              		.cfi_offset 14, -4
 4068 0002 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4069              		.loc 1 951 0
 4070 0004 FFF7FEFF 		bl	sync_window
 4071              	.LVL598:
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 4072              		.loc 1 952 0
 4073 0008 0546     		mov	r5, r0
 4074 000a 48B9     		cbnz	r0, .L413
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 4075              		.loc 1 954 0
 4076 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4077 000e 032B     		cmp	r3, #3
 4078 0010 08D0     		beq	.L417
 4079              	.LVL599:
 4080              	.L414:
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4081              		.loc 1 968 0
 4082 0012 0022     		movs	r2, #0
 4083 0014 1146     		mov	r1, r2
 4084 0016 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 4085 0018 FFF7FEFF 		bl	disk_ioctl
 4086              	.LVL600:
 4087 001c 00B1     		cbz	r0, .L413
 4088 001e 0125     		movs	r5, #1
 4089              	.L413:
 4090              	.LVL601:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4091              		.loc 1 972 0
 4092 0020 2846     		mov	r0, r5
 4093 0022 70BD     		pop	{r4, r5, r6, pc}
 4094              	.LVL602:
 4095              	.L417:
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 4096              		.loc 1 954 0 discriminator 1
 4097 0024 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4098 0026 012B     		cmp	r3, #1
 4099 0028 F3D1     		bne	.L414
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 4100              		.loc 1 956 0
 4101 002a 04F13406 		add	r6, r4, #52
 4102 002e 4FF40072 		mov	r2, #512
 4103 0032 0021     		movs	r1, #0
 4104 0034 3046     		mov	r0, r6
 4105              	.LVL603:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 186


 4106 0036 FFF7FEFF 		bl	mem_set
 4107              	.LVL604:
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 4108              		.loc 1 957 0
 4109 003a 4AF65521 		movw	r1, #43605
 4110 003e 04F23220 		addw	r0, r4, #562
 4111 0042 FFF7FEFF 		bl	st_word
 4112              	.LVL605:
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 4113              		.loc 1 958 0
 4114 0046 0F49     		ldr	r1, .L418
 4115 0048 3046     		mov	r0, r6
 4116 004a FFF7FEFF 		bl	st_dword
 4117              	.LVL606:
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 4118              		.loc 1 959 0
 4119 004e 0E49     		ldr	r1, .L418+4
 4120 0050 04F50670 		add	r0, r4, #536
 4121 0054 FFF7FEFF 		bl	st_dword
 4122              	.LVL607:
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 4123              		.loc 1 960 0
 4124 0058 6169     		ldr	r1, [r4, #20]
 4125 005a 04F50770 		add	r0, r4, #540
 4126 005e FFF7FEFF 		bl	st_dword
 4127              	.LVL608:
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 4128              		.loc 1 961 0
 4129 0062 2169     		ldr	r1, [r4, #16]
 4130 0064 04F50870 		add	r0, r4, #544
 4131 0068 FFF7FEFF 		bl	st_dword
 4132              	.LVL609:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 4133              		.loc 1 963 0
 4134 006c 226A     		ldr	r2, [r4, #32]
 4135 006e 0132     		adds	r2, r2, #1
 4136 0070 2263     		str	r2, [r4, #48]
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 4137              		.loc 1 964 0
 4138 0072 0123     		movs	r3, #1
 4139 0074 3146     		mov	r1, r6
 4140 0076 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 4141 0078 FFF7FEFF 		bl	disk_write
 4142              	.LVL610:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4143              		.loc 1 965 0
 4144 007c 0023     		movs	r3, #0
 4145 007e 2371     		strb	r3, [r4, #4]
 4146 0080 C7E7     		b	.L414
 4147              	.L419:
 4148 0082 00BF     		.align	2
 4149              	.L418:
 4150 0084 52526141 		.word	1096897106
 4151 0088 72724161 		.word	1631679090
 4152              		.cfi_endproc
 4153              	.LFE158:
 4155              		.section	.text.f_mount,"ax",%progbits
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 187


 4156              		.align	1
 4157              		.global	f_mount
 4158              		.syntax unified
 4159              		.thumb
 4160              		.thumb_func
 4161              		.fpu fpv5-sp-d16
 4163              	f_mount:
 4164              	.LFB181:
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
 4165              		.loc 1 3254 0
 4166              		.cfi_startproc
 4167              		@ args = 0, pretend = 0, frame = 16
 4168              		@ frame_needed = 0, uses_anonymous_args = 0
 4169              	.LVL611:
 4170 0000 70B5     		push	{r4, r5, r6, lr}
 4171              	.LCFI47:
 4172              		.cfi_def_cfa_offset 16
 4173              		.cfi_offset 4, -16
 4174              		.cfi_offset 5, -12
 4175              		.cfi_offset 6, -8
 4176              		.cfi_offset 14, -4
 4177 0002 84B0     		sub	sp, sp, #16
 4178              	.LCFI48:
 4179              		.cfi_def_cfa_offset 32
 4180 0004 0190     		str	r0, [sp, #4]
 4181 0006 0091     		str	r1, [sp]
 4182 0008 1646     		mov	r6, r2
3258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4183              		.loc 1 3258 0
 4184 000a 04A8     		add	r0, sp, #16
 4185              	.LVL612:
 4186 000c 40F8041D 		str	r1, [r0, #-4]!
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 4187              		.loc 1 3262 0
 4188 0010 FFF7FEFF 		bl	get_ldnumber
 4189              	.LVL613:
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4190              		.loc 1 3263 0
 4191 0014 051E     		subs	r5, r0, #0
 4192 0016 34DB     		blt	.L424
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4193              		.loc 1 3264 0
 4194 0018 1C4B     		ldr	r3, .L431
 4195 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 4196              	.LVL614:
3266:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4197              		.loc 1 3266 0
 4198 001e 54B1     		cbz	r4, .L422
3268:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4199              		.loc 1 3268 0
 4200 0020 2046     		mov	r0, r4
 4201              	.LVL615:
 4202 0022 FFF7FEFF 		bl	clear_lock
 4203              	.LVL616:
3271:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4204              		.loc 1 3271 0
 4205 0026 E068     		ldr	r0, [r4, #12]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 188


 4206 0028 FFF7FEFF 		bl	ff_del_syncobj
 4207              	.LVL617:
 4208 002c 08B9     		cbnz	r0, .L429
 4209 002e 0224     		movs	r4, #2
 4210              	.LVL618:
 4211 0030 28E0     		b	.L421
 4212              	.LVL619:
 4213              	.L429:
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4214              		.loc 1 3273 0
 4215 0032 0023     		movs	r3, #0
 4216 0034 2370     		strb	r3, [r4]
 4217              	.L422:
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 4218              		.loc 1 3276 0
 4219 0036 019B     		ldr	r3, [sp, #4]
 4220 0038 4BB1     		cbz	r3, .L423
3277:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
 4221              		.loc 1 3277 0
 4222 003a 0022     		movs	r2, #0
 4223 003c 1A70     		strb	r2, [r3]
3279:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4224              		.loc 1 3279 0
 4225 003e 0199     		ldr	r1, [sp, #4]
 4226 0040 0C31     		adds	r1, r1, #12
 4227 0042 E8B2     		uxtb	r0, r5
 4228 0044 FFF7FEFF 		bl	ff_cre_syncobj
 4229              	.LVL620:
 4230 0048 08B9     		cbnz	r0, .L423
 4231 004a 0224     		movs	r4, #2
 4232              	.LVL621:
 4233 004c 1AE0     		b	.L421
 4234              	.LVL622:
 4235              	.L423:
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4236              		.loc 1 3282 0
 4237 004e 019B     		ldr	r3, [sp, #4]
 4238 0050 0E4A     		ldr	r2, .L431
 4239 0052 42F82530 		str	r3, [r2, r5, lsl #2]
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4240              		.loc 1 3284 0
 4241 0056 16F1FF36 		adds	r6, r6, #-1
 4242 005a 18BF     		it	ne
 4243 005c 0126     		movne	r6, #1
 4244 005e 002B     		cmp	r3, #0
 4245 0060 08BF     		it	eq
 4246 0062 46F00106 		orreq	r6, r6, #1
 4247 0066 0EB1     		cbz	r6, .L430
 4248 0068 0024     		movs	r4, #0
 4249              	.LVL623:
 4250 006a 0BE0     		b	.L421
 4251              	.LVL624:
 4252              	.L430:
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
 4253              		.loc 1 3286 0
 4254 006c 0022     		movs	r2, #0
 4255 006e 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 189


 4256 0070 6846     		mov	r0, sp
 4257 0072 FFF7FEFF 		bl	find_volume
 4258              	.LVL625:
 4259 0076 0446     		mov	r4, r0
 4260              	.LVL626:
3287:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4261              		.loc 1 3287 0
 4262 0078 0146     		mov	r1, r0
 4263 007a 0198     		ldr	r0, [sp, #4]
 4264              	.LVL627:
 4265 007c FFF7FEFF 		bl	unlock_fs
 4266              	.LVL628:
 4267 0080 00E0     		b	.L421
 4268              	.LVL629:
 4269              	.L424:
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4270              		.loc 1 3263 0
 4271 0082 0B24     		movs	r4, #11
 4272              	.LVL630:
 4273              	.L421:
3288:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4274              		.loc 1 3288 0
 4275 0084 2046     		mov	r0, r4
 4276 0086 04B0     		add	sp, sp, #16
 4277              	.LCFI49:
 4278              		.cfi_def_cfa_offset 16
 4279              		@ sp needed
 4280 0088 70BD     		pop	{r4, r5, r6, pc}
 4281              	.LVL631:
 4282              	.L432:
 4283 008a 00BF     		.align	2
 4284              	.L431:
 4285 008c 00000000 		.word	.LANCHOR2
 4286              		.cfi_endproc
 4287              	.LFE181:
 4289              		.section	.text.f_open,"ax",%progbits
 4290              		.align	1
 4291              		.global	f_open
 4292              		.syntax unified
 4293              		.thumb
 4294              		.thumb_func
 4295              		.fpu fpv5-sp-d16
 4297              	f_open:
 4298              	.LFB182:
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4299              		.loc 1 3302 0
 4300              		.cfi_startproc
 4301              		@ args = 0, pretend = 0, frame = 64
 4302              		@ frame_needed = 0, uses_anonymous_args = 0
 4303              	.LVL632:
 4304 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4305              	.LCFI50:
 4306              		.cfi_def_cfa_offset 28
 4307              		.cfi_offset 4, -28
 4308              		.cfi_offset 5, -24
 4309              		.cfi_offset 6, -20
 4310              		.cfi_offset 7, -16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 190


 4311              		.cfi_offset 8, -12
 4312              		.cfi_offset 9, -8
 4313              		.cfi_offset 14, -4
 4314 0004 91B0     		sub	sp, sp, #68
 4315              	.LCFI51:
 4316              		.cfi_def_cfa_offset 96
 4317 0006 0191     		str	r1, [sp, #4]
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4318              		.loc 1 3313 0
 4319 0008 0028     		cmp	r0, #0
 4320 000a 00F01681 		beq	.L449
 4321 000e 0546     		mov	r5, r0
 4322 0010 1646     		mov	r6, r2
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
 4323              		.loc 1 3316 0
 4324 0012 02F03F07 		and	r7, r2, #63
 4325              	.LVL633:
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4326              		.loc 1 3317 0
 4327 0016 3A46     		mov	r2, r7
 4328 0018 03A9     		add	r1, sp, #12
 4329              	.LVL634:
 4330 001a 01A8     		add	r0, sp, #4
 4331              	.LVL635:
 4332 001c FFF7FEFF 		bl	find_volume
 4333              	.LVL636:
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
 4334              		.loc 1 3318 0
 4335 0020 0446     		mov	r4, r0
 4336 0022 50B1     		cbz	r0, .L462
 4337              	.LVL637:
 4338              	.L435:
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4339              		.loc 1 3488 0
 4340 0024 0CB1     		cbz	r4, .L448
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4341              		.loc 1 3488 0 is_stmt 0 discriminator 1
 4342 0026 0023     		movs	r3, #0
 4343 0028 2B60     		str	r3, [r5]
 4344              	.L448:
3490:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4345              		.loc 1 3490 0 is_stmt 1
 4346 002a 2146     		mov	r1, r4
 4347 002c 0398     		ldr	r0, [sp, #12]
 4348 002e FFF7FEFF 		bl	unlock_fs
 4349              	.LVL638:
 4350              	.L434:
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4351              		.loc 1 3491 0
 4352 0032 2046     		mov	r0, r4
 4353 0034 11B0     		add	sp, sp, #68
 4354              	.LCFI52:
 4355              		.cfi_remember_state
 4356              		.cfi_def_cfa_offset 28
 4357              		@ sp needed
 4358 0036 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4359              	.LVL639:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 191


 4360              	.L462:
 4361              	.LCFI53:
 4362              		.cfi_restore_state
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 4363              		.loc 1 3319 0
 4364 003a 039B     		ldr	r3, [sp, #12]
 4365 003c 0493     		str	r3, [sp, #16]
3321:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 4366              		.loc 1 3321 0
 4367 003e 0199     		ldr	r1, [sp, #4]
 4368 0040 04A8     		add	r0, sp, #16
 4369              	.LVL640:
 4370 0042 FFF7FEFF 		bl	follow_path
 4371              	.LVL641:
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 4372              		.loc 1 3323 0
 4373 0046 0446     		mov	r4, r0
 4374 0048 60B9     		cbnz	r0, .L436
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 4375              		.loc 1 3324 0
 4376 004a 9DF93F30 		ldrsb	r3, [sp, #63]
 4377 004e 002B     		cmp	r3, #0
 4378 0050 57DB     		blt	.L450
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4379              		.loc 1 3329 0
 4380 0052 37F00103 		bics	r3, r7, #1
 4381 0056 14BF     		ite	ne
 4382 0058 0121     		movne	r1, #1
 4383 005a 0021     		moveq	r1, #0
 4384 005c 04A8     		add	r0, sp, #16
 4385              	.LVL642:
 4386 005e FFF7FEFF 		bl	chk_lock
 4387              	.LVL643:
 4388 0062 0446     		mov	r4, r0
 4389              	.LVL644:
 4390              	.L436:
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 4391              		.loc 1 3334 0
 4392 0064 16F01C0F 		tst	r6, #28
 4393 0068 00F0A180 		beq	.L437
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 4394              		.loc 1 3335 0
 4395 006c 002C     		cmp	r4, #0
 4396 006e 54D0     		beq	.L438
3336:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4397              		.loc 1 3336 0
 4398 0070 042C     		cmp	r4, #4
 4399 0072 48D0     		beq	.L463
 4400              	.LVL645:
 4401              	.L439:
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4402              		.loc 1 3343 0
 4403 0074 47F00807 		orr	r7, r7, #8
 4404              	.LVL646:
 4405              	.L440:
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4406              		.loc 1 3352 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 192


 4407 0078 14B9     		cbnz	r4, .L441
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4408              		.loc 1 3352 0 is_stmt 0 discriminator 1
 4409 007a 17F0080F 		tst	r7, #8
 4410 007e 58D1     		bne	.L464
 4411              	.LVL647:
 4412              	.L441:
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 4413              		.loc 1 3411 0 is_stmt 1
 4414 0080 A4B9     		cbnz	r4, .L442
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
 4415              		.loc 1 3412 0
 4416 0082 17F0080F 		tst	r7, #8
 4417 0086 01D0     		beq	.L443
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 4418              		.loc 1 3413 0
 4419 0088 47F04007 		orr	r7, r7, #64
 4420              	.LVL648:
 4421              	.L443:
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
 4422              		.loc 1 3414 0
 4423 008c 039B     		ldr	r3, [sp, #12]
 4424 008e 1B6B     		ldr	r3, [r3, #48]
 4425 0090 6B62     		str	r3, [r5, #36]
3415:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4426              		.loc 1 3415 0
 4427 0092 0C9B     		ldr	r3, [sp, #48]
 4428 0094 AB62     		str	r3, [r5, #40]
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 4429              		.loc 1 3417 0
 4430 0096 37F00103 		bics	r3, r7, #1
 4431 009a 14BF     		ite	ne
 4432 009c 0121     		movne	r1, #1
 4433 009e 0021     		moveq	r1, #0
 4434 00a0 04A8     		add	r0, sp, #16
 4435 00a2 FFF7FEFF 		bl	inc_lock
 4436              	.LVL649:
 4437 00a6 2861     		str	r0, [r5, #16]
3418:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4438              		.loc 1 3418 0
 4439 00a8 00B9     		cbnz	r0, .L442
 4440 00aa 0224     		movs	r4, #2
 4441              	.LVL650:
 4442              	.L442:
3433:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4443              		.loc 1 3433 0
 4444 00ac 002C     		cmp	r4, #0
 4445 00ae B9D1     		bne	.L435
3445:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 4446              		.loc 1 3445 0
 4447 00b0 039E     		ldr	r6, [sp, #12]
 4448 00b2 DDF83080 		ldr	r8, [sp, #48]
 4449 00b6 4146     		mov	r1, r8
 4450 00b8 3046     		mov	r0, r6
 4451 00ba FFF7FEFF 		bl	ld_clust
 4452              	.LVL651:
 4453 00be A860     		str	r0, [r5, #8]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 193


3446:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4454              		.loc 1 3446 0
 4455 00c0 08F11C00 		add	r0, r8, #28
 4456 00c4 FFF7FEFF 		bl	ld_dword
 4457              	.LVL652:
 4458 00c8 E860     		str	r0, [r5, #12]
3449:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4459              		.loc 1 3449 0
 4460 00ca 0021     		movs	r1, #0
 4461 00cc E962     		str	r1, [r5, #44]
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
 4462              		.loc 1 3451 0
 4463 00ce 2E60     		str	r6, [r5]
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 4464              		.loc 1 3452 0
 4465 00d0 F388     		ldrh	r3, [r6, #6]
 4466 00d2 AB80     		strh	r3, [r5, #4]	@ movhi
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
 4467              		.loc 1 3453 0
 4468 00d4 2F75     		strb	r7, [r5, #20]
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 4469              		.loc 1 3454 0
 4470 00d6 6975     		strb	r1, [r5, #21]
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 4471              		.loc 1 3455 0
 4472 00d8 2962     		str	r1, [r5, #32]
3456:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4473              		.loc 1 3456 0
 4474 00da A961     		str	r1, [r5, #24]
3459:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4475              		.loc 1 3459 0
 4476 00dc 05F13008 		add	r8, r5, #48
 4477 00e0 4FF40072 		mov	r2, #512
 4478 00e4 4046     		mov	r0, r8
 4479 00e6 FFF7FEFF 		bl	mem_set
 4480              	.LVL653:
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4481              		.loc 1 3461 0
 4482 00ea 17F0200F 		tst	r7, #32
 4483 00ee 99D0     		beq	.L435
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4484              		.loc 1 3461 0 is_stmt 0 discriminator 1
 4485 00f0 EE68     		ldr	r6, [r5, #12]
 4486 00f2 002E     		cmp	r6, #0
 4487 00f4 96D0     		beq	.L435
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 4488              		.loc 1 3462 0 is_stmt 1
 4489 00f6 AE61     		str	r6, [r5, #24]
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 4490              		.loc 1 3463 0
 4491 00f8 039B     		ldr	r3, [sp, #12]
 4492 00fa 5F89     		ldrh	r7, [r3, #10]
 4493              	.LVL654:
 4494 00fc 7F02     		lsls	r7, r7, #9
 4495              	.LVL655:
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 4496              		.loc 1 3464 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 194


 4497 00fe A968     		ldr	r1, [r5, #8]
 4498              	.LVL656:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4499              		.loc 1 3465 0
 4500 0100 6CE0     		b	.L444
 4501              	.LVL657:
 4502              	.L450:
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4503              		.loc 1 3325 0
 4504 0102 0624     		movs	r4, #6
 4505 0104 AEE7     		b	.L436
 4506              	.LVL658:
 4507              	.L463:
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4508              		.loc 1 3338 0
 4509 0106 FFF7FEFF 		bl	enq_lock
 4510              	.LVL659:
 4511 010a 08B9     		cbnz	r0, .L465
 4512 010c 1224     		movs	r4, #18
 4513              	.LVL660:
 4514 010e B1E7     		b	.L439
 4515              	.LVL661:
 4516              	.L465:
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4517              		.loc 1 3338 0 is_stmt 0 discriminator 1
 4518 0110 04A8     		add	r0, sp, #16
 4519 0112 FFF7FEFF 		bl	dir_register
 4520              	.LVL662:
 4521 0116 0446     		mov	r4, r0
 4522              	.LVL663:
 4523 0118 ACE7     		b	.L439
 4524              	.LVL664:
 4525              	.L438:
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
 4526              		.loc 1 3346 0 is_stmt 1
 4527 011a 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4528 011e 13F0110F 		tst	r3, #17
 4529 0122 04D1     		bne	.L452
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4530              		.loc 1 3349 0
 4531 0124 16F0040F 		tst	r6, #4
 4532 0128 A6D0     		beq	.L440
 4533 012a 0824     		movs	r4, #8
 4534              	.LVL665:
 4535 012c A4E7     		b	.L440
 4536              	.LVL666:
 4537              	.L452:
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4538              		.loc 1 3347 0
 4539 012e 0724     		movs	r4, #7
 4540              	.LVL667:
 4541 0130 A2E7     		b	.L440
 4542              	.LVL668:
 4543              	.L464:
3353:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4544              		.loc 1 3353 0
 4545 0132 FFF7FEFF 		bl	get_fattime
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 195


 4546              	.LVL669:
 4547 0136 0646     		mov	r6, r0
 4548              	.LVL670:
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 4549              		.loc 1 3381 0
 4550 0138 0146     		mov	r1, r0
 4551 013a 0C98     		ldr	r0, [sp, #48]
 4552              	.LVL671:
 4553 013c 0E30     		adds	r0, r0, #14
 4554 013e FFF7FEFF 		bl	st_dword
 4555              	.LVL672:
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 4556              		.loc 1 3382 0
 4557 0142 3146     		mov	r1, r6
 4558 0144 0C98     		ldr	r0, [sp, #48]
 4559 0146 1630     		adds	r0, r0, #22
 4560 0148 FFF7FEFF 		bl	st_dword
 4561              	.LVL673:
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 4562              		.loc 1 3383 0
 4563 014c 2022     		movs	r2, #32
 4564 014e 0C9B     		ldr	r3, [sp, #48]
 4565 0150 DA72     		strb	r2, [r3, #11]
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 4566              		.loc 1 3384 0
 4567 0152 039E     		ldr	r6, [sp, #12]
 4568              	.LVL674:
 4569 0154 DDF83080 		ldr	r8, [sp, #48]
 4570 0158 4146     		mov	r1, r8
 4571 015a 3046     		mov	r0, r6
 4572 015c FFF7FEFF 		bl	ld_clust
 4573              	.LVL675:
 4574 0160 8146     		mov	r9, r0
 4575              	.LVL676:
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
 4576              		.loc 1 3385 0
 4577 0162 0022     		movs	r2, #0
 4578 0164 4146     		mov	r1, r8
 4579 0166 3046     		mov	r0, r6
 4580              	.LVL677:
 4581 0168 FFF7FEFF 		bl	st_clust
 4582              	.LVL678:
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 4583              		.loc 1 3386 0
 4584 016c 0021     		movs	r1, #0
 4585 016e 0C98     		ldr	r0, [sp, #48]
 4586 0170 1C30     		adds	r0, r0, #28
 4587 0172 FFF7FEFF 		bl	st_dword
 4588              	.LVL679:
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4589              		.loc 1 3387 0
 4590 0176 0122     		movs	r2, #1
 4591 0178 039B     		ldr	r3, [sp, #12]
 4592 017a DA70     		strb	r2, [r3, #3]
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
 4593              		.loc 1 3389 0
 4594 017c B9F1000F 		cmp	r9, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 196


 4595 0180 3FF47EAF 		beq	.L441
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 4596              		.loc 1 3390 0
 4597 0184 039B     		ldr	r3, [sp, #12]
 4598 0186 1E6B     		ldr	r6, [r3, #48]
 4599              	.LVL680:
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 4600              		.loc 1 3391 0
 4601 0188 0022     		movs	r2, #0
 4602 018a 4946     		mov	r1, r9
 4603 018c 04A8     		add	r0, sp, #16
 4604 018e FFF7FEFF 		bl	remove_chain
 4605              	.LVL681:
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
 4606              		.loc 1 3392 0
 4607 0192 0446     		mov	r4, r0
 4608 0194 0028     		cmp	r0, #0
 4609 0196 7FF473AF 		bne	.L441
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 4610              		.loc 1 3393 0
 4611 019a 3146     		mov	r1, r6
 4612 019c 0398     		ldr	r0, [sp, #12]
 4613              	.LVL682:
 4614 019e FFF7FEFF 		bl	move_window
 4615              	.LVL683:
 4616 01a2 0446     		mov	r4, r0
 4617              	.LVL684:
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 4618              		.loc 1 3394 0
 4619 01a4 09F1FF33 		add	r3, r9, #-1
 4620 01a8 039A     		ldr	r2, [sp, #12]
 4621 01aa 1361     		str	r3, [r2, #16]
 4622 01ac 68E7     		b	.L441
 4623              	.LVL685:
 4624              	.L437:
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 4625              		.loc 1 3401 0
 4626 01ae 002C     		cmp	r4, #0
 4627 01b0 7FF466AF 		bne	.L441
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 4628              		.loc 1 3402 0
 4629 01b4 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4630 01b8 13F0100F 		tst	r3, #16
 4631 01bc 09D1     		bne	.L454
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4632              		.loc 1 3405 0
 4633 01be 16F0020F 		tst	r6, #2
 4634 01c2 3FF45DAF 		beq	.L441
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4635              		.loc 1 3405 0 is_stmt 0 discriminator 1
 4636 01c6 13F0010F 		tst	r3, #1
 4637 01ca 3FF459AF 		beq	.L441
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4638              		.loc 1 3406 0 is_stmt 1
 4639 01ce 0724     		movs	r4, #7
 4640              	.LVL686:
 4641 01d0 56E7     		b	.L441
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 197


 4642              	.LVL687:
 4643              	.L454:
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4644              		.loc 1 3403 0
 4645 01d2 0424     		movs	r4, #4
 4646              	.LVL688:
 4647 01d4 54E7     		b	.L441
 4648              	.LVL689:
 4649              	.L467:
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 4650              		.loc 1 3467 0
 4651 01d6 0224     		movs	r4, #2
 4652              	.LVL690:
 4653 01d8 0DE0     		b	.L445
 4654              	.L446:
 4655              	.LVL691:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4656              		.loc 1 3465 0 discriminator 2
 4657 01da F61B     		subs	r6, r6, r7
 4658              	.LVL692:
 4659              	.L444:
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4660              		.loc 1 3465 0 is_stmt 0 discriminator 1
 4661 01dc B4FA84F3 		clz	r3, r4
 4662 01e0 5B09     		lsrs	r3, r3, #5
 4663 01e2 BE42     		cmp	r6, r7
 4664 01e4 98BF     		it	ls
 4665 01e6 0023     		movls	r3, #0
 4666 01e8 53B1     		cbz	r3, .L466
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 4667              		.loc 1 3466 0 is_stmt 1
 4668 01ea 2846     		mov	r0, r5
 4669 01ec FFF7FEFF 		bl	get_fat
 4670              	.LVL693:
 4671 01f0 0146     		mov	r1, r0
 4672              	.LVL694:
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 4673              		.loc 1 3467 0
 4674 01f2 0128     		cmp	r0, #1
 4675 01f4 EFD9     		bls	.L467
 4676              	.LVL695:
 4677              	.L445:
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4678              		.loc 1 3468 0
 4679 01f6 B1F1FF3F 		cmp	r1, #-1
 4680 01fa EED1     		bne	.L446
 4681 01fc 0124     		movs	r4, #1
 4682              	.LVL696:
 4683 01fe ECE7     		b	.L446
 4684              	.LVL697:
 4685              	.L466:
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 4686              		.loc 1 3470 0
 4687 0200 E961     		str	r1, [r5, #28]
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4688              		.loc 1 3471 0
 4689 0202 002C     		cmp	r4, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 198


 4690 0204 7FF40EAF 		bne	.L435
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4691              		.loc 1 3471 0 is_stmt 0 discriminator 1
 4692 0208 C6F30803 		ubfx	r3, r6, #0, #9
 4693 020c 002B     		cmp	r3, #0
 4694 020e 3FF409AF 		beq	.L435
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
 4695              		.loc 1 3472 0 is_stmt 1
 4696 0212 039F     		ldr	r7, [sp, #12]
 4697              	.LVL698:
 4698 0214 3846     		mov	r0, r7
 4699 0216 FFF7FEFF 		bl	clust2sect
 4700              	.LVL699:
 4701 021a 08B9     		cbnz	r0, .L468
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 4702              		.loc 1 3473 0
 4703 021c 0224     		movs	r4, #2
 4704              	.LVL700:
 4705 021e 01E7     		b	.L435
 4706              	.LVL701:
 4707              	.L468:
3475:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 4708              		.loc 1 3475 0
 4709 0220 00EB5622 		add	r2, r0, r6, lsr #9
 4710 0224 2A62     		str	r2, [r5, #32]
3477:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4711              		.loc 1 3477 0
 4712 0226 0123     		movs	r3, #1
 4713 0228 4146     		mov	r1, r8
 4714 022a 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 4715              	.LVL702:
 4716 022c FFF7FEFF 		bl	disk_read
 4717              	.LVL703:
 4718 0230 0028     		cmp	r0, #0
 4719 0232 3FF4F7AE 		beq	.L435
 4720 0236 0124     		movs	r4, #1
 4721              	.LVL704:
 4722 0238 F4E6     		b	.L435
 4723              	.LVL705:
 4724              	.L449:
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4725              		.loc 1 3313 0
 4726 023a 0924     		movs	r4, #9
 4727 023c F9E6     		b	.L434
 4728              		.cfi_endproc
 4729              	.LFE182:
 4731              		.section	.text.f_read,"ax",%progbits
 4732              		.align	1
 4733              		.global	f_read
 4734              		.syntax unified
 4735              		.thumb
 4736              		.thumb_func
 4737              		.fpu fpv5-sp-d16
 4739              	f_read:
 4740              	.LFB183:
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4741              		.loc 1 3506 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 199


 4742              		.cfi_startproc
 4743              		@ args = 0, pretend = 0, frame = 16
 4744              		@ frame_needed = 0, uses_anonymous_args = 0
 4745              	.LVL706:
 4746 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4747              	.LCFI54:
 4748              		.cfi_def_cfa_offset 36
 4749              		.cfi_offset 4, -36
 4750              		.cfi_offset 5, -32
 4751              		.cfi_offset 6, -28
 4752              		.cfi_offset 7, -24
 4753              		.cfi_offset 8, -20
 4754              		.cfi_offset 9, -16
 4755              		.cfi_offset 10, -12
 4756              		.cfi_offset 11, -8
 4757              		.cfi_offset 14, -4
 4758 0004 85B0     		sub	sp, sp, #20
 4759              	.LCFI55:
 4760              		.cfi_def_cfa_offset 56
 4761 0006 0446     		mov	r4, r0
 4762 0008 8846     		mov	r8, r1
 4763 000a 1646     		mov	r6, r2
 4764 000c 9946     		mov	r9, r3
 4765              	.LVL707:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 4766              		.loc 1 3515 0
 4767 000e 0023     		movs	r3, #0
 4768              	.LVL708:
 4769 0010 C9F80030 		str	r3, [r9]
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4770              		.loc 1 3516 0
 4771 0014 0190     		str	r0, [sp, #4]
 4772 0016 03A9     		add	r1, sp, #12
 4773              	.LVL709:
 4774 0018 FFF7FEFF 		bl	validate
 4775              	.LVL710:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4776              		.loc 1 3517 0
 4777 001c 0090     		str	r0, [sp]
 4778 001e 68B9     		cbnz	r0, .L470
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4779              		.loc 1 3517 0 is_stmt 0 discriminator 2
 4780 0020 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4781 0022 0093     		str	r3, [sp]
 4782              	.LVL711:
 4783 0024 53B9     		cbnz	r3, .L470
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4784              		.loc 1 3518 0 is_stmt 1
 4785 0026 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4786              	.LVL712:
 4787 0028 13F0010F 		tst	r3, #1
 4788 002c 0ED0     		beq	.L497
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4789              		.loc 1 3519 0
 4790 002e E368     		ldr	r3, [r4, #12]
 4791 0030 A269     		ldr	r2, [r4, #24]
 4792 0032 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 200


 4793              	.LVL713:
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4794              		.loc 1 3520 0
 4795 0034 B342     		cmp	r3, r6
 4796 0036 75D2     		bcs	.L475
 4797 0038 1E46     		mov	r6, r3
 4798              	.LVL714:
 4799 003a 73E0     		b	.L475
 4800              	.LVL715:
 4801              	.L470:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4802              		.loc 1 3517 0 discriminator 3
 4803 003c 0099     		ldr	r1, [sp]
 4804 003e 0398     		ldr	r0, [sp, #12]
 4805 0040 FFF7FEFF 		bl	unlock_fs
 4806              	.LVL716:
 4807              	.L472:
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4808              		.loc 1 3590 0
 4809 0044 0098     		ldr	r0, [sp]
 4810 0046 05B0     		add	sp, sp, #20
 4811              	.LCFI56:
 4812              		.cfi_remember_state
 4813              		.cfi_def_cfa_offset 36
 4814              		@ sp needed
 4815 0048 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4816              	.LVL717:
 4817              	.L497:
 4818              	.LCFI57:
 4819              		.cfi_restore_state
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4820              		.loc 1 3518 0 discriminator 1
 4821 004c 0721     		movs	r1, #7
 4822 004e 0398     		ldr	r0, [sp, #12]
 4823 0050 FFF7FEFF 		bl	unlock_fs
 4824              	.LVL718:
 4825 0054 0723     		movs	r3, #7
 4826 0056 0093     		str	r3, [sp]
 4827              	.LVL719:
 4828 0058 F4E7     		b	.L472
 4829              	.LVL720:
 4830              	.L478:
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 4831              		.loc 1 3531 0
 4832 005a E36A     		ldr	r3, [r4, #44]
 4833 005c 1BB1     		cbz	r3, .L480
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 4834              		.loc 1 3532 0
 4835 005e 2046     		mov	r0, r4
 4836 0060 FFF7FEFF 		bl	clmt_clust
 4837              	.LVL721:
 4838 0064 6EE0     		b	.L479
 4839              	.LVL722:
 4840              	.L480:
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4841              		.loc 1 3536 0
 4842 0066 E169     		ldr	r1, [r4, #28]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 201


 4843 0068 0198     		ldr	r0, [sp, #4]
 4844 006a FFF7FEFF 		bl	get_fat
 4845              	.LVL723:
 4846 006e 69E0     		b	.L479
 4847              	.L501:
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4848              		.loc 1 3539 0 discriminator 1
 4849 0070 0225     		movs	r5, #2
 4850 0072 6575     		strb	r5, [r4, #21]
 4851 0074 2946     		mov	r1, r5
 4852 0076 0398     		ldr	r0, [sp, #12]
 4853              	.LVL724:
 4854 0078 FFF7FEFF 		bl	unlock_fs
 4855              	.LVL725:
 4856 007c 0095     		str	r5, [sp]
 4857              	.LVL726:
 4858 007e E1E7     		b	.L472
 4859              	.LVL727:
 4860              	.L502:
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4861              		.loc 1 3540 0 discriminator 1
 4862 0080 0125     		movs	r5, #1
 4863 0082 6575     		strb	r5, [r4, #21]
 4864 0084 2946     		mov	r1, r5
 4865 0086 0398     		ldr	r0, [sp, #12]
 4866              	.LVL728:
 4867 0088 FFF7FEFF 		bl	unlock_fs
 4868              	.LVL729:
 4869 008c 0095     		str	r5, [sp]
 4870              	.LVL730:
 4871 008e D9E7     		b	.L472
 4872              	.LVL731:
 4873              	.L503:
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4874              		.loc 1 3544 0 discriminator 1
 4875 0090 0225     		movs	r5, #2
 4876 0092 6575     		strb	r5, [r4, #21]
 4877 0094 2946     		mov	r1, r5
 4878 0096 5846     		mov	r0, fp
 4879              	.LVL732:
 4880 0098 FFF7FEFF 		bl	unlock_fs
 4881              	.LVL733:
 4882 009c 0095     		str	r5, [sp]
 4883              	.LVL734:
 4884 009e D1E7     		b	.L472
 4885              	.LVL735:
 4886              	.L504:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 4887              		.loc 1 3551 0 discriminator 1
 4888 00a0 0125     		movs	r5, #1
 4889              	.LVL736:
 4890 00a2 6575     		strb	r5, [r4, #21]
 4891 00a4 2946     		mov	r1, r5
 4892 00a6 0398     		ldr	r0, [sp, #12]
 4893 00a8 FFF7FEFF 		bl	unlock_fs
 4894              	.LVL737:
 4895 00ac 0095     		str	r5, [sp]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 202


 4896              	.LVL738:
 4897 00ae C9E7     		b	.L472
 4898              	.LVL739:
 4899              	.L505:
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4900              		.loc 1 3558 0 discriminator 1
 4901 00b0 206A     		ldr	r0, [r4, #32]
 4902 00b2 A0EB0A00 		sub	r0, r0, r10
 4903 00b6 8542     		cmp	r5, r0
 4904 00b8 69D9     		bls	.L487
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4905              		.loc 1 3559 0
 4906 00ba 4FF40072 		mov	r2, #512
 4907 00be 04F13001 		add	r1, r4, #48
 4908 00c2 08EB4020 		add	r0, r8, r0, lsl #9
 4909 00c6 FFF7FEFF 		bl	mem_cpy
 4910              	.LVL740:
 4911 00ca 60E0     		b	.L487
 4912              	.L484:
3567:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4913              		.loc 1 3567 0
 4914 00cc 226A     		ldr	r2, [r4, #32]
 4915 00ce 9245     		cmp	r10, r2
 4916 00d0 0DD0     		beq	.L489
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4917              		.loc 1 3569 0
 4918 00d2 94F91430 		ldrsb	r3, [r4, #20]
 4919 00d6 002B     		cmp	r3, #0
 4920 00d8 5BDB     		blt	.L498
 4921              	.L490:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4922              		.loc 1 3574 0
 4923 00da 0123     		movs	r3, #1
 4924 00dc 5246     		mov	r2, r10
 4925 00de 04F13001 		add	r1, r4, #48
 4926 00e2 0398     		ldr	r0, [sp, #12]
 4927 00e4 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4928 00e6 FFF7FEFF 		bl	disk_read
 4929              	.LVL741:
 4930 00ea 0028     		cmp	r0, #0
 4931 00ec 66D1     		bne	.L499
 4932              	.L489:
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4933              		.loc 1 3577 0
 4934 00ee C4F820A0 		str	r10, [r4, #32]
 4935              	.LVL742:
 4936              	.L476:
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 4937              		.loc 1 3579 0
 4938 00f2 A369     		ldr	r3, [r4, #24]
 4939 00f4 C3F30803 		ubfx	r3, r3, #0, #9
 4940 00f8 C3F50075 		rsb	r5, r3, #512
 4941              	.LVL743:
3580:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 4942              		.loc 1 3580 0
 4943 00fc AE42     		cmp	r6, r5
 4944 00fe 00D2     		bcs	.L492
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 203


 4945 0100 3546     		mov	r5, r6
 4946              	.LVL744:
 4947              	.L492:
3585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4948              		.loc 1 3585 0
 4949 0102 04F13001 		add	r1, r4, #48
 4950 0106 2A46     		mov	r2, r5
 4951 0108 1944     		add	r1, r1, r3
 4952 010a 4046     		mov	r0, r8
 4953 010c FFF7FEFF 		bl	mem_cpy
 4954              	.LVL745:
 4955              	.L488:
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 4956              		.loc 1 3523 0
 4957 0110 A844     		add	r8, r8, r5
 4958              	.LVL746:
 4959 0112 A369     		ldr	r3, [r4, #24]
 4960 0114 2B44     		add	r3, r3, r5
 4961 0116 A361     		str	r3, [r4, #24]
 4962 0118 D9F80030 		ldr	r3, [r9]
 4963 011c 2B44     		add	r3, r3, r5
 4964 011e C9F80030 		str	r3, [r9]
 4965 0122 761B     		subs	r6, r6, r5
 4966              	.LVL747:
 4967              	.L475:
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 4968              		.loc 1 3522 0
 4969 0124 002E     		cmp	r6, #0
 4970 0126 51D0     		beq	.L500
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 4971              		.loc 1 3524 0
 4972 0128 A169     		ldr	r1, [r4, #24]
 4973 012a C1F30803 		ubfx	r3, r1, #0, #9
 4974 012e 002B     		cmp	r3, #0
 4975 0130 DFD1     		bne	.L476
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 4976              		.loc 1 3525 0
 4977 0132 039B     		ldr	r3, [sp, #12]
 4978 0134 5F89     		ldrh	r7, [r3, #10]
 4979 0136 013F     		subs	r7, r7, #1
 4980              	.LVL748:
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4981              		.loc 1 3526 0
 4982 0138 17EA5127 		ands	r7, r7, r1, lsr #9
 4983              	.LVL749:
 4984 013c 08D1     		bne	.L477
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 4985              		.loc 1 3527 0
 4986 013e 0029     		cmp	r1, #0
 4987 0140 8BD1     		bne	.L478
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
 4988              		.loc 1 3528 0
 4989 0142 A068     		ldr	r0, [r4, #8]
 4990              	.LVL750:
 4991              	.L479:
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4992              		.loc 1 3539 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 204


 4993 0144 0128     		cmp	r0, #1
 4994 0146 93D9     		bls	.L501
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4995              		.loc 1 3540 0
 4996 0148 B0F1FF3F 		cmp	r0, #-1
 4997 014c 98D0     		beq	.L502
3541:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4998              		.loc 1 3541 0
 4999 014e E061     		str	r0, [r4, #28]
 5000              	.LVL751:
 5001              	.L477:
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 5002              		.loc 1 3543 0
 5003 0150 DDF80CB0 		ldr	fp, [sp, #12]
 5004 0154 E169     		ldr	r1, [r4, #28]
 5005 0156 5846     		mov	r0, fp
 5006 0158 FFF7FEFF 		bl	clust2sect
 5007              	.LVL752:
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5008              		.loc 1 3544 0
 5009 015c 8246     		mov	r10, r0
 5010 015e 0028     		cmp	r0, #0
 5011 0160 96D0     		beq	.L503
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 5012              		.loc 1 3545 0
 5013 0162 BA44     		add	r10, r10, r7
 5014              	.LVL753:
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 5015              		.loc 1 3547 0
 5016 0164 750A     		lsrs	r5, r6, #9
 5017              	.LVL754:
 5018 0166 B1D0     		beq	.L484
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 5019              		.loc 1 3548 0
 5020 0168 7B19     		adds	r3, r7, r5
 5021 016a BBF80A20 		ldrh	r2, [fp, #10]
 5022 016e 9342     		cmp	r3, r2
 5023 0170 00D9     		bls	.L485
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5024              		.loc 1 3549 0
 5025 0172 D51B     		subs	r5, r2, r7
 5026              	.LVL755:
 5027              	.L485:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 5028              		.loc 1 3551 0
 5029 0174 2B46     		mov	r3, r5
 5030 0176 5246     		mov	r2, r10
 5031 0178 4146     		mov	r1, r8
 5032 017a 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5033 017e FFF7FEFF 		bl	disk_read
 5034              	.LVL756:
 5035 0182 0028     		cmp	r0, #0
 5036 0184 8CD1     		bne	.L504
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 5037              		.loc 1 3558 0
 5038 0186 94F91430 		ldrsb	r3, [r4, #20]
 5039 018a 002B     		cmp	r3, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 205


 5040 018c 90DB     		blt	.L505
 5041              	.L487:
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 5042              		.loc 1 3563 0
 5043 018e 6D02     		lsls	r5, r5, #9
 5044              	.LVL757:
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5045              		.loc 1 3564 0
 5046 0190 BEE7     		b	.L488
 5047              	.LVL758:
 5048              	.L498:
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5049              		.loc 1 3570 0
 5050 0192 0123     		movs	r3, #1
 5051 0194 04F13001 		add	r1, r4, #48
 5052 0198 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5053 019c FFF7FEFF 		bl	disk_write
 5054              	.LVL759:
 5055 01a0 20B9     		cbnz	r0, .L506
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5056              		.loc 1 3571 0
 5057 01a2 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5058 01a4 03F07F03 		and	r3, r3, #127
 5059 01a8 2375     		strb	r3, [r4, #20]
 5060 01aa 96E7     		b	.L490
 5061              	.L506:
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5062              		.loc 1 3570 0 discriminator 1
 5063 01ac 0125     		movs	r5, #1
 5064              	.LVL760:
 5065 01ae 6575     		strb	r5, [r4, #21]
 5066 01b0 2946     		mov	r1, r5
 5067 01b2 0398     		ldr	r0, [sp, #12]
 5068 01b4 FFF7FEFF 		bl	unlock_fs
 5069              	.LVL761:
 5070 01b8 0095     		str	r5, [sp]
 5071              	.LVL762:
 5072 01ba 43E7     		b	.L472
 5073              	.LVL763:
 5074              	.L499:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5075              		.loc 1 3574 0 discriminator 1
 5076 01bc 0125     		movs	r5, #1
 5077              	.LVL764:
 5078 01be 6575     		strb	r5, [r4, #21]
 5079 01c0 2946     		mov	r1, r5
 5080 01c2 0398     		ldr	r0, [sp, #12]
 5081 01c4 FFF7FEFF 		bl	unlock_fs
 5082              	.LVL765:
 5083 01c8 0095     		str	r5, [sp]
 5084              	.LVL766:
 5085 01ca 3BE7     		b	.L472
 5086              	.LVL767:
 5087              	.L500:
3589:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5088              		.loc 1 3589 0
 5089 01cc 0021     		movs	r1, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 206


 5090 01ce 0398     		ldr	r0, [sp, #12]
 5091 01d0 FFF7FEFF 		bl	unlock_fs
 5092              	.LVL768:
 5093 01d4 36E7     		b	.L472
 5094              		.cfi_endproc
 5095              	.LFE183:
 5097              		.section	.text.f_write,"ax",%progbits
 5098              		.align	1
 5099              		.global	f_write
 5100              		.syntax unified
 5101              		.thumb
 5102              		.thumb_func
 5103              		.fpu fpv5-sp-d16
 5105              	f_write:
 5106              	.LFB184:
3606:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5107              		.loc 1 3606 0
 5108              		.cfi_startproc
 5109              		@ args = 0, pretend = 0, frame = 16
 5110              		@ frame_needed = 0, uses_anonymous_args = 0
 5111              	.LVL769:
 5112 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5113              	.LCFI58:
 5114              		.cfi_def_cfa_offset 36
 5115              		.cfi_offset 4, -36
 5116              		.cfi_offset 5, -32
 5117              		.cfi_offset 6, -28
 5118              		.cfi_offset 7, -24
 5119              		.cfi_offset 8, -20
 5120              		.cfi_offset 9, -16
 5121              		.cfi_offset 10, -12
 5122              		.cfi_offset 11, -8
 5123              		.cfi_offset 14, -4
 5124 0004 85B0     		sub	sp, sp, #20
 5125              	.LCFI59:
 5126              		.cfi_def_cfa_offset 56
 5127 0006 0446     		mov	r4, r0
 5128 0008 8846     		mov	r8, r1
 5129 000a 1646     		mov	r6, r2
 5130 000c 9946     		mov	r9, r3
 5131              	.LVL770:
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 5132              		.loc 1 3614 0
 5133 000e 0023     		movs	r3, #0
 5134              	.LVL771:
 5135 0010 C9F80030 		str	r3, [r9]
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 5136              		.loc 1 3615 0
 5137 0014 0190     		str	r0, [sp, #4]
 5138 0016 03A9     		add	r1, sp, #12
 5139              	.LVL772:
 5140 0018 FFF7FEFF 		bl	validate
 5141              	.LVL773:
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5142              		.loc 1 3616 0
 5143 001c 0090     		str	r0, [sp]
 5144 001e 60B9     		cbnz	r0, .L508
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 207


3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5145              		.loc 1 3616 0 is_stmt 0 discriminator 2
 5146 0020 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 5147 0022 0093     		str	r3, [sp]
 5148              	.LVL774:
 5149 0024 4BB9     		cbnz	r3, .L508
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5150              		.loc 1 3617 0 is_stmt 1
 5151 0026 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5152              	.LVL775:
 5153 0028 13F0020F 		tst	r3, #2
 5154 002c 0DD0     		beq	.L535
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 5155              		.loc 1 3620 0
 5156 002e A369     		ldr	r3, [r4, #24]
 5157 0030 F342     		cmn	r3, r6
 5158 0032 C0F0BB80 		bcc	.L513
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5159              		.loc 1 3621 0
 5160 0036 DE43     		mvns	r6, r3
 5161              	.LVL776:
 5162 0038 B8E0     		b	.L513
 5163              	.LVL777:
 5164              	.L508:
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5165              		.loc 1 3616 0 discriminator 3
 5166 003a 0099     		ldr	r1, [sp]
 5167 003c 0398     		ldr	r0, [sp, #12]
 5168 003e FFF7FEFF 		bl	unlock_fs
 5169              	.LVL778:
 5170              	.L510:
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5171              		.loc 1 3712 0
 5172 0042 0098     		ldr	r0, [sp]
 5173 0044 05B0     		add	sp, sp, #20
 5174              	.LCFI60:
 5175              		.cfi_remember_state
 5176              		.cfi_def_cfa_offset 36
 5177              		@ sp needed
 5178 0046 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5179              	.LVL779:
 5180              	.L535:
 5181              	.LCFI61:
 5182              		.cfi_restore_state
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5183              		.loc 1 3617 0 discriminator 1
 5184 004a 0721     		movs	r1, #7
 5185 004c 0398     		ldr	r0, [sp, #12]
 5186 004e FFF7FEFF 		bl	unlock_fs
 5187              	.LVL780:
 5188 0052 0723     		movs	r3, #7
 5189 0054 0093     		str	r3, [sp]
 5190              	.LVL781:
 5191 0056 F4E7     		b	.L510
 5192              	.LVL782:
 5193              	.L516:
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 208


 5194              		.loc 1 3636 0
 5195 0058 E36A     		ldr	r3, [r4, #44]
 5196 005a A3B3     		cbz	r3, .L518
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 5197              		.loc 1 3637 0
 5198 005c 2046     		mov	r0, r4
 5199 005e FFF7FEFF 		bl	clmt_clust
 5200              	.LVL783:
 5201              	.L517:
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 5202              		.loc 1 3644 0
 5203 0062 0028     		cmp	r0, #0
 5204 0064 00F0CC80 		beq	.L519
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5205              		.loc 1 3645 0
 5206 0068 0128     		cmp	r0, #1
 5207 006a 31D0     		beq	.L536
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5208              		.loc 1 3646 0
 5209 006c B0F1FF3F 		cmp	r0, #-1
 5210 0070 36D0     		beq	.L537
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 5211              		.loc 1 3647 0
 5212 0072 E061     		str	r0, [r4, #28]
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5213              		.loc 1 3648 0
 5214 0074 A368     		ldr	r3, [r4, #8]
 5215 0076 03B9     		cbnz	r3, .L515
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5216              		.loc 1 3648 0 is_stmt 0 discriminator 1
 5217 0078 A060     		str	r0, [r4, #8]
 5218              	.LVL784:
 5219              	.L515:
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5220              		.loc 1 3653 0 is_stmt 1
 5221 007a 94F91430 		ldrsb	r3, [r4, #20]
 5222 007e 002B     		cmp	r3, #0
 5223 0080 36DB     		blt	.L538
 5224              	.L522:
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 5225              		.loc 1 3658 0
 5226 0082 DDF80CB0 		ldr	fp, [sp, #12]
 5227 0086 E169     		ldr	r1, [r4, #28]
 5228 0088 5846     		mov	r0, fp
 5229 008a FFF7FEFF 		bl	clust2sect
 5230              	.LVL785:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5231              		.loc 1 3659 0
 5232 008e 8246     		mov	r10, r0
 5233 0090 0028     		cmp	r0, #0
 5234 0092 43D0     		beq	.L539
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
 5235              		.loc 1 3660 0
 5236 0094 BA44     		add	r10, r10, r7
 5237              	.LVL786:
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 5238              		.loc 1 3662 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 209


 5239 0096 750A     		lsrs	r5, r6, #9
 5240              	.LVL787:
 5241 0098 5DD0     		beq	.L525
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 5242              		.loc 1 3663 0
 5243 009a 7B19     		adds	r3, r7, r5
 5244 009c BBF80A20 		ldrh	r2, [fp, #10]
 5245 00a0 9342     		cmp	r3, r2
 5246 00a2 00D9     		bls	.L526
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5247              		.loc 1 3664 0
 5248 00a4 D51B     		subs	r5, r2, r7
 5249              	.LVL788:
 5250              	.L526:
3666:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 5251              		.loc 1 3666 0
 5252 00a6 2B46     		mov	r3, r5
 5253 00a8 5246     		mov	r2, r10
 5254 00aa 4146     		mov	r1, r8
 5255 00ac 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5256 00b0 FFF7FEFF 		bl	disk_write
 5257              	.LVL789:
 5258 00b4 0028     		cmp	r0, #0
 5259 00b6 39D1     		bne	.L540
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
 5260              		.loc 1 3674 0
 5261 00b8 216A     		ldr	r1, [r4, #32]
 5262 00ba A1EB0A01 		sub	r1, r1, r10
 5263 00be 8D42     		cmp	r5, r1
 5264 00c0 3CD8     		bhi	.L541
 5265              	.L528:
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 5266              		.loc 1 3680 0
 5267 00c2 6D02     		lsls	r5, r5, #9
 5268              	.LVL790:
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5269              		.loc 1 3681 0
 5270 00c4 63E0     		b	.L529
 5271              	.LVL791:
 5272              	.L518:
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5273              		.loc 1 3641 0
 5274 00c6 E169     		ldr	r1, [r4, #28]
 5275 00c8 0198     		ldr	r0, [sp, #4]
 5276 00ca FFF7FEFF 		bl	create_chain
 5277              	.LVL792:
 5278 00ce C8E7     		b	.L517
 5279              	.L536:
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5280              		.loc 1 3645 0 discriminator 1
 5281 00d0 0225     		movs	r5, #2
 5282 00d2 6575     		strb	r5, [r4, #21]
 5283 00d4 2946     		mov	r1, r5
 5284 00d6 0398     		ldr	r0, [sp, #12]
 5285              	.LVL793:
 5286 00d8 FFF7FEFF 		bl	unlock_fs
 5287              	.LVL794:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 210


 5288 00dc 0095     		str	r5, [sp]
 5289              	.LVL795:
 5290 00de B0E7     		b	.L510
 5291              	.LVL796:
 5292              	.L537:
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5293              		.loc 1 3646 0 discriminator 1
 5294 00e0 0125     		movs	r5, #1
 5295 00e2 6575     		strb	r5, [r4, #21]
 5296 00e4 2946     		mov	r1, r5
 5297 00e6 0398     		ldr	r0, [sp, #12]
 5298              	.LVL797:
 5299 00e8 FFF7FEFF 		bl	unlock_fs
 5300              	.LVL798:
 5301 00ec 0095     		str	r5, [sp]
 5302              	.LVL799:
 5303 00ee A8E7     		b	.L510
 5304              	.LVL800:
 5305              	.L538:
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5306              		.loc 1 3654 0
 5307 00f0 0123     		movs	r3, #1
 5308 00f2 226A     		ldr	r2, [r4, #32]
 5309 00f4 04F13001 		add	r1, r4, #48
 5310 00f8 0398     		ldr	r0, [sp, #12]
 5311 00fa 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5312 00fc FFF7FEFF 		bl	disk_write
 5313              	.LVL801:
 5314 0100 20B9     		cbnz	r0, .L542
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5315              		.loc 1 3655 0
 5316 0102 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5317 0104 03F07F03 		and	r3, r3, #127
 5318 0108 2375     		strb	r3, [r4, #20]
 5319 010a BAE7     		b	.L522
 5320              	.L542:
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5321              		.loc 1 3654 0 discriminator 1
 5322 010c 0125     		movs	r5, #1
 5323 010e 6575     		strb	r5, [r4, #21]
 5324 0110 2946     		mov	r1, r5
 5325 0112 0398     		ldr	r0, [sp, #12]
 5326 0114 FFF7FEFF 		bl	unlock_fs
 5327              	.LVL802:
 5328 0118 0095     		str	r5, [sp]
 5329              	.LVL803:
 5330 011a 92E7     		b	.L510
 5331              	.LVL804:
 5332              	.L539:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5333              		.loc 1 3659 0 discriminator 1
 5334 011c 0225     		movs	r5, #2
 5335 011e 6575     		strb	r5, [r4, #21]
 5336 0120 2946     		mov	r1, r5
 5337 0122 5846     		mov	r0, fp
 5338              	.LVL805:
 5339 0124 FFF7FEFF 		bl	unlock_fs
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 211


 5340              	.LVL806:
 5341 0128 0095     		str	r5, [sp]
 5342              	.LVL807:
 5343 012a 8AE7     		b	.L510
 5344              	.LVL808:
 5345              	.L540:
3666:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 5346              		.loc 1 3666 0 discriminator 1
 5347 012c 0125     		movs	r5, #1
 5348              	.LVL809:
 5349 012e 6575     		strb	r5, [r4, #21]
 5350 0130 2946     		mov	r1, r5
 5351 0132 0398     		ldr	r0, [sp, #12]
 5352 0134 FFF7FEFF 		bl	unlock_fs
 5353              	.LVL810:
 5354 0138 0095     		str	r5, [sp]
 5355              	.LVL811:
 5356 013a 82E7     		b	.L510
 5357              	.LVL812:
 5358              	.L541:
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5359              		.loc 1 3675 0
 5360 013c 4FF40072 		mov	r2, #512
 5361 0140 08EB4121 		add	r1, r8, r1, lsl #9
 5362 0144 04F13000 		add	r0, r4, #48
 5363 0148 FFF7FEFF 		bl	mem_cpy
 5364              	.LVL813:
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5365              		.loc 1 3676 0
 5366 014c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5367 014e 03F07F03 		and	r3, r3, #127
 5368 0152 2375     		strb	r3, [r4, #20]
 5369 0154 B5E7     		b	.L528
 5370              	.L525:
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5371              		.loc 1 3689 0
 5372 0156 236A     		ldr	r3, [r4, #32]
 5373 0158 9A45     		cmp	r10, r3
 5374 015a 03D0     		beq	.L530
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5375              		.loc 1 3690 0 discriminator 1
 5376 015c A269     		ldr	r2, [r4, #24]
 5377 015e E368     		ldr	r3, [r4, #12]
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5378              		.loc 1 3689 0 discriminator 1
 5379 0160 9A42     		cmp	r2, r3
 5380 0162 3BD3     		bcc	.L543
 5381              	.L530:
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5382              		.loc 1 3695 0
 5383 0164 C4F820A0 		str	r10, [r4, #32]
 5384              	.LVL814:
 5385              	.L514:
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 5386              		.loc 1 3697 0
 5387 0168 A369     		ldr	r3, [r4, #24]
 5388 016a C3F30803 		ubfx	r3, r3, #0, #9
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 212


 5389 016e C3F50075 		rsb	r5, r3, #512
 5390              	.LVL815:
3698:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 5391              		.loc 1 3698 0
 5392 0172 AE42     		cmp	r6, r5
 5393 0174 00D2     		bcs	.L531
 5394 0176 3546     		mov	r5, r6
 5395              	.LVL816:
 5396              	.L531:
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
 5397              		.loc 1 3704 0
 5398 0178 04F13000 		add	r0, r4, #48
 5399 017c 2A46     		mov	r2, r5
 5400 017e 4146     		mov	r1, r8
 5401 0180 1844     		add	r0, r0, r3
 5402 0182 FFF7FEFF 		bl	mem_cpy
 5403              	.LVL817:
3705:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5404              		.loc 1 3705 0
 5405 0186 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5406 0188 63F07F03 		orn	r3, r3, #127
 5407 018c 2375     		strb	r3, [r4, #20]
 5408              	.L529:
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 5409              		.loc 1 3625 0
 5410 018e A844     		add	r8, r8, r5
 5411              	.LVL818:
 5412 0190 A369     		ldr	r3, [r4, #24]
 5413 0192 2B44     		add	r3, r3, r5
 5414 0194 A361     		str	r3, [r4, #24]
 5415 0196 E268     		ldr	r2, [r4, #12]
 5416 0198 9342     		cmp	r3, r2
 5417 019a 38BF     		it	cc
 5418 019c 1346     		movcc	r3, r2
 5419 019e E360     		str	r3, [r4, #12]
 5420 01a0 D9F80030 		ldr	r3, [r9]
 5421 01a4 2B44     		add	r3, r3, r5
 5422 01a6 C9F80030 		str	r3, [r9]
 5423 01aa 761B     		subs	r6, r6, r5
 5424              	.LVL819:
 5425              	.L513:
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 5426              		.loc 1 3624 0
 5427 01ac 46B3     		cbz	r6, .L519
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 5428              		.loc 1 3626 0
 5429 01ae A169     		ldr	r1, [r4, #24]
 5430 01b0 C1F30803 		ubfx	r3, r1, #0, #9
 5431 01b4 002B     		cmp	r3, #0
 5432 01b6 D7D1     		bne	.L514
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
 5433              		.loc 1 3627 0
 5434 01b8 039B     		ldr	r3, [sp, #12]
 5435 01ba 5F89     		ldrh	r7, [r3, #10]
 5436 01bc 013F     		subs	r7, r7, #1
 5437              	.LVL820:
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 213


 5438              		.loc 1 3628 0
 5439 01be 17EA5127 		ands	r7, r7, r1, lsr #9
 5440              	.LVL821:
 5441 01c2 7FF45AAF 		bne	.L515
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 5442              		.loc 1 3629 0
 5443 01c6 0029     		cmp	r1, #0
 5444 01c8 7FF446AF 		bne	.L516
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
 5445              		.loc 1 3630 0
 5446 01cc A068     		ldr	r0, [r4, #8]
 5447              	.LVL822:
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 5448              		.loc 1 3631 0
 5449 01ce 0028     		cmp	r0, #0
 5450 01d0 7FF447AF 		bne	.L517
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5451              		.loc 1 3632 0
 5452 01d4 0198     		ldr	r0, [sp, #4]
 5453              	.LVL823:
 5454 01d6 FFF7FEFF 		bl	create_chain
 5455              	.LVL824:
 5456 01da 42E7     		b	.L517
 5457              	.LVL825:
 5458              	.L543:
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
 5459              		.loc 1 3691 0
 5460 01dc 0123     		movs	r3, #1
 5461 01de 5246     		mov	r2, r10
 5462 01e0 04F13001 		add	r1, r4, #48
 5463 01e4 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 5464 01e8 FFF7FEFF 		bl	disk_read
 5465              	.LVL826:
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5466              		.loc 1 3690 0
 5467 01ec 0028     		cmp	r0, #0
 5468 01ee B9D0     		beq	.L530
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5469              		.loc 1 3692 0
 5470 01f0 0125     		movs	r5, #1
 5471              	.LVL827:
 5472 01f2 6575     		strb	r5, [r4, #21]
 5473 01f4 2946     		mov	r1, r5
 5474 01f6 0398     		ldr	r0, [sp, #12]
 5475 01f8 FFF7FEFF 		bl	unlock_fs
 5476              	.LVL828:
 5477 01fc 0095     		str	r5, [sp]
 5478              	.LVL829:
 5479 01fe 20E7     		b	.L510
 5480              	.LVL830:
 5481              	.L519:
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5482              		.loc 1 3709 0
 5483 0200 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5484 0202 43F04003 		orr	r3, r3, #64
 5485 0206 2375     		strb	r3, [r4, #20]
3711:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 214


 5486              		.loc 1 3711 0
 5487 0208 0021     		movs	r1, #0
 5488 020a 0398     		ldr	r0, [sp, #12]
 5489 020c FFF7FEFF 		bl	unlock_fs
 5490              	.LVL831:
 5491 0210 17E7     		b	.L510
 5492              		.cfi_endproc
 5493              	.LFE184:
 5495              		.section	.text.putc_bfd,"ax",%progbits
 5496              		.align	1
 5497              		.syntax unified
 5498              		.thumb
 5499              		.thumb_func
 5500              		.fpu fpv5-sp-d16
 5502              	putc_bfd:
 5503              	.LFB199:
5910:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
 5504              		.loc 1 5910 0
 5505              		.cfi_startproc
 5506              		@ args = 0, pretend = 0, frame = 8
 5507              		@ frame_needed = 0, uses_anonymous_args = 0
 5508              	.LVL832:
 5509 0000 70B5     		push	{r4, r5, r6, lr}
 5510              	.LCFI62:
 5511              		.cfi_def_cfa_offset 16
 5512              		.cfi_offset 4, -16
 5513              		.cfi_offset 5, -12
 5514              		.cfi_offset 6, -8
 5515              		.cfi_offset 14, -4
 5516 0002 82B0     		sub	sp, sp, #8
 5517              	.LCFI63:
 5518              		.cfi_def_cfa_offset 24
 5519 0004 0446     		mov	r4, r0
 5520 0006 0E46     		mov	r6, r1
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
 5521              		.loc 1 5915 0
 5522 0008 0A29     		cmp	r1, #10
 5523 000a 0DD0     		beq	.L551
 5524              	.LVL833:
 5525              	.L545:
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
 5526              		.loc 1 5919 0
 5527 000c 6368     		ldr	r3, [r4, #4]
 5528              	.LVL834:
5920:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5529              		.loc 1 5920 0
 5530 000e 002B     		cmp	r3, #0
 5531 0010 08DB     		blt	.L544
5949:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5532              		.loc 1 5949 0
 5533 0012 5D1C     		adds	r5, r3, #1
 5534              	.LVL835:
 5535 0014 2344     		add	r3, r3, r4
 5536 0016 1E73     		strb	r6, [r3, #12]
5952:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
 5537              		.loc 1 5952 0
 5538 0018 3C2D     		cmp	r5, #60
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 215


 5539 001a 09DC     		bgt	.L552
 5540              	.LVL836:
 5541              	.L547:
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 5542              		.loc 1 5956 0
 5543 001c 6560     		str	r5, [r4, #4]
5957:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5544              		.loc 1 5957 0
 5545 001e A368     		ldr	r3, [r4, #8]
 5546 0020 0133     		adds	r3, r3, #1
 5547 0022 A360     		str	r3, [r4, #8]
 5548              	.LVL837:
 5549              	.L544:
5958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5550              		.loc 1 5958 0
 5551 0024 02B0     		add	sp, sp, #8
 5552              	.LCFI64:
 5553              		.cfi_remember_state
 5554              		.cfi_def_cfa_offset 16
 5555              		@ sp needed
 5556 0026 70BD     		pop	{r4, r5, r6, pc}
 5557              	.LVL838:
 5558              	.L551:
 5559              	.LCFI65:
 5560              		.cfi_restore_state
5916:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5561              		.loc 1 5916 0
 5562 0028 0D21     		movs	r1, #13
 5563              	.LVL839:
 5564 002a FFF7E9FF 		bl	putc_bfd
 5565              	.LVL840:
 5566 002e EDE7     		b	.L545
 5567              	.LVL841:
 5568              	.L552:
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 5569              		.loc 1 5953 0
 5570 0030 01AB     		add	r3, sp, #4
 5571 0032 2A46     		mov	r2, r5
 5572 0034 04F10C01 		add	r1, r4, #12
 5573 0038 2068     		ldr	r0, [r4]
 5574 003a FFF7FEFF 		bl	f_write
 5575              	.LVL842:
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5576              		.loc 1 5954 0
 5577 003e 019B     		ldr	r3, [sp, #4]
 5578 0040 9D42     		cmp	r5, r3
 5579 0042 02D0     		beq	.L553
 5580 0044 4FF0FF35 		mov	r5, #-1
 5581              	.LVL843:
 5582 0048 E8E7     		b	.L547
 5583              	.LVL844:
 5584              	.L553:
 5585 004a 0025     		movs	r5, #0
 5586              	.LVL845:
 5587 004c E6E7     		b	.L547
 5588              		.cfi_endproc
 5589              	.LFE199:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 216


 5591              		.section	.text.putc_flush,"ax",%progbits
 5592              		.align	1
 5593              		.syntax unified
 5594              		.thumb
 5595              		.thumb_func
 5596              		.fpu fpv5-sp-d16
 5598              	putc_flush:
 5599              	.LFB200:
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5600              		.loc 1 5965 0
 5601              		.cfi_startproc
 5602              		@ args = 0, pretend = 0, frame = 8
 5603              		@ frame_needed = 0, uses_anonymous_args = 0
 5604              	.LVL846:
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
 5605              		.loc 1 5968 0
 5606 0000 4268     		ldr	r2, [r0, #4]
 5607 0002 002A     		cmp	r2, #0
 5608 0004 10DB     		blt	.L556
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5609              		.loc 1 5965 0
 5610 0006 10B5     		push	{r4, lr}
 5611              	.LCFI66:
 5612              		.cfi_def_cfa_offset 8
 5613              		.cfi_offset 4, -8
 5614              		.cfi_offset 14, -4
 5615 0008 82B0     		sub	sp, sp, #8
 5616              	.LCFI67:
 5617              		.cfi_def_cfa_offset 16
 5618 000a 0446     		mov	r4, r0
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
 5619              		.loc 1 5969 0
 5620 000c 01AB     		add	r3, sp, #4
 5621 000e 00F10C01 		add	r1, r0, #12
 5622 0012 0068     		ldr	r0, [r0]
 5623              	.LVL847:
 5624 0014 FFF7FEFF 		bl	f_write
 5625              	.LVL848:
 5626 0018 48B9     		cbnz	r0, .L557
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5627              		.loc 1 5970 0
 5628 001a 6268     		ldr	r2, [r4, #4]
 5629 001c 019B     		ldr	r3, [sp, #4]
 5630 001e 9A42     		cmp	r2, r3
 5631 0020 08D1     		bne	.L558
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5632              		.loc 1 5970 0 is_stmt 0 discriminator 1
 5633 0022 A068     		ldr	r0, [r4, #8]
 5634              	.L554:
5972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5635              		.loc 1 5972 0 is_stmt 1
 5636 0024 02B0     		add	sp, sp, #8
 5637              	.LCFI68:
 5638              		.cfi_def_cfa_offset 8
 5639              		@ sp needed
 5640 0026 10BD     		pop	{r4, pc}
 5641              	.LVL849:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 217


 5642              	.L556:
 5643              	.LCFI69:
 5644              		.cfi_def_cfa_offset 0
 5645              		.cfi_restore 4
 5646              		.cfi_restore 14
5971:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5647              		.loc 1 5971 0
 5648 0028 4FF0FF30 		mov	r0, #-1
 5649              	.LVL850:
 5650 002c 7047     		bx	lr
 5651              	.LVL851:
 5652              	.L557:
 5653              	.LCFI70:
 5654              		.cfi_def_cfa_offset 16
 5655              		.cfi_offset 4, -8
 5656              		.cfi_offset 14, -4
 5657 002e 4FF0FF30 		mov	r0, #-1
 5658 0032 F7E7     		b	.L554
 5659              	.L558:
 5660 0034 4FF0FF30 		mov	r0, #-1
 5661 0038 F4E7     		b	.L554
 5662              		.cfi_endproc
 5663              	.LFE200:
 5665              		.section	.text.f_sync,"ax",%progbits
 5666              		.align	1
 5667              		.global	f_sync
 5668              		.syntax unified
 5669              		.thumb
 5670              		.thumb_func
 5671              		.fpu fpv5-sp-d16
 5673              	f_sync:
 5674              	.LFB185:
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5675              		.loc 1 3724 0
 5676              		.cfi_startproc
 5677              		@ args = 0, pretend = 0, frame = 8
 5678              		@ frame_needed = 0, uses_anonymous_args = 0
 5679              	.LVL852:
 5680 0000 70B5     		push	{r4, r5, r6, lr}
 5681              	.LCFI71:
 5682              		.cfi_def_cfa_offset 16
 5683              		.cfi_offset 4, -16
 5684              		.cfi_offset 5, -12
 5685              		.cfi_offset 6, -8
 5686              		.cfi_offset 14, -4
 5687 0002 82B0     		sub	sp, sp, #8
 5688              	.LCFI72:
 5689              		.cfi_def_cfa_offset 24
 5690 0004 0546     		mov	r5, r0
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5691              		.loc 1 3734 0
 5692 0006 01A9     		add	r1, sp, #4
 5693 0008 FFF7FEFF 		bl	validate
 5694              	.LVL853:
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 5695              		.loc 1 3735 0
 5696 000c 0446     		mov	r4, r0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 218


 5697 000e 78B9     		cbnz	r0, .L564
3736:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5698              		.loc 1 3736 0
 5699 0010 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 5700 0012 13F0400F 		tst	r3, #64
 5701 0016 0BD0     		beq	.L564
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 5702              		.loc 1 3738 0
 5703 0018 13F0800F 		tst	r3, #128
 5704 001c 0FD1     		bne	.L569
 5705              	.LVL854:
 5706              	.L565:
3744:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 5707              		.loc 1 3744 0
 5708 001e FFF7FEFF 		bl	get_fattime
 5709              	.LVL855:
 5710 0022 0646     		mov	r6, r0
 5711              	.LVL856:
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 5712              		.loc 1 3774 0
 5713 0024 696A     		ldr	r1, [r5, #36]
 5714 0026 0198     		ldr	r0, [sp, #4]
 5715              	.LVL857:
 5716 0028 FFF7FEFF 		bl	move_window
 5717              	.LVL858:
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
 5718              		.loc 1 3775 0
 5719 002c 0446     		mov	r4, r0
 5720 002e D0B1     		cbz	r0, .L570
 5721              	.LVL859:
 5722              	.L564:
3790:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5723              		.loc 1 3790 0
 5724 0030 2146     		mov	r1, r4
 5725 0032 0198     		ldr	r0, [sp, #4]
 5726 0034 FFF7FEFF 		bl	unlock_fs
 5727              	.LVL860:
 5728              	.L567:
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5729              		.loc 1 3791 0
 5730 0038 2046     		mov	r0, r4
 5731 003a 02B0     		add	sp, sp, #8
 5732              	.LCFI73:
 5733              		.cfi_remember_state
 5734              		.cfi_def_cfa_offset 16
 5735              		@ sp needed
 5736 003c 70BD     		pop	{r4, r5, r6, pc}
 5737              	.LVL861:
 5738              	.L569:
 5739              	.LCFI74:
 5740              		.cfi_restore_state
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5741              		.loc 1 3739 0
 5742 003e 0123     		movs	r3, #1
 5743 0040 2A6A     		ldr	r2, [r5, #32]
 5744 0042 05F13001 		add	r1, r5, #48
 5745 0046 0198     		ldr	r0, [sp, #4]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 219


 5746              	.LVL862:
 5747 0048 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5748 004a FFF7FEFF 		bl	disk_write
 5749              	.LVL863:
 5750 004e 20B9     		cbnz	r0, .L571
3740:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5751              		.loc 1 3740 0
 5752 0050 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 5753 0052 03F07F03 		and	r3, r3, #127
 5754 0056 2B75     		strb	r3, [r5, #20]
 5755 0058 E1E7     		b	.L565
 5756              	.L571:
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5757              		.loc 1 3739 0 discriminator 1
 5758 005a 0121     		movs	r1, #1
 5759 005c 0198     		ldr	r0, [sp, #4]
 5760 005e FFF7FEFF 		bl	unlock_fs
 5761              	.LVL864:
 5762 0062 0124     		movs	r4, #1
 5763 0064 E8E7     		b	.L567
 5764              	.LVL865:
 5765              	.L570:
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 5766              		.loc 1 3776 0
 5767 0066 AC6A     		ldr	r4, [r5, #40]
 5768              	.LVL866:
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 5769              		.loc 1 3777 0
 5770 0068 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 5771 006a 43F02003 		orr	r3, r3, #32
 5772 006e E372     		strb	r3, [r4, #11]
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 5773              		.loc 1 3778 0
 5774 0070 AA68     		ldr	r2, [r5, #8]
 5775 0072 2146     		mov	r1, r4
 5776 0074 2868     		ldr	r0, [r5]
 5777              	.LVL867:
 5778 0076 FFF7FEFF 		bl	st_clust
 5779              	.LVL868:
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 5780              		.loc 1 3779 0
 5781 007a E968     		ldr	r1, [r5, #12]
 5782 007c 04F11C00 		add	r0, r4, #28
 5783 0080 FFF7FEFF 		bl	st_dword
 5784              	.LVL869:
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
 5785              		.loc 1 3780 0
 5786 0084 3146     		mov	r1, r6
 5787 0086 04F11600 		add	r0, r4, #22
 5788 008a FFF7FEFF 		bl	st_dword
 5789              	.LVL870:
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 5790              		.loc 1 3781 0
 5791 008e 0021     		movs	r1, #0
 5792 0090 04F11200 		add	r0, r4, #18
 5793 0094 FFF7FEFF 		bl	st_word
 5794              	.LVL871:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 220


3782:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 5795              		.loc 1 3782 0
 5796 0098 0122     		movs	r2, #1
 5797 009a 019B     		ldr	r3, [sp, #4]
 5798 009c DA70     		strb	r2, [r3, #3]
3783:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 5799              		.loc 1 3783 0
 5800 009e 0198     		ldr	r0, [sp, #4]
 5801 00a0 FFF7FEFF 		bl	sync_fs
 5802              	.LVL872:
 5803 00a4 0446     		mov	r4, r0
 5804              	.LVL873:
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5805              		.loc 1 3784 0
 5806 00a6 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 5807 00a8 23F04003 		bic	r3, r3, #64
 5808 00ac 2B75     		strb	r3, [r5, #20]
 5809 00ae BFE7     		b	.L564
 5810              		.cfi_endproc
 5811              	.LFE185:
 5813              		.section	.text.f_close,"ax",%progbits
 5814              		.align	1
 5815              		.global	f_close
 5816              		.syntax unified
 5817              		.thumb
 5818              		.thumb_func
 5819              		.fpu fpv5-sp-d16
 5821              	f_close:
 5822              	.LFB186:
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5823              		.loc 1 3805 0
 5824              		.cfi_startproc
 5825              		@ args = 0, pretend = 0, frame = 8
 5826              		@ frame_needed = 0, uses_anonymous_args = 0
 5827              	.LVL874:
 5828 0000 30B5     		push	{r4, r5, lr}
 5829              	.LCFI75:
 5830              		.cfi_def_cfa_offset 12
 5831              		.cfi_offset 4, -12
 5832              		.cfi_offset 5, -8
 5833              		.cfi_offset 14, -4
 5834 0002 83B0     		sub	sp, sp, #12
 5835              	.LCFI76:
 5836              		.cfi_def_cfa_offset 24
 5837 0004 0546     		mov	r5, r0
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 5838              		.loc 1 3810 0
 5839 0006 FFF7FEFF 		bl	f_sync
 5840              	.LVL875:
3811:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5841              		.loc 1 3811 0
 5842 000a 0446     		mov	r4, r0
 5843 000c 10B1     		cbz	r0, .L576
 5844              	.LVL876:
 5845              	.L573:
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5846              		.loc 1 3829 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 221


 5847 000e 2046     		mov	r0, r4
 5848 0010 03B0     		add	sp, sp, #12
 5849              	.LCFI77:
 5850              		.cfi_remember_state
 5851              		.cfi_def_cfa_offset 12
 5852              		@ sp needed
 5853 0012 30BD     		pop	{r4, r5, pc}
 5854              	.LVL877:
 5855              	.L576:
 5856              	.LCFI78:
 5857              		.cfi_restore_state
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5858              		.loc 1 3814 0
 5859 0014 01A9     		add	r1, sp, #4
 5860 0016 2846     		mov	r0, r5
 5861              	.LVL878:
 5862 0018 FFF7FEFF 		bl	validate
 5863              	.LVL879:
3815:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 5864              		.loc 1 3815 0
 5865 001c 0446     		mov	r4, r0
 5866 001e 0028     		cmp	r0, #0
 5867 0020 F5D1     		bne	.L573
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 5868              		.loc 1 3817 0
 5869 0022 2869     		ldr	r0, [r5, #16]
 5870              	.LVL880:
 5871 0024 FFF7FEFF 		bl	dec_lock
 5872              	.LVL881:
3818:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5873              		.loc 1 3818 0
 5874 0028 0446     		mov	r4, r0
 5875 002a 08B9     		cbnz	r0, .L574
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5876              		.loc 1 3821 0
 5877 002c 0023     		movs	r3, #0
 5878 002e 2B60     		str	r3, [r5]
 5879              	.L574:
3824:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5880              		.loc 1 3824 0
 5881 0030 0021     		movs	r1, #0
 5882 0032 0198     		ldr	r0, [sp, #4]
 5883              	.LVL882:
 5884 0034 FFF7FEFF 		bl	unlock_fs
 5885              	.LVL883:
 5886 0038 E9E7     		b	.L573
 5887              		.cfi_endproc
 5888              	.LFE186:
 5890              		.section	.text.f_lseek,"ax",%progbits
 5891              		.align	1
 5892              		.global	f_lseek
 5893              		.syntax unified
 5894              		.thumb
 5895              		.thumb_func
 5896              		.fpu fpv5-sp-d16
 5898              	f_lseek:
 5899              	.LFB187:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 222


3994:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5900              		.loc 1 3994 0
 5901              		.cfi_startproc
 5902              		@ args = 0, pretend = 0, frame = 16
 5903              		@ frame_needed = 0, uses_anonymous_args = 0
 5904              	.LVL884:
 5905 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5906              	.LCFI79:
 5907              		.cfi_def_cfa_offset 36
 5908              		.cfi_offset 4, -36
 5909              		.cfi_offset 5, -32
 5910              		.cfi_offset 6, -28
 5911              		.cfi_offset 7, -24
 5912              		.cfi_offset 8, -20
 5913              		.cfi_offset 9, -16
 5914              		.cfi_offset 10, -12
 5915              		.cfi_offset 11, -8
 5916              		.cfi_offset 14, -4
 5917 0004 85B0     		sub	sp, sp, #20
 5918              	.LCFI80:
 5919              		.cfi_def_cfa_offset 56
 5920 0006 0446     		mov	r4, r0
 5921 0008 0E46     		mov	r6, r1
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 5922              		.loc 1 4003 0
 5923 000a 8046     		mov	r8, r0
 5924 000c 03A9     		add	r1, sp, #12
 5925              	.LVL885:
 5926 000e FFF7FEFF 		bl	validate
 5927              	.LVL886:
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5928              		.loc 1 4004 0
 5929 0012 0546     		mov	r5, r0
 5930 0014 00B9     		cbnz	r0, .L578
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5931              		.loc 1 4004 0 is_stmt 0 discriminator 1
 5932 0016 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
 5933              	.LVL887:
 5934              	.L578:
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5935              		.loc 1 4010 0 is_stmt 1
 5936 0018 ADB9     		cbnz	r5, .L623
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 5937              		.loc 1 4013 0
 5938 001a E36A     		ldr	r3, [r4, #44]
 5939 001c 002B     		cmp	r3, #0
 5940 001e 00F0A880 		beq	.L581
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 5941              		.loc 1 4014 0
 5942 0022 B6F1FF3F 		cmp	r6, #-1
 5943 0026 13D0     		beq	.L624
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
 5944              		.loc 1 4040 0
 5945 0028 E768     		ldr	r7, [r4, #12]
 5946 002a BE42     		cmp	r6, r7
 5947 002c 00D8     		bhi	.L590
 5948 002e 3746     		mov	r7, r6
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 223


 5949              	.L590:
 5950              	.LVL888:
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 5951              		.loc 1 4041 0
 5952 0030 A761     		str	r7, [r4, #24]
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 5953              		.loc 1 4042 0
 5954 0032 002F     		cmp	r7, #0
 5955 0034 52D1     		bne	.L625
 5956              	.LVL889:
 5957              	.L589:
4141:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5958              		.loc 1 4141 0
 5959 0036 2946     		mov	r1, r5
 5960 0038 0398     		ldr	r0, [sp, #12]
 5961 003a FFF7FEFF 		bl	unlock_fs
 5962              	.LVL890:
 5963              	.L580:
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5964              		.loc 1 4142 0
 5965 003e 2846     		mov	r0, r5
 5966 0040 05B0     		add	sp, sp, #20
 5967              	.LCFI81:
 5968              		.cfi_remember_state
 5969              		.cfi_def_cfa_offset 36
 5970              		@ sp needed
 5971 0042 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5972              	.LVL891:
 5973              	.L623:
 5974              	.LCFI82:
 5975              		.cfi_restore_state
4010:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5976              		.loc 1 4010 0 discriminator 1
 5977 0046 2946     		mov	r1, r5
 5978 0048 0398     		ldr	r0, [sp, #12]
 5979 004a FFF7FEFF 		bl	unlock_fs
 5980              	.LVL892:
 5981 004e F6E7     		b	.L580
 5982              	.L624:
 5983              	.LVL893:
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 5984              		.loc 1 4016 0
 5985 0050 1A1D     		adds	r2, r3, #4
 5986 0052 0192     		str	r2, [sp, #4]
 5987              	.LVL894:
 5988 0054 D3F800B0 		ldr	fp, [r3]
 5989              	.LVL895:
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 5990              		.loc 1 4017 0
 5991 0058 D4F808A0 		ldr	r10, [r4, #8]
 5992              	.LVL896:
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 5993              		.loc 1 4018 0
 5994 005c BAF1000F 		cmp	r10, #0
 5995 0060 30D0     		beq	.L615
 5996 0062 4FF00209 		mov	r9, #2
 5997              	.LVL897:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 224


 5998              	.L588:
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 5999              		.loc 1 4021 0
 6000 0066 09F10209 		add	r9, r9, #2
 6001              	.LVL898:
 6002 006a 5646     		mov	r6, r10
 6003 006c 0027     		movs	r7, #0
 6004              	.LVL899:
 6005              	.L586:
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
 6006              		.loc 1 4023 0
 6007 006e 0137     		adds	r7, r7, #1
 6008              	.LVL900:
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 6009              		.loc 1 4024 0
 6010 0070 3146     		mov	r1, r6
 6011 0072 4046     		mov	r0, r8
 6012 0074 FFF7FEFF 		bl	get_fat
 6013              	.LVL901:
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6014              		.loc 1 4025 0
 6015 0078 0128     		cmp	r0, #1
 6016 007a 15D9     		bls	.L626
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 6017              		.loc 1 4026 0
 6018 007c B0F1FF3F 		cmp	r0, #-1
 6019 0080 19D0     		beq	.L627
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 6020              		.loc 1 4027 0
 6021 0082 731C     		adds	r3, r6, #1
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 6022              		.loc 1 4024 0
 6023 0084 0646     		mov	r6, r0
 6024              	.LVL902:
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 6025              		.loc 1 4027 0
 6026 0086 9842     		cmp	r0, r3
 6027 0088 F1D0     		beq	.L586
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 6028              		.loc 1 4028 0
 6029 008a CB45     		cmp	fp, r9
 6030 008c 06D3     		bcc	.L587
 6031              	.LVL903:
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6032              		.loc 1 4029 0
 6033 008e 019A     		ldr	r2, [sp, #4]
 6034 0090 1346     		mov	r3, r2
 6035              	.LVL904:
 6036 0092 43F8087B 		str	r7, [r3], #8
 6037              	.LVL905:
 6038 0096 C2F804A0 		str	r10, [r2, #4]
 6039 009a 0193     		str	r3, [sp, #4]
 6040              	.LVL906:
 6041              	.L587:
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6042              		.loc 1 4031 0
 6043 009c 039B     		ldr	r3, [sp, #12]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 225


 6044 009e 9B69     		ldr	r3, [r3, #24]
 6045 00a0 9842     		cmp	r0, r3
 6046 00a2 11D2     		bcs	.L583
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 6047              		.loc 1 4024 0
 6048 00a4 8246     		mov	r10, r0
 6049              	.LVL907:
 6050 00a6 DEE7     		b	.L588
 6051              	.LVL908:
 6052              	.L626:
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6053              		.loc 1 4025 0 discriminator 1
 6054 00a8 0225     		movs	r5, #2
 6055              	.LVL909:
 6056 00aa 6575     		strb	r5, [r4, #21]
 6057 00ac 2946     		mov	r1, r5
 6058 00ae 0398     		ldr	r0, [sp, #12]
 6059              	.LVL910:
 6060 00b0 FFF7FEFF 		bl	unlock_fs
 6061              	.LVL911:
 6062 00b4 C3E7     		b	.L580
 6063              	.LVL912:
 6064              	.L627:
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 6065              		.loc 1 4026 0 discriminator 1
 6066 00b6 0125     		movs	r5, #1
 6067              	.LVL913:
 6068 00b8 6575     		strb	r5, [r4, #21]
 6069 00ba 2946     		mov	r1, r5
 6070 00bc 0398     		ldr	r0, [sp, #12]
 6071              	.LVL914:
 6072 00be FFF7FEFF 		bl	unlock_fs
 6073              	.LVL915:
 6074 00c2 BCE7     		b	.L580
 6075              	.LVL916:
 6076              	.L615:
4016:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 6077              		.loc 1 4016 0
 6078 00c4 4FF00209 		mov	r9, #2
 6079              	.LVL917:
 6080              	.L583:
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
 6081              		.loc 1 4033 0
 6082 00c8 E36A     		ldr	r3, [r4, #44]
 6083 00ca C3F80090 		str	r9, [r3]
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 6084              		.loc 1 4034 0
 6085 00ce D945     		cmp	r9, fp
 6086 00d0 00F21781 		bhi	.L617
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6087              		.loc 1 4035 0
 6088 00d4 0023     		movs	r3, #0
 6089 00d6 019A     		ldr	r2, [sp, #4]
 6090 00d8 1360     		str	r3, [r2]
 6091 00da ACE7     		b	.L589
 6092              	.LVL918:
 6093              	.L625:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 226


4043:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
 6094              		.loc 1 4043 0
 6095 00dc 07F1FF38 		add	r8, r7, #-1
 6096 00e0 4146     		mov	r1, r8
 6097 00e2 2046     		mov	r0, r4
 6098 00e4 FFF7FEFF 		bl	clmt_clust
 6099              	.LVL919:
 6100 00e8 0146     		mov	r1, r0
 6101 00ea E061     		str	r0, [r4, #28]
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
 6102              		.loc 1 4044 0
 6103 00ec 039E     		ldr	r6, [sp, #12]
 6104 00ee 3046     		mov	r0, r6
 6105 00f0 FFF7FEFF 		bl	clust2sect
 6106              	.LVL920:
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 6107              		.loc 1 4045 0
 6108 00f4 E0B1     		cbz	r0, .L628
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 6109              		.loc 1 4046 0
 6110 00f6 7189     		ldrh	r1, [r6, #10]
 6111 00f8 0139     		subs	r1, r1, #1
 6112 00fa 01EA5821 		and	r1, r1, r8, lsr #9
 6113 00fe 00EB0108 		add	r8, r0, r1
 6114              	.LVL921:
4047:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6115              		.loc 1 4047 0
 6116 0102 C7F30807 		ubfx	r7, r7, #0, #9
 6117              	.LVL922:
 6118 0106 002F     		cmp	r7, #0
 6119 0108 95D0     		beq	.L589
4047:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6120              		.loc 1 4047 0 is_stmt 0 discriminator 1
 6121 010a 226A     		ldr	r2, [r4, #32]
 6122 010c 9045     		cmp	r8, r2
 6123 010e 92D0     		beq	.L589
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6124              		.loc 1 4050 0 is_stmt 1
 6125 0110 94F91430 		ldrsb	r3, [r4, #20]
 6126 0114 002B     		cmp	r3, #0
 6127 0116 12DB     		blt	.L629
 6128              	.L592:
4055:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6129              		.loc 1 4055 0
 6130 0118 0123     		movs	r3, #1
 6131 011a 4246     		mov	r2, r8
 6132 011c 04F13001 		add	r1, r4, #48
 6133 0120 0398     		ldr	r0, [sp, #12]
 6134 0122 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6135 0124 FFF7FEFF 		bl	disk_read
 6136              	.LVL923:
 6137 0128 E0B9     		cbnz	r0, .L630
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6138              		.loc 1 4057 0
 6139 012a C4F82080 		str	r8, [r4, #32]
 6140 012e 82E7     		b	.L589
 6141              	.LVL924:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 227


 6142              	.L628:
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 6143              		.loc 1 4045 0 discriminator 1
 6144 0130 0225     		movs	r5, #2
 6145              	.LVL925:
 6146 0132 6575     		strb	r5, [r4, #21]
 6147 0134 2946     		mov	r1, r5
 6148 0136 3046     		mov	r0, r6
 6149              	.LVL926:
 6150 0138 FFF7FEFF 		bl	unlock_fs
 6151              	.LVL927:
 6152 013c 7FE7     		b	.L580
 6153              	.LVL928:
 6154              	.L629:
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 6155              		.loc 1 4051 0
 6156 013e 0123     		movs	r3, #1
 6157 0140 04F13001 		add	r1, r4, #48
 6158 0144 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 6159 0146 FFF7FEFF 		bl	disk_write
 6160              	.LVL929:
 6161 014a 20B9     		cbnz	r0, .L631
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6162              		.loc 1 4052 0
 6163 014c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6164 014e 03F07F03 		and	r3, r3, #127
 6165 0152 2375     		strb	r3, [r4, #20]
 6166 0154 E0E7     		b	.L592
 6167              	.L631:
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 6168              		.loc 1 4051 0 discriminator 1
 6169 0156 0125     		movs	r5, #1
 6170              	.LVL930:
 6171 0158 6575     		strb	r5, [r4, #21]
 6172 015a 2946     		mov	r1, r5
 6173 015c 0398     		ldr	r0, [sp, #12]
 6174 015e FFF7FEFF 		bl	unlock_fs
 6175              	.LVL931:
 6176 0162 6CE7     		b	.L580
 6177              	.LVL932:
 6178              	.L630:
4055:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6179              		.loc 1 4055 0 discriminator 1
 6180 0164 0125     		movs	r5, #1
 6181              	.LVL933:
 6182 0166 6575     		strb	r5, [r4, #21]
 6183 0168 2946     		mov	r1, r5
 6184 016a 0398     		ldr	r0, [sp, #12]
 6185 016c FFF7FEFF 		bl	unlock_fs
 6186              	.LVL934:
 6187 0170 65E7     		b	.L580
 6188              	.LVL935:
 6189              	.L581:
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 6190              		.loc 1 4069 0
 6191 0172 E368     		ldr	r3, [r4, #12]
 6192 0174 9E42     		cmp	r6, r3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 228


 6193 0176 04D9     		bls	.L595
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 6194              		.loc 1 4069 0 is_stmt 0 discriminator 1
 6195 0178 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6196 017a 12F0020F 		tst	r2, #2
 6197 017e 00D1     		bne	.L595
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6198              		.loc 1 4070 0 is_stmt 1
 6199 0180 1E46     		mov	r6, r3
 6200              	.LVL936:
 6201              	.L595:
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
 6202              		.loc 1 4072 0
 6203 0182 A369     		ldr	r3, [r4, #24]
 6204              	.LVL937:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6205              		.loc 1 4073 0
 6206 0184 0022     		movs	r2, #0
 6207 0186 A261     		str	r2, [r4, #24]
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 6208              		.loc 1 4074 0
 6209 0188 002E     		cmp	r6, #0
 6210 018a 7BD0     		beq	.L619
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 6211              		.loc 1 4075 0
 6212 018c 039A     		ldr	r2, [sp, #12]
 6213 018e B2F80A90 		ldrh	r9, [r2, #10]
 6214 0192 4FEA4929 		lsl	r9, r9, #9
 6215              	.LVL938:
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 6216              		.loc 1 4076 0
 6217 0196 73B1     		cbz	r3, .L597
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 6218              		.loc 1 4077 0 discriminator 1
 6219 0198 721E     		subs	r2, r6, #1
 6220 019a B2FBF9F2 		udiv	r2, r2, r9
 6221 019e 013B     		subs	r3, r3, #1
 6222              	.LVL939:
 6223 01a0 B3FBF9F1 		udiv	r1, r3, r9
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 6224              		.loc 1 4076 0 discriminator 1
 6225 01a4 8A42     		cmp	r2, r1
 6226 01a6 06D3     		bcc	.L597
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 6227              		.loc 1 4078 0
 6228 01a8 C9F10002 		rsb	r2, r9, #0
 6229 01ac 1340     		ands	r3, r3, r2
 6230              	.LVL940:
 6231 01ae A361     		str	r3, [r4, #24]
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 6232              		.loc 1 4079 0
 6233 01b0 F61A     		subs	r6, r6, r3
 6234              	.LVL941:
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 6235              		.loc 1 4080 0
 6236 01b2 E769     		ldr	r7, [r4, #28]
 6237              	.LVL942:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 229


 6238 01b4 02E0     		b	.L598
 6239              	.LVL943:
 6240              	.L597:
4082:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6241              		.loc 1 4082 0
 6242 01b6 A768     		ldr	r7, [r4, #8]
 6243              	.LVL944:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
 6244              		.loc 1 4084 0
 6245 01b8 17B1     		cbz	r7, .L632
 6246              	.L599:
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6247              		.loc 1 4091 0
 6248 01ba E761     		str	r7, [r4, #28]
 6249              	.L598:
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 6250              		.loc 1 4093 0
 6251 01bc 4FBB     		cbnz	r7, .L602
 6252 01be 62E0     		b	.L596
 6253              	.L632:
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 6254              		.loc 1 4085 0
 6255 01c0 0021     		movs	r1, #0
 6256 01c2 2046     		mov	r0, r4
 6257 01c4 FFF7FEFF 		bl	create_chain
 6258              	.LVL945:
 6259 01c8 0746     		mov	r7, r0
 6260              	.LVL946:
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6261              		.loc 1 4086 0
 6262 01ca 0128     		cmp	r0, #1
 6263 01cc 04D0     		beq	.L633
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 6264              		.loc 1 4087 0
 6265 01ce B0F1FF3F 		cmp	r0, #-1
 6266 01d2 08D0     		beq	.L634
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6267              		.loc 1 4088 0
 6268 01d4 A060     		str	r0, [r4, #8]
 6269 01d6 F0E7     		b	.L599
 6270              	.L633:
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6271              		.loc 1 4086 0 discriminator 1
 6272 01d8 0225     		movs	r5, #2
 6273              	.LVL947:
 6274 01da 6575     		strb	r5, [r4, #21]
 6275 01dc 2946     		mov	r1, r5
 6276 01de 0398     		ldr	r0, [sp, #12]
 6277              	.LVL948:
 6278 01e0 FFF7FEFF 		bl	unlock_fs
 6279              	.LVL949:
 6280 01e4 2BE7     		b	.L580
 6281              	.LVL950:
 6282              	.L634:
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 6283              		.loc 1 4087 0 discriminator 1
 6284 01e6 0125     		movs	r5, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 230


 6285              	.LVL951:
 6286 01e8 6575     		strb	r5, [r4, #21]
 6287 01ea 2946     		mov	r1, r5
 6288 01ec 0398     		ldr	r0, [sp, #12]
 6289              	.LVL952:
 6290 01ee FFF7FEFF 		bl	unlock_fs
 6291              	.LVL953:
 6292 01f2 24E7     		b	.L580
 6293              	.LVL954:
 6294              	.L603:
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6295              		.loc 1 4109 0
 6296 01f4 3946     		mov	r1, r7
 6297 01f6 4046     		mov	r0, r8
 6298 01f8 FFF7FEFF 		bl	get_fat
 6299              	.LVL955:
 6300 01fc 0746     		mov	r7, r0
 6301              	.LVL956:
 6302              	.L605:
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 6303              		.loc 1 4111 0
 6304 01fe B7F1FF3F 		cmp	r7, #-1
 6305 0202 2AD0     		beq	.L635
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6306              		.loc 1 4112 0
 6307 0204 012F     		cmp	r7, #1
 6308 0206 2FD9     		bls	.L607
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6309              		.loc 1 4112 0 is_stmt 0 discriminator 2
 6310 0208 039B     		ldr	r3, [sp, #12]
 6311 020a 9B69     		ldr	r3, [r3, #24]
 6312 020c 9F42     		cmp	r7, r3
 6313 020e 2BD2     		bcs	.L607
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6314              		.loc 1 4113 0 is_stmt 1
 6315 0210 E761     		str	r7, [r4, #28]
 6316              	.LVL957:
 6317              	.L602:
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 6318              		.loc 1 4094 0
 6319 0212 4E45     		cmp	r6, r9
 6320 0214 10D9     		bls	.L604
4095:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6321              		.loc 1 4095 0
 6322 0216 A6EB0906 		sub	r6, r6, r9
 6323              	.LVL958:
 6324 021a A369     		ldr	r3, [r4, #24]
 6325 021c 4B44     		add	r3, r3, r9
 6326 021e A361     		str	r3, [r4, #24]
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 6327              		.loc 1 4097 0
 6328 0220 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6329 0222 13F0020F 		tst	r3, #2
 6330 0226 E5D0     		beq	.L603
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 6331              		.loc 1 4102 0
 6332 0228 3946     		mov	r1, r7
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 231


 6333 022a 4046     		mov	r0, r8
 6334 022c FFF7FEFF 		bl	create_chain
 6335              	.LVL959:
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
 6336              		.loc 1 4103 0
 6337 0230 0746     		mov	r7, r0
 6338 0232 0028     		cmp	r0, #0
 6339 0234 E3D1     		bne	.L605
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6340              		.loc 1 4104 0
 6341 0236 0026     		movs	r6, #0
 6342              	.LVL960:
 6343              	.L604:
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
 6344              		.loc 1 4115 0
 6345 0238 A369     		ldr	r3, [r4, #24]
 6346 023a 3344     		add	r3, r3, r6
 6347 023c A361     		str	r3, [r4, #24]
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
 6348              		.loc 1 4116 0
 6349 023e C6F30803 		ubfx	r3, r6, #0, #9
 6350 0242 002B     		cmp	r3, #0
 6351 0244 40D0     		beq	.L621
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
 6352              		.loc 1 4117 0
 6353 0246 DDF80C80 		ldr	r8, [sp, #12]
 6354 024a 3946     		mov	r1, r7
 6355 024c 4046     		mov	r0, r8
 6356 024e FFF7FEFF 		bl	clust2sect
 6357              	.LVL961:
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 6358              		.loc 1 4118 0
 6359 0252 80B1     		cbz	r0, .L636
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6360              		.loc 1 4119 0
 6361 0254 00EB5627 		add	r7, r0, r6, lsr #9
 6362              	.LVL962:
 6363 0258 15E0     		b	.L596
 6364              	.LVL963:
 6365              	.L635:
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 6366              		.loc 1 4111 0 discriminator 1
 6367 025a 0125     		movs	r5, #1
 6368              	.LVL964:
 6369 025c 6575     		strb	r5, [r4, #21]
 6370 025e 2946     		mov	r1, r5
 6371 0260 0398     		ldr	r0, [sp, #12]
 6372              	.LVL965:
 6373 0262 FFF7FEFF 		bl	unlock_fs
 6374              	.LVL966:
 6375 0266 EAE6     		b	.L580
 6376              	.LVL967:
 6377              	.L607:
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6378              		.loc 1 4112 0 discriminator 3
 6379 0268 0225     		movs	r5, #2
 6380              	.LVL968:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 232


 6381 026a 6575     		strb	r5, [r4, #21]
 6382 026c 2946     		mov	r1, r5
 6383 026e 0398     		ldr	r0, [sp, #12]
 6384              	.LVL969:
 6385 0270 FFF7FEFF 		bl	unlock_fs
 6386              	.LVL970:
 6387 0274 E3E6     		b	.L580
 6388              	.LVL971:
 6389              	.L636:
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 6390              		.loc 1 4118 0 discriminator 1
 6391 0276 0225     		movs	r5, #2
 6392              	.LVL972:
 6393 0278 6575     		strb	r5, [r4, #21]
 6394 027a 2946     		mov	r1, r5
 6395 027c 4046     		mov	r0, r8
 6396              	.LVL973:
 6397 027e FFF7FEFF 		bl	unlock_fs
 6398              	.LVL974:
 6399 0282 DCE6     		b	.L580
 6400              	.LVL975:
 6401              	.L619:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6402              		.loc 1 4073 0
 6403 0284 0027     		movs	r7, #0
 6404              	.LVL976:
 6405              	.L596:
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
 6406              		.loc 1 4123 0
 6407 0286 A369     		ldr	r3, [r4, #24]
 6408 0288 E268     		ldr	r2, [r4, #12]
 6409 028a 9342     		cmp	r3, r2
 6410 028c 04D9     		bls	.L611
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
 6411              		.loc 1 4124 0
 6412 028e E360     		str	r3, [r4, #12]
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6413              		.loc 1 4125 0
 6414 0290 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6415 0292 42F04002 		orr	r2, r2, #64
 6416 0296 2275     		strb	r2, [r4, #20]
 6417              	.L611:
4127:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6418              		.loc 1 4127 0
 6419 0298 C3F30803 		ubfx	r3, r3, #0, #9
 6420 029c 002B     		cmp	r3, #0
 6421 029e 3FF4CAAE 		beq	.L589
4127:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6422              		.loc 1 4127 0 is_stmt 0 discriminator 1
 6423 02a2 226A     		ldr	r2, [r4, #32]
 6424 02a4 9742     		cmp	r7, r2
 6425 02a6 3FF4C6AE 		beq	.L589
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6426              		.loc 1 4130 0 is_stmt 1
 6427 02aa 94F91430 		ldrsb	r3, [r4, #20]
 6428 02ae 002B     		cmp	r3, #0
 6429 02b0 0CDB     		blt	.L637
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 233


 6430              	.L612:
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6431              		.loc 1 4135 0
 6432 02b2 0123     		movs	r3, #1
 6433 02b4 3A46     		mov	r2, r7
 6434 02b6 04F13001 		add	r1, r4, #48
 6435 02ba 0398     		ldr	r0, [sp, #12]
 6436 02bc 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6437 02be FFF7FEFF 		bl	disk_read
 6438              	.LVL977:
 6439 02c2 B8B9     		cbnz	r0, .L638
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6440              		.loc 1 4137 0
 6441 02c4 2762     		str	r7, [r4, #32]
 6442 02c6 B6E6     		b	.L589
 6443              	.LVL978:
 6444              	.L621:
4073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6445              		.loc 1 4073 0
 6446 02c8 0027     		movs	r7, #0
 6447              	.LVL979:
 6448 02ca DCE7     		b	.L596
 6449              	.LVL980:
 6450              	.L637:
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6451              		.loc 1 4131 0
 6452 02cc 0123     		movs	r3, #1
 6453 02ce 04F13001 		add	r1, r4, #48
 6454 02d2 0398     		ldr	r0, [sp, #12]
 6455 02d4 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6456 02d6 FFF7FEFF 		bl	disk_write
 6457              	.LVL981:
 6458 02da 20B9     		cbnz	r0, .L639
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6459              		.loc 1 4132 0
 6460 02dc 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6461 02de 03F07F03 		and	r3, r3, #127
 6462 02e2 2375     		strb	r3, [r4, #20]
 6463 02e4 E5E7     		b	.L612
 6464              	.L639:
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6465              		.loc 1 4131 0 discriminator 1
 6466 02e6 0125     		movs	r5, #1
 6467              	.LVL982:
 6468 02e8 6575     		strb	r5, [r4, #21]
 6469 02ea 2946     		mov	r1, r5
 6470 02ec 0398     		ldr	r0, [sp, #12]
 6471 02ee FFF7FEFF 		bl	unlock_fs
 6472              	.LVL983:
 6473 02f2 A4E6     		b	.L580
 6474              	.LVL984:
 6475              	.L638:
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6476              		.loc 1 4135 0 discriminator 1
 6477 02f4 0125     		movs	r5, #1
 6478              	.LVL985:
 6479 02f6 6575     		strb	r5, [r4, #21]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 234


 6480 02f8 2946     		mov	r1, r5
 6481 02fa 0398     		ldr	r0, [sp, #12]
 6482 02fc FFF7FEFF 		bl	unlock_fs
 6483              	.LVL986:
 6484 0300 9DE6     		b	.L580
 6485              	.LVL987:
 6486              	.L617:
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6487              		.loc 1 4037 0
 6488 0302 1125     		movs	r5, #17
 6489              	.LVL988:
 6490 0304 97E6     		b	.L589
 6491              		.cfi_endproc
 6492              	.LFE187:
 6494              		.section	.text.f_opendir,"ax",%progbits
 6495              		.align	1
 6496              		.global	f_opendir
 6497              		.syntax unified
 6498              		.thumb
 6499              		.thumb_func
 6500              		.fpu fpv5-sp-d16
 6502              	f_opendir:
 6503              	.LFB188:
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6504              		.loc 1 4155 0
 6505              		.cfi_startproc
 6506              		@ args = 0, pretend = 0, frame = 16
 6507              		@ frame_needed = 0, uses_anonymous_args = 0
 6508              	.LVL989:
 6509 0000 30B5     		push	{r4, r5, lr}
 6510              	.LCFI83:
 6511              		.cfi_def_cfa_offset 12
 6512              		.cfi_offset 4, -12
 6513              		.cfi_offset 5, -8
 6514              		.cfi_offset 14, -4
 6515 0002 85B0     		sub	sp, sp, #20
 6516              	.LCFI84:
 6517              		.cfi_def_cfa_offset 32
 6518 0004 0191     		str	r1, [sp, #4]
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6519              		.loc 1 4162 0
 6520 0006 0028     		cmp	r0, #0
 6521 0008 45D0     		beq	.L647
 6522 000a 0546     		mov	r5, r0
 6523              	.LVL990:
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6524              		.loc 1 4166 0
 6525 000c 0022     		movs	r2, #0
 6526 000e 03A9     		add	r1, sp, #12
 6527              	.LVL991:
 6528 0010 01A8     		add	r0, sp, #4
 6529              	.LVL992:
 6530 0012 FFF7FEFF 		bl	find_volume
 6531              	.LVL993:
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
 6532              		.loc 1 4167 0
 6533 0016 0446     		mov	r4, r0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 235


 6534 0018 48B1     		cbz	r0, .L652
 6535              	.LVL994:
 6536              	.L642:
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6537              		.loc 1 4209 0
 6538 001a 0CB1     		cbz	r4, .L646
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6539              		.loc 1 4209 0 is_stmt 0 discriminator 1
 6540 001c 0023     		movs	r3, #0
 6541 001e 2B60     		str	r3, [r5]
 6542              	.L646:
4211:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6543              		.loc 1 4211 0 is_stmt 1
 6544 0020 2146     		mov	r1, r4
 6545 0022 0398     		ldr	r0, [sp, #12]
 6546 0024 FFF7FEFF 		bl	unlock_fs
 6547              	.LVL995:
 6548              	.L641:
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6549              		.loc 1 4212 0
 6550 0028 2046     		mov	r0, r4
 6551 002a 05B0     		add	sp, sp, #20
 6552              	.LCFI85:
 6553              		.cfi_remember_state
 6554              		.cfi_def_cfa_offset 12
 6555              		@ sp needed
 6556 002c 30BD     		pop	{r4, r5, pc}
 6557              	.LVL996:
 6558              	.L652:
 6559              	.LCFI86:
 6560              		.cfi_restore_state
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 6561              		.loc 1 4168 0
 6562 002e 039B     		ldr	r3, [sp, #12]
 6563 0030 2B60     		str	r3, [r5]
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 6564              		.loc 1 4170 0
 6565 0032 0199     		ldr	r1, [sp, #4]
 6566 0034 2846     		mov	r0, r5
 6567              	.LVL997:
 6568 0036 FFF7FEFF 		bl	follow_path
 6569              	.LVL998:
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 6570              		.loc 1 4171 0
 6571 003a 0446     		mov	r4, r0
 6572 003c 68B9     		cbnz	r0, .L643
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 6573              		.loc 1 4172 0
 6574 003e 95F92F30 		ldrsb	r3, [r5, #47]
 6575 0042 002B     		cmp	r3, #0
 6576 0044 08DB     		blt	.L644
4173:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6577              		.loc 1 4173 0
 6578 0046 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 6579 0048 13F0100F 		tst	r3, #16
 6580 004c 09D0     		beq	.L648
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 236


 6581              		.loc 1 4185 0
 6582 004e 296A     		ldr	r1, [r5, #32]
 6583 0050 0398     		ldr	r0, [sp, #12]
 6584              	.LVL999:
 6585 0052 FFF7FEFF 		bl	ld_clust
 6586              	.LVL1000:
 6587 0056 A860     		str	r0, [r5, #8]
 6588              	.L644:
 6589              	.LVL1001:
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
 6590              		.loc 1 4191 0
 6591 0058 2CB1     		cbz	r4, .L653
 6592              	.LVL1002:
 6593              	.L643:
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6594              		.loc 1 4207 0
 6595 005a 042C     		cmp	r4, #4
 6596 005c DDD1     		bne	.L642
 6597 005e 0524     		movs	r4, #5
 6598              	.LVL1003:
 6599 0060 DBE7     		b	.L642
 6600              	.LVL1004:
 6601              	.L648:
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6602              		.loc 1 4188 0
 6603 0062 0524     		movs	r4, #5
 6604 0064 F8E7     		b	.L644
 6605              	.LVL1005:
 6606              	.L653:
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 6607              		.loc 1 4192 0
 6608 0066 039B     		ldr	r3, [sp, #12]
 6609 0068 DB88     		ldrh	r3, [r3, #6]
 6610 006a AB80     		strh	r3, [r5, #4]	@ movhi
4193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6611              		.loc 1 4193 0
 6612 006c 0021     		movs	r1, #0
 6613 006e 2846     		mov	r0, r5
 6614 0070 FFF7FEFF 		bl	dir_sdi
 6615              	.LVL1006:
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
 6616              		.loc 1 4195 0
 6617 0074 0446     		mov	r4, r0
 6618 0076 0028     		cmp	r0, #0
 6619 0078 EFD1     		bne	.L643
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 6620              		.loc 1 4196 0
 6621 007a AB68     		ldr	r3, [r5, #8]
 6622 007c 13B9     		cbnz	r3, .L654
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6623              		.loc 1 4200 0
 6624 007e 0023     		movs	r3, #0
 6625 0080 2B61     		str	r3, [r5, #16]
 6626 0082 EAE7     		b	.L643
 6627              	.L654:
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 6628              		.loc 1 4197 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 237


 6629 0084 0021     		movs	r1, #0
 6630 0086 2846     		mov	r0, r5
 6631              	.LVL1007:
 6632 0088 FFF7FEFF 		bl	inc_lock
 6633              	.LVL1008:
 6634 008c 2861     		str	r0, [r5, #16]
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6635              		.loc 1 4198 0
 6636 008e 0028     		cmp	r0, #0
 6637 0090 E3D1     		bne	.L643
 6638 0092 1224     		movs	r4, #18
 6639 0094 E1E7     		b	.L643
 6640              	.LVL1009:
 6641              	.L647:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6642              		.loc 1 4162 0
 6643 0096 0924     		movs	r4, #9
 6644 0098 C6E7     		b	.L641
 6645              		.cfi_endproc
 6646              	.LFE188:
 6648              		.section	.text.f_closedir,"ax",%progbits
 6649              		.align	1
 6650              		.global	f_closedir
 6651              		.syntax unified
 6652              		.thumb
 6653              		.thumb_func
 6654              		.fpu fpv5-sp-d16
 6656              	f_closedir:
 6657              	.LFB189:
4224:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6658              		.loc 1 4224 0
 6659              		.cfi_startproc
 6660              		@ args = 0, pretend = 0, frame = 8
 6661              		@ frame_needed = 0, uses_anonymous_args = 0
 6662              	.LVL1010:
 6663 0000 30B5     		push	{r4, r5, lr}
 6664              	.LCFI87:
 6665              		.cfi_def_cfa_offset 12
 6666              		.cfi_offset 4, -12
 6667              		.cfi_offset 5, -8
 6668              		.cfi_offset 14, -4
 6669 0002 83B0     		sub	sp, sp, #12
 6670              	.LCFI88:
 6671              		.cfi_def_cfa_offset 24
 6672 0004 0546     		mov	r5, r0
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6673              		.loc 1 4229 0
 6674 0006 01A9     		add	r1, sp, #4
 6675 0008 FFF7FEFF 		bl	validate
 6676              	.LVL1011:
4230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6677              		.loc 1 4230 0
 6678 000c 0446     		mov	r4, r0
 6679 000e 40B9     		cbnz	r0, .L656
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
 6680              		.loc 1 4232 0
 6681 0010 2869     		ldr	r0, [r5, #16]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 238


 6682              	.LVL1012:
 6683 0012 48B9     		cbnz	r0, .L660
 6684              	.L657:
 6685              	.LVL1013:
4235:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6686              		.loc 1 4235 0
 6687 0014 0CB9     		cbnz	r4, .L658
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6688              		.loc 1 4238 0
 6689 0016 0023     		movs	r3, #0
 6690 0018 2B60     		str	r3, [r5]
 6691              	.L658:
4241:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6692              		.loc 1 4241 0
 6693 001a 0021     		movs	r1, #0
 6694 001c 0198     		ldr	r0, [sp, #4]
 6695 001e FFF7FEFF 		bl	unlock_fs
 6696              	.LVL1014:
 6697              	.L656:
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6698              		.loc 1 4245 0
 6699 0022 2046     		mov	r0, r4
 6700 0024 03B0     		add	sp, sp, #12
 6701              	.LCFI89:
 6702              		.cfi_remember_state
 6703              		.cfi_def_cfa_offset 12
 6704              		@ sp needed
 6705 0026 30BD     		pop	{r4, r5, pc}
 6706              	.LVL1015:
 6707              	.L660:
 6708              	.LCFI90:
 6709              		.cfi_restore_state
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6710              		.loc 1 4233 0
 6711 0028 FFF7FEFF 		bl	dec_lock
 6712              	.LVL1016:
 6713 002c 0446     		mov	r4, r0
 6714              	.LVL1017:
 6715 002e F1E7     		b	.L657
 6716              		.cfi_endproc
 6717              	.LFE189:
 6719              		.section	.text.f_readdir,"ax",%progbits
 6720              		.align	1
 6721              		.global	f_readdir
 6722              		.syntax unified
 6723              		.thumb
 6724              		.thumb_func
 6725              		.fpu fpv5-sp-d16
 6727              	f_readdir:
 6728              	.LFB190:
4258:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6729              		.loc 1 4258 0
 6730              		.cfi_startproc
 6731              		@ args = 0, pretend = 0, frame = 8
 6732              		@ frame_needed = 0, uses_anonymous_args = 0
 6733              	.LVL1018:
 6734 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 239


 6735              	.LCFI91:
 6736              		.cfi_def_cfa_offset 16
 6737              		.cfi_offset 4, -16
 6738              		.cfi_offset 5, -12
 6739              		.cfi_offset 6, -8
 6740              		.cfi_offset 14, -4
 6741 0002 82B0     		sub	sp, sp, #8
 6742              	.LCFI92:
 6743              		.cfi_def_cfa_offset 24
 6744 0004 0546     		mov	r5, r0
 6745 0006 0E46     		mov	r6, r1
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6746              		.loc 1 4264 0
 6747 0008 01A9     		add	r1, sp, #4
 6748              	.LVL1019:
 6749 000a FFF7FEFF 		bl	validate
 6750              	.LVL1020:
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 6751              		.loc 1 4265 0
 6752 000e 0446     		mov	r4, r0
 6753 0010 40B9     		cbnz	r0, .L662
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 6754              		.loc 1 4266 0
 6755 0012 76B1     		cbz	r6, .L666
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6756              		.loc 1 4270 0
 6757 0014 0021     		movs	r1, #0
 6758 0016 2846     		mov	r0, r5
 6759              	.LVL1021:
 6760 0018 FFF7FEFF 		bl	dir_read
 6761              	.LVL1022:
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 6762              		.loc 1 4271 0
 6763 001c 0428     		cmp	r0, #4
 6764 001e 00D0     		beq	.L664
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6765              		.loc 1 4270 0
 6766 0020 0446     		mov	r4, r0
 6767              	.L664:
 6768              	.LVL1023:
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 6769              		.loc 1 4272 0
 6770 0022 64B1     		cbz	r4, .L667
 6771              	.LVL1024:
 6772              	.L662:
4280:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6773              		.loc 1 4280 0
 6774 0024 2146     		mov	r1, r4
 6775 0026 0198     		ldr	r0, [sp, #4]
 6776 0028 FFF7FEFF 		bl	unlock_fs
 6777              	.LVL1025:
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6778              		.loc 1 4281 0
 6779 002c 2046     		mov	r0, r4
 6780 002e 02B0     		add	sp, sp, #8
 6781              	.LCFI93:
 6782              		.cfi_remember_state
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 240


 6783              		.cfi_def_cfa_offset 16
 6784              		@ sp needed
 6785 0030 70BD     		pop	{r4, r5, r6, pc}
 6786              	.LVL1026:
 6787              	.L666:
 6788              	.LCFI94:
 6789              		.cfi_restore_state
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6790              		.loc 1 4267 0
 6791 0032 0021     		movs	r1, #0
 6792 0034 2846     		mov	r0, r5
 6793              	.LVL1027:
 6794 0036 FFF7FEFF 		bl	dir_sdi
 6795              	.LVL1028:
 6796 003a 0446     		mov	r4, r0
 6797              	.LVL1029:
 6798 003c F2E7     		b	.L662
 6799              	.L667:
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 6800              		.loc 1 4273 0
 6801 003e 3146     		mov	r1, r6
 6802 0040 2846     		mov	r0, r5
 6803 0042 FFF7FEFF 		bl	get_fileinfo
 6804              	.LVL1030:
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6805              		.loc 1 4274 0
 6806 0046 0021     		movs	r1, #0
 6807 0048 2846     		mov	r0, r5
 6808 004a FFF7FEFF 		bl	dir_next
 6809              	.LVL1031:
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6810              		.loc 1 4275 0
 6811 004e 0428     		cmp	r0, #4
 6812 0050 E8D0     		beq	.L662
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6813              		.loc 1 4274 0
 6814 0052 0446     		mov	r4, r0
 6815 0054 E6E7     		b	.L662
 6816              		.cfi_endproc
 6817              	.LFE190:
 6819              		.section	.text.f_stat,"ax",%progbits
 6820              		.align	1
 6821              		.global	f_stat
 6822              		.syntax unified
 6823              		.thumb
 6824              		.thumb_func
 6825              		.fpu fpv5-sp-d16
 6827              	f_stat:
 6828              	.LFB191:
4346:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6829              		.loc 1 4346 0
 6830              		.cfi_startproc
 6831              		@ args = 0, pretend = 0, frame = 56
 6832              		@ frame_needed = 0, uses_anonymous_args = 0
 6833              	.LVL1032:
 6834 0000 30B5     		push	{r4, r5, lr}
 6835              	.LCFI95:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 241


 6836              		.cfi_def_cfa_offset 12
 6837              		.cfi_offset 4, -12
 6838              		.cfi_offset 5, -8
 6839              		.cfi_offset 14, -4
 6840 0002 8FB0     		sub	sp, sp, #60
 6841              	.LCFI96:
 6842              		.cfi_def_cfa_offset 72
 6843 0004 0190     		str	r0, [sp, #4]
 6844 0006 0D46     		mov	r5, r1
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6845              		.loc 1 4353 0
 6846 0008 0022     		movs	r2, #0
 6847 000a 02A9     		add	r1, sp, #8
 6848              	.LVL1033:
 6849 000c 01A8     		add	r0, sp, #4
 6850              	.LVL1034:
 6851 000e FFF7FEFF 		bl	find_volume
 6852              	.LVL1035:
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
 6853              		.loc 1 4354 0
 6854 0012 0446     		mov	r4, r0
 6855 0014 30B1     		cbz	r0, .L672
 6856              	.LVL1036:
 6857              	.L669:
4367:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6858              		.loc 1 4367 0
 6859 0016 2146     		mov	r1, r4
 6860 0018 0298     		ldr	r0, [sp, #8]
 6861 001a FFF7FEFF 		bl	unlock_fs
 6862              	.LVL1037:
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6863              		.loc 1 4368 0
 6864 001e 2046     		mov	r0, r4
 6865 0020 0FB0     		add	sp, sp, #60
 6866              	.LCFI97:
 6867              		.cfi_remember_state
 6868              		.cfi_def_cfa_offset 12
 6869              		@ sp needed
 6870 0022 30BD     		pop	{r4, r5, pc}
 6871              	.LVL1038:
 6872              	.L672:
 6873              	.LCFI98:
 6874              		.cfi_restore_state
4356:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 6875              		.loc 1 4356 0
 6876 0024 0199     		ldr	r1, [sp, #4]
 6877 0026 02A8     		add	r0, sp, #8
 6878              	.LVL1039:
 6879 0028 FFF7FEFF 		bl	follow_path
 6880              	.LVL1040:
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 6881              		.loc 1 4357 0
 6882 002c 0446     		mov	r4, r0
 6883 002e 0028     		cmp	r0, #0
 6884 0030 F1D1     		bne	.L669
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 6885              		.loc 1 4358 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 242


 6886 0032 9DF93730 		ldrsb	r3, [sp, #55]
 6887 0036 002B     		cmp	r3, #0
 6888 0038 06DB     		blt	.L670
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6889              		.loc 1 4361 0
 6890 003a 002D     		cmp	r5, #0
 6891 003c EBD0     		beq	.L669
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6892              		.loc 1 4361 0 is_stmt 0 discriminator 1
 6893 003e 2946     		mov	r1, r5
 6894 0040 02A8     		add	r0, sp, #8
 6895              	.LVL1041:
 6896 0042 FFF7FEFF 		bl	get_fileinfo
 6897              	.LVL1042:
 6898 0046 E6E7     		b	.L669
 6899              	.LVL1043:
 6900              	.L670:
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
 6901              		.loc 1 4359 0 is_stmt 1
 6902 0048 0624     		movs	r4, #6
 6903 004a E4E7     		b	.L669
 6904              		.cfi_endproc
 6905              	.LFE191:
 6907              		.section	.text.f_getfree,"ax",%progbits
 6908              		.align	1
 6909              		.global	f_getfree
 6910              		.syntax unified
 6911              		.thumb
 6912              		.thumb_func
 6913              		.fpu fpv5-sp-d16
 6915              	f_getfree:
 6916              	.LFB192:
4382:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6917              		.loc 1 4382 0
 6918              		.cfi_startproc
 6919              		@ args = 0, pretend = 0, frame = 32
 6920              		@ frame_needed = 0, uses_anonymous_args = 0
 6921              	.LVL1044:
 6922 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6923              	.LCFI99:
 6924              		.cfi_def_cfa_offset 32
 6925              		.cfi_offset 4, -32
 6926              		.cfi_offset 5, -28
 6927              		.cfi_offset 6, -24
 6928              		.cfi_offset 7, -20
 6929              		.cfi_offset 8, -16
 6930              		.cfi_offset 9, -12
 6931              		.cfi_offset 10, -8
 6932              		.cfi_offset 14, -4
 6933 0004 88B0     		sub	sp, sp, #32
 6934              	.LCFI100:
 6935              		.cfi_def_cfa_offset 64
 6936 0006 0190     		str	r0, [sp, #4]
 6937 0008 8A46     		mov	r10, r1
 6938 000a 1446     		mov	r4, r2
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6939              		.loc 1 4392 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 243


 6940 000c 0022     		movs	r2, #0
 6941              	.LVL1045:
 6942 000e 07A9     		add	r1, sp, #28
 6943              	.LVL1046:
 6944 0010 01A8     		add	r0, sp, #4
 6945              	.LVL1047:
 6946 0012 FFF7FEFF 		bl	find_volume
 6947              	.LVL1048:
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
 6948              		.loc 1 4393 0
 6949 0016 8046     		mov	r8, r0
 6950 0018 0028     		cmp	r0, #0
 6951 001a 5AD1     		bne	.L674
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
 6952              		.loc 1 4394 0
 6953 001c 079B     		ldr	r3, [sp, #28]
 6954 001e 2360     		str	r3, [r4]
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
 6955              		.loc 1 4396 0
 6956 0020 5A69     		ldr	r2, [r3, #20]
 6957 0022 9E69     		ldr	r6, [r3, #24]
 6958 0024 B11E     		subs	r1, r6, #2
 6959 0026 8A42     		cmp	r2, r1
 6960 0028 08D9     		bls	.L689
 6961              	.LVL1049:
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
 6962              		.loc 1 4401 0
 6963 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6964 002c 012A     		cmp	r2, #1
 6965 002e 08D0     		beq	.L690
 6966              	.LVL1050:
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
 6967              		.loc 1 4429 0
 6968 0030 D3F82490 		ldr	r9, [r3, #36]
 6969              	.LVL1051:
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 6970              		.loc 1 4430 0
 6971 0034 0024     		movs	r4, #0
 6972              	.LVL1052:
 6973 0036 2546     		mov	r5, r4
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 6974              		.loc 1 4400 0
 6975 0038 2746     		mov	r7, r4
 6976 003a 32E0     		b	.L685
 6977              	.LVL1053:
 6978              	.L689:
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6979              		.loc 1 4397 0
 6980 003c CAF80020 		str	r2, [r10]
 6981 0040 47E0     		b	.L674
 6982              	.LVL1054:
 6983              	.L690:
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 6984              		.loc 1 4402 0
 6985 0042 0293     		str	r3, [sp, #8]
 6986 0044 0224     		movs	r4, #2
 6987              	.LVL1055:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 244


4400:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 6988              		.loc 1 4400 0
 6989 0046 0027     		movs	r7, #0
 6990 0048 04E0     		b	.L679
 6991              	.LVL1056:
 6992              	.L678:
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6993              		.loc 1 4408 0
 6994 004a 0134     		adds	r4, r4, #1
 6995              	.LVL1057:
 6996 004c 079B     		ldr	r3, [sp, #28]
 6997 004e 9B69     		ldr	r3, [r3, #24]
 6998 0050 9C42     		cmp	r4, r3
 6999 0052 36D2     		bcs	.L677
 7000              	.LVL1058:
 7001              	.L679:
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 7002              		.loc 1 4404 0
 7003 0054 2146     		mov	r1, r4
 7004 0056 02A8     		add	r0, sp, #8
 7005 0058 FFF7FEFF 		bl	get_fat
 7006              	.LVL1059:
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 7007              		.loc 1 4405 0
 7008 005c B0F1FF3F 		cmp	r0, #-1
 7009 0060 2DD0     		beq	.L686
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 7010              		.loc 1 4406 0
 7011 0062 0128     		cmp	r0, #1
 7012 0064 3DD0     		beq	.L687
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 7013              		.loc 1 4407 0
 7014 0066 0028     		cmp	r0, #0
 7015 0068 EFD1     		bne	.L678
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 7016              		.loc 1 4407 0 is_stmt 0 discriminator 1
 7017 006a 0137     		adds	r7, r7, #1
 7018              	.LVL1060:
 7019 006c EDE7     		b	.L678
 7020              	.LVL1061:
 7021              	.L691:
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 7022              		.loc 1 4433 0 is_stmt 1
 7023 006e 09F10105 		add	r5, r9, #1
 7024              	.LVL1062:
 7025 0072 4946     		mov	r1, r9
 7026 0074 0798     		ldr	r0, [sp, #28]
 7027 0076 FFF7FEFF 		bl	move_window
 7028              	.LVL1063:
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
 7029              		.loc 1 4434 0
 7030 007a 8046     		mov	r8, r0
 7031 007c 08BB     		cbnz	r0, .L677
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
 7032              		.loc 1 4435 0
 7033 007e 079C     		ldr	r4, [sp, #28]
 7034              	.LVL1064:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 245


 7035 0080 3434     		adds	r4, r4, #52
 7036              	.LVL1065:
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 7037              		.loc 1 4433 0
 7038 0082 A946     		mov	r9, r5
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7039              		.loc 1 4436 0
 7040 0084 4FF40075 		mov	r5, #512
 7041              	.LVL1066:
 7042 0088 0DE0     		b	.L680
 7043              	.LVL1067:
 7044              	.L692:
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 7045              		.loc 1 4439 0
 7046 008a 2046     		mov	r0, r4
 7047 008c FFF7FEFF 		bl	ld_word
 7048              	.LVL1068:
 7049 0090 00B9     		cbnz	r0, .L682
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 7050              		.loc 1 4439 0 is_stmt 0 discriminator 1
 7051 0092 0137     		adds	r7, r7, #1
 7052              	.LVL1069:
 7053              	.L682:
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
 7054              		.loc 1 4440 0 is_stmt 1
 7055 0094 0234     		adds	r4, r4, #2
 7056              	.LVL1070:
 7057 0096 023D     		subs	r5, r5, #2
 7058              	.LVL1071:
 7059 0098 01E0     		b	.L683
 7060              	.L684:
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7061              		.loc 1 4443 0
 7062 009a 0434     		adds	r4, r4, #4
 7063              	.LVL1072:
 7064 009c 043D     		subs	r5, r5, #4
 7065              	.LVL1073:
 7066              	.L683:
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7067              		.loc 1 4445 0
 7068 009e 013E     		subs	r6, r6, #1
 7069              	.LVL1074:
 7070 00a0 0FD0     		beq	.L677
 7071              	.LVL1075:
 7072              	.L685:
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
 7073              		.loc 1 4432 0
 7074 00a2 002D     		cmp	r5, #0
 7075 00a4 E3D0     		beq	.L691
 7076              	.LVL1076:
 7077              	.L680:
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
 7078              		.loc 1 4438 0
 7079 00a6 079B     		ldr	r3, [sp, #28]
 7080 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7081 00aa 022B     		cmp	r3, #2
 7082 00ac EDD0     		beq	.L692
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 246


4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 7083              		.loc 1 4442 0
 7084 00ae 2046     		mov	r0, r4
 7085 00b0 FFF7FEFF 		bl	ld_dword
 7086              	.LVL1077:
 7087 00b4 30F07043 		bics	r3, r0, #-268435456
 7088 00b8 EFD1     		bne	.L684
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 7089              		.loc 1 4442 0 is_stmt 0 discriminator 1
 7090 00ba 0137     		adds	r7, r7, #1
 7091              	.LVL1078:
 7092 00bc EDE7     		b	.L684
 7093              	.LVL1079:
 7094              	.L686:
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 7095              		.loc 1 4405 0 is_stmt 1
 7096 00be 4FF00108 		mov	r8, #1
 7097              	.LVL1080:
 7098              	.L677:
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 7099              		.loc 1 4448 0
 7100 00c2 CAF80070 		str	r7, [r10]
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
 7101              		.loc 1 4449 0
 7102 00c6 079B     		ldr	r3, [sp, #28]
 7103 00c8 5F61     		str	r7, [r3, #20]
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7104              		.loc 1 4450 0
 7105 00ca 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 7106 00cc 42F00102 		orr	r2, r2, #1
 7107 00d0 1A71     		strb	r2, [r3, #4]
 7108              	.LVL1081:
 7109              	.L674:
4454:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7110              		.loc 1 4454 0
 7111 00d2 4146     		mov	r1, r8
 7112 00d4 0798     		ldr	r0, [sp, #28]
 7113 00d6 FFF7FEFF 		bl	unlock_fs
 7114              	.LVL1082:
4455:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7115              		.loc 1 4455 0
 7116 00da 4046     		mov	r0, r8
 7117 00dc 08B0     		add	sp, sp, #32
 7118              	.LCFI101:
 7119              		.cfi_remember_state
 7120              		.cfi_def_cfa_offset 32
 7121              		@ sp needed
 7122 00de BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 7123              	.LVL1083:
 7124              	.L687:
 7125              	.LCFI102:
 7126              		.cfi_restore_state
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 7127              		.loc 1 4406 0
 7128 00e2 4FF00208 		mov	r8, #2
 7129 00e6 ECE7     		b	.L677
 7130              		.cfi_endproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 247


 7131              	.LFE192:
 7133              		.section	.text.f_truncate,"ax",%progbits
 7134              		.align	1
 7135              		.global	f_truncate
 7136              		.syntax unified
 7137              		.thumb
 7138              		.thumb_func
 7139              		.fpu fpv5-sp-d16
 7141              	f_truncate:
 7142              	.LFB193:
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7143              		.loc 1 4467 0
 7144              		.cfi_startproc
 7145              		@ args = 0, pretend = 0, frame = 8
 7146              		@ frame_needed = 0, uses_anonymous_args = 0
 7147              	.LVL1084:
 7148 0000 30B5     		push	{r4, r5, lr}
 7149              	.LCFI103:
 7150              		.cfi_def_cfa_offset 12
 7151              		.cfi_offset 4, -12
 7152              		.cfi_offset 5, -8
 7153              		.cfi_offset 14, -4
 7154 0002 83B0     		sub	sp, sp, #12
 7155              	.LCFI104:
 7156              		.cfi_def_cfa_offset 24
 7157 0004 0546     		mov	r5, r0
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 7158              		.loc 1 4473 0
 7159 0006 01A9     		add	r1, sp, #4
 7160 0008 FFF7FEFF 		bl	validate
 7161              	.LVL1085:
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 7162              		.loc 1 4474 0
 7163 000c 0446     		mov	r4, r0
 7164 000e 18BB     		cbnz	r0, .L694
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 7165              		.loc 1 4474 0 is_stmt 0 discriminator 2
 7166 0010 6C7D     		ldrb	r4, [r5, #21]	@ zero_extendqisi2
 7167              	.LVL1086:
 7168 0012 0CBB     		cbnz	r4, .L694
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7169              		.loc 1 4475 0 is_stmt 1
 7170 0014 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7171 0016 13F0020F 		tst	r3, #2
 7172 001a 24D0     		beq	.L708
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 7173              		.loc 1 4477 0
 7174 001c AB69     		ldr	r3, [r5, #24]
 7175 001e EA68     		ldr	r2, [r5, #12]
 7176 0020 9342     		cmp	r3, r2
 7177 0022 14D2     		bcs	.L698
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 7178              		.loc 1 4478 0
 7179 0024 2BBB     		cbnz	r3, .L699
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
 7180              		.loc 1 4479 0
 7181 0026 0022     		movs	r2, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 248


 7182 0028 A968     		ldr	r1, [r5, #8]
 7183 002a 2846     		mov	r0, r5
 7184 002c FFF7FEFF 		bl	remove_chain
 7185              	.LVL1087:
 7186 0030 0446     		mov	r4, r0
 7187              	.LVL1088:
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
 7188              		.loc 1 4480 0
 7189 0032 0023     		movs	r3, #0
 7190 0034 AB60     		str	r3, [r5, #8]
 7191              	.L700:
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
 7192              		.loc 1 4490 0
 7193 0036 AB69     		ldr	r3, [r5, #24]
 7194 0038 EB60     		str	r3, [r5, #12]
4491:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 7195              		.loc 1 4491 0
 7196 003a 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7197 003c 43F04003 		orr	r3, r3, #64
 7198 0040 2B75     		strb	r3, [r5, #20]
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 7199              		.loc 1 4493 0
 7200 0042 14B9     		cbnz	r4, .L703
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 7201              		.loc 1 4493 0 is_stmt 0 discriminator 1
 7202 0044 13F0800F 		tst	r3, #128
 7203 0048 2DD1     		bne	.L709
 7204              	.LVL1089:
 7205              	.L703:
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7206              		.loc 1 4501 0 is_stmt 1
 7207 004a 002C     		cmp	r4, #0
 7208 004c 3BD1     		bne	.L710
 7209              	.L698:
4504:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7210              		.loc 1 4504 0
 7211 004e 2146     		mov	r1, r4
 7212 0050 0198     		ldr	r0, [sp, #4]
 7213 0052 FFF7FEFF 		bl	unlock_fs
 7214              	.LVL1090:
 7215 0056 03E0     		b	.L696
 7216              	.LVL1091:
 7217              	.L694:
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 7218              		.loc 1 4474 0 discriminator 3
 7219 0058 2146     		mov	r1, r4
 7220 005a 0198     		ldr	r0, [sp, #4]
 7221 005c FFF7FEFF 		bl	unlock_fs
 7222              	.LVL1092:
 7223              	.L696:
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7224              		.loc 1 4505 0
 7225 0060 2046     		mov	r0, r4
 7226 0062 03B0     		add	sp, sp, #12
 7227              	.LCFI105:
 7228              		.cfi_remember_state
 7229              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 249


 7230              		@ sp needed
 7231 0064 30BD     		pop	{r4, r5, pc}
 7232              	.LVL1093:
 7233              	.L708:
 7234              	.LCFI106:
 7235              		.cfi_restore_state
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7236              		.loc 1 4475 0 discriminator 1
 7237 0066 0721     		movs	r1, #7
 7238 0068 0198     		ldr	r0, [sp, #4]
 7239 006a FFF7FEFF 		bl	unlock_fs
 7240              	.LVL1094:
 7241 006e 0724     		movs	r4, #7
 7242              	.LVL1095:
 7243 0070 F6E7     		b	.L696
 7244              	.LVL1096:
 7245              	.L699:
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 7246              		.loc 1 4482 0
 7247 0072 E969     		ldr	r1, [r5, #28]
 7248 0074 2846     		mov	r0, r5
 7249 0076 FFF7FEFF 		bl	get_fat
 7250              	.LVL1097:
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 7251              		.loc 1 4484 0
 7252 007a B0F1FF3F 		cmp	r0, #-1
 7253 007e 0ED0     		beq	.L711
 7254              	.L701:
 7255              	.LVL1098:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 7256              		.loc 1 4485 0
 7257 0080 0128     		cmp	r0, #1
 7258 0082 0ED0     		beq	.L712
 7259              	.LVL1099:
 7260              	.L702:
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 7261              		.loc 1 4486 0
 7262 0084 002C     		cmp	r4, #0
 7263 0086 D6D1     		bne	.L700
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 7264              		.loc 1 4486 0 is_stmt 0 discriminator 1
 7265 0088 019B     		ldr	r3, [sp, #4]
 7266 008a 9B69     		ldr	r3, [r3, #24]
 7267 008c 9842     		cmp	r0, r3
 7268 008e D2D2     		bcs	.L700
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7269              		.loc 1 4487 0 is_stmt 1
 7270 0090 EA69     		ldr	r2, [r5, #28]
 7271 0092 0146     		mov	r1, r0
 7272 0094 2846     		mov	r0, r5
 7273              	.LVL1100:
 7274 0096 FFF7FEFF 		bl	remove_chain
 7275              	.LVL1101:
 7276 009a 0446     		mov	r4, r0
 7277              	.LVL1102:
 7278 009c CBE7     		b	.L700
 7279              	.LVL1103:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 250


 7280              	.L711:
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 7281              		.loc 1 4484 0
 7282 009e 0124     		movs	r4, #1
 7283 00a0 EEE7     		b	.L701
 7284              	.LVL1104:
 7285              	.L712:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 7286              		.loc 1 4485 0
 7287 00a2 0224     		movs	r4, #2
 7288              	.LVL1105:
 7289 00a4 EEE7     		b	.L702
 7290              	.LVL1106:
 7291              	.L709:
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 7292              		.loc 1 4494 0
 7293 00a6 0123     		movs	r3, #1
 7294 00a8 2A6A     		ldr	r2, [r5, #32]
 7295 00aa 05F13001 		add	r1, r5, #48
 7296 00ae 0198     		ldr	r0, [sp, #4]
 7297 00b0 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 7298 00b2 FFF7FEFF 		bl	disk_write
 7299              	.LVL1107:
 7300 00b6 20B9     		cbnz	r0, .L706
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7301              		.loc 1 4497 0
 7302 00b8 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 7303 00ba 03F07F03 		and	r3, r3, #127
 7304 00be 2B75     		strb	r3, [r5, #20]
 7305 00c0 C3E7     		b	.L703
 7306              	.L706:
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7307              		.loc 1 4495 0
 7308 00c2 0124     		movs	r4, #1
 7309              	.LVL1108:
 7310 00c4 C1E7     		b	.L703
 7311              	.LVL1109:
 7312              	.L710:
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7313              		.loc 1 4501 0 discriminator 1
 7314 00c6 6C75     		strb	r4, [r5, #21]
 7315 00c8 2146     		mov	r1, r4
 7316 00ca 0198     		ldr	r0, [sp, #4]
 7317 00cc FFF7FEFF 		bl	unlock_fs
 7318              	.LVL1110:
 7319 00d0 C6E7     		b	.L696
 7320              		.cfi_endproc
 7321              	.LFE193:
 7323              		.section	.text.f_unlink,"ax",%progbits
 7324              		.align	1
 7325              		.global	f_unlink
 7326              		.syntax unified
 7327              		.thumb
 7328              		.thumb_func
 7329              		.fpu fpv5-sp-d16
 7331              	f_unlink:
 7332              	.LFB194:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 251


4517:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7333              		.loc 1 4517 0
 7334              		.cfi_startproc
 7335              		@ args = 0, pretend = 0, frame = 112
 7336              		@ frame_needed = 0, uses_anonymous_args = 0
 7337              	.LVL1111:
 7338 0000 70B5     		push	{r4, r5, r6, lr}
 7339              	.LCFI107:
 7340              		.cfi_def_cfa_offset 16
 7341              		.cfi_offset 4, -16
 7342              		.cfi_offset 5, -12
 7343              		.cfi_offset 6, -8
 7344              		.cfi_offset 14, -4
 7345 0002 9CB0     		sub	sp, sp, #112
 7346              	.LCFI108:
 7347              		.cfi_def_cfa_offset 128
 7348 0004 0190     		str	r0, [sp, #4]
 7349              	.LVL1112:
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 7350              		.loc 1 4529 0
 7351 0006 0222     		movs	r2, #2
 7352 0008 03A9     		add	r1, sp, #12
 7353 000a 01A8     		add	r0, sp, #4
 7354              	.LVL1113:
 7355 000c FFF7FEFF 		bl	find_volume
 7356              	.LVL1114:
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7357              		.loc 1 4530 0
 7358 0010 039B     		ldr	r3, [sp, #12]
 7359 0012 1093     		str	r3, [sp, #64]
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7360              		.loc 1 4531 0
 7361 0014 0446     		mov	r4, r0
 7362 0016 30B1     		cbz	r0, .L725
 7363              	.LVL1115:
 7364              	.L714:
4599:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7365              		.loc 1 4599 0
 7366 0018 2146     		mov	r1, r4
 7367 001a 0398     		ldr	r0, [sp, #12]
 7368 001c FFF7FEFF 		bl	unlock_fs
 7369              	.LVL1116:
4600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7370              		.loc 1 4600 0
 7371 0020 2046     		mov	r0, r4
 7372 0022 1CB0     		add	sp, sp, #112
 7373              	.LCFI109:
 7374              		.cfi_remember_state
 7375              		.cfi_def_cfa_offset 16
 7376              		@ sp needed
 7377 0024 70BD     		pop	{r4, r5, r6, pc}
 7378              	.LVL1117:
 7379              	.L725:
 7380              	.LCFI110:
 7381              		.cfi_restore_state
4533:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
 7382              		.loc 1 4533 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 252


 7383 0026 0199     		ldr	r1, [sp, #4]
 7384 0028 10A8     		add	r0, sp, #64
 7385              	.LVL1118:
 7386 002a FFF7FEFF 		bl	follow_path
 7387              	.LVL1119:
4538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7388              		.loc 1 4538 0
 7389 002e 0446     		mov	r4, r0
 7390 0030 20B9     		cbnz	r0, .L715
4538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7391              		.loc 1 4538 0 is_stmt 0 discriminator 1
 7392 0032 0221     		movs	r1, #2
 7393 0034 10A8     		add	r0, sp, #64
 7394              	.LVL1120:
 7395 0036 FFF7FEFF 		bl	chk_lock
 7396              	.LVL1121:
 7397 003a 0446     		mov	r4, r0
 7398              	.LVL1122:
 7399              	.L715:
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 7400              		.loc 1 4540 0 is_stmt 1
 7401 003c 002C     		cmp	r4, #0
 7402 003e EBD1     		bne	.L714
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 7403              		.loc 1 4541 0
 7404 0040 9DF96F30 		ldrsb	r3, [sp, #111]
 7405 0044 002B     		cmp	r3, #0
 7406 0046 23DB     		blt	.L720
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 7407              		.loc 1 4544 0
 7408 0048 9DF84630 		ldrb	r3, [sp, #70]	@ zero_extendqisi2
 7409 004c 13F0010F 		tst	r3, #1
 7410 0050 20D1     		bne	.L721
 7411              	.LVL1123:
 7412              	.L716:
4548:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7413              		.loc 1 4548 0
 7414 0052 0CBB     		cbnz	r4, .L722
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7415              		.loc 1 4558 0
 7416 0054 039E     		ldr	r6, [sp, #12]
 7417 0056 1899     		ldr	r1, [sp, #96]
 7418 0058 3046     		mov	r0, r6
 7419 005a FFF7FEFF 		bl	ld_clust
 7420              	.LVL1124:
 7421 005e 0546     		mov	r5, r0
 7422              	.LVL1125:
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 7423              		.loc 1 4560 0
 7424 0060 9DF84630 		ldrb	r3, [sp, #70]	@ zero_extendqisi2
 7425 0064 13F0100F 		tst	r3, #16
 7426 0068 17D0     		beq	.L717
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
 7427              		.loc 1 4567 0
 7428 006a 0496     		str	r6, [sp, #16]
4568:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7429              		.loc 1 4568 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 253


 7430 006c 0690     		str	r0, [sp, #24]
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 7431              		.loc 1 4575 0
 7432 006e 0021     		movs	r1, #0
 7433 0070 04A8     		add	r0, sp, #16
 7434              	.LVL1126:
 7435 0072 FFF7FEFF 		bl	dir_sdi
 7436              	.LVL1127:
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
 7437              		.loc 1 4576 0
 7438 0076 0446     		mov	r4, r0
 7439 0078 78B9     		cbnz	r0, .L717
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 7440              		.loc 1 4577 0
 7441 007a 0021     		movs	r1, #0
 7442 007c 04A8     		add	r0, sp, #16
 7443              	.LVL1128:
 7444 007e FFF7FEFF 		bl	dir_read
 7445              	.LVL1129:
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 7446              		.loc 1 4578 0
 7447 0082 0346     		mov	r3, r0
 7448 0084 00B9     		cbnz	r0, .L718
 7449 0086 0723     		movs	r3, #7
 7450              	.L718:
 7451              	.LVL1130:
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7452              		.loc 1 4579 0
 7453 0088 042B     		cmp	r3, #4
 7454 008a 06D0     		beq	.L717
 7455 008c 1C46     		mov	r4, r3
 7456 008e 04E0     		b	.L717
 7457              	.LVL1131:
 7458              	.L720:
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7459              		.loc 1 4542 0
 7460 0090 0624     		movs	r4, #6
 7461              	.LVL1132:
 7462 0092 DEE7     		b	.L716
 7463              	.LVL1133:
 7464              	.L721:
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7465              		.loc 1 4545 0
 7466 0094 0724     		movs	r4, #7
 7467              	.LVL1134:
 7468 0096 DCE7     		b	.L716
 7469              	.LVL1135:
 7470              	.L722:
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 7471              		.loc 1 4520 0
 7472 0098 0025     		movs	r5, #0
 7473              	.LVL1136:
 7474              	.L717:
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
 7475              		.loc 1 4584 0
 7476 009a 002C     		cmp	r4, #0
 7477 009c BCD1     		bne	.L714
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 254


4585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
 7478              		.loc 1 4585 0
 7479 009e 10A8     		add	r0, sp, #64
 7480 00a0 FFF7FEFF 		bl	dir_remove
 7481              	.LVL1137:
4586:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7482              		.loc 1 4586 0
 7483 00a4 0446     		mov	r4, r0
 7484 00a6 B0FA80F0 		clz	r0, r0
 7485              	.LVL1138:
 7486 00aa 4009     		lsrs	r0, r0, #5
 7487 00ac 002D     		cmp	r5, #0
 7488 00ae 08BF     		it	eq
 7489 00b0 0020     		moveq	r0, #0
 7490 00b2 30B9     		cbnz	r0, .L726
 7491              	.L719:
 7492              	.LVL1139:
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7493              		.loc 1 4593 0
 7494 00b4 002C     		cmp	r4, #0
 7495 00b6 AFD1     		bne	.L714
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7496              		.loc 1 4593 0 is_stmt 0 discriminator 1
 7497 00b8 0398     		ldr	r0, [sp, #12]
 7498 00ba FFF7FEFF 		bl	sync_fs
 7499              	.LVL1140:
 7500 00be 0446     		mov	r4, r0
 7501              	.LVL1141:
 7502 00c0 AAE7     		b	.L714
 7503              	.LVL1142:
 7504              	.L726:
4590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7505              		.loc 1 4590 0 is_stmt 1
 7506 00c2 0022     		movs	r2, #0
 7507 00c4 2946     		mov	r1, r5
 7508 00c6 10A8     		add	r0, sp, #64
 7509 00c8 FFF7FEFF 		bl	remove_chain
 7510              	.LVL1143:
 7511 00cc 0446     		mov	r4, r0
 7512              	.LVL1144:
 7513 00ce F1E7     		b	.L719
 7514              		.cfi_endproc
 7515              	.LFE194:
 7517              		.section	.text.f_mkdir,"ax",%progbits
 7518              		.align	1
 7519              		.global	f_mkdir
 7520              		.syntax unified
 7521              		.thumb
 7522              		.thumb_func
 7523              		.fpu fpv5-sp-d16
 7525              	f_mkdir:
 7526              	.LFB195:
4612:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7527              		.loc 1 4612 0
 7528              		.cfi_startproc
 7529              		@ args = 0, pretend = 0, frame = 64
 7530              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 255


 7531              	.LVL1145:
 7532 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7533              	.LCFI111:
 7534              		.cfi_def_cfa_offset 36
 7535              		.cfi_offset 4, -36
 7536              		.cfi_offset 5, -32
 7537              		.cfi_offset 6, -28
 7538              		.cfi_offset 7, -24
 7539              		.cfi_offset 8, -20
 7540              		.cfi_offset 9, -16
 7541              		.cfi_offset 10, -12
 7542              		.cfi_offset 11, -8
 7543              		.cfi_offset 14, -4
 7544 0004 91B0     		sub	sp, sp, #68
 7545              	.LCFI112:
 7546              		.cfi_def_cfa_offset 104
 7547 0006 0190     		str	r0, [sp, #4]
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 7548              		.loc 1 4623 0
 7549 0008 0222     		movs	r2, #2
 7550 000a 03A9     		add	r1, sp, #12
 7551 000c 01A8     		add	r0, sp, #4
 7552              	.LVL1146:
 7553 000e FFF7FEFF 		bl	find_volume
 7554              	.LVL1147:
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7555              		.loc 1 4624 0
 7556 0012 039B     		ldr	r3, [sp, #12]
 7557 0014 0493     		str	r3, [sp, #16]
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7558              		.loc 1 4625 0
 7559 0016 0446     		mov	r4, r0
 7560 0018 38B1     		cbz	r0, .L747
 7561              	.LVL1148:
 7562              	.L728:
4696:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7563              		.loc 1 4696 0
 7564 001a 2146     		mov	r1, r4
 7565 001c 0398     		ldr	r0, [sp, #12]
 7566 001e FFF7FEFF 		bl	unlock_fs
 7567              	.LVL1149:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7568              		.loc 1 4697 0
 7569 0022 2046     		mov	r0, r4
 7570 0024 11B0     		add	sp, sp, #68
 7571              	.LCFI113:
 7572              		.cfi_remember_state
 7573              		.cfi_def_cfa_offset 36
 7574              		@ sp needed
 7575 0026 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7576              	.LVL1150:
 7577              	.L747:
 7578              	.LCFI114:
 7579              		.cfi_restore_state
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 7580              		.loc 1 4627 0
 7581 002a 0199     		ldr	r1, [sp, #4]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 256


 7582 002c 04A8     		add	r0, sp, #16
 7583              	.LVL1151:
 7584 002e FFF7FEFF 		bl	follow_path
 7585              	.LVL1152:
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 7586              		.loc 1 4628 0
 7587 0032 0346     		mov	r3, r0
 7588 0034 00B9     		cbnz	r0, .L729
 7589 0036 0823     		movs	r3, #8
 7590              	.L729:
 7591              	.LVL1153:
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 7592              		.loc 1 4632 0
 7593 0038 042B     		cmp	r3, #4
 7594 003a 01D0     		beq	.L748
 7595 003c 1C46     		mov	r4, r3
 7596 003e ECE7     		b	.L728
 7597              	.L748:
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 7598              		.loc 1 4633 0
 7599 0040 0021     		movs	r1, #0
 7600 0042 04A8     		add	r0, sp, #16
 7601 0044 FFF7FEFF 		bl	create_chain
 7602              	.LVL1154:
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 7603              		.loc 1 4634 0
 7604 0048 039A     		ldr	r2, [sp, #12]
 7605 004a 5389     		ldrh	r3, [r2, #10]
 7606 004c 5B02     		lsls	r3, r3, #9
 7607 004e 0793     		str	r3, [sp, #28]
 7608              	.LVL1155:
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 7609              		.loc 1 4636 0
 7610 0050 8046     		mov	r8, r0
 7611 0052 00B9     		cbnz	r0, .L730
 7612 0054 0724     		movs	r4, #7
 7613              	.L730:
 7614              	.LVL1156:
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7615              		.loc 1 4637 0
 7616 0056 B8F1010F 		cmp	r8, #1
 7617 005a 11D0     		beq	.L749
 7618              	.LVL1157:
 7619              	.L731:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 7620              		.loc 1 4638 0
 7621 005c B8F1FF3F 		cmp	r8, #-1
 7622 0060 10D0     		beq	.L750
 7623              	.LVL1158:
 7624              	.L732:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7625              		.loc 1 4639 0
 7626 0062 8CB1     		cbz	r4, .L751
 7627              	.LVL1159:
 7628              	.L733:
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 7629              		.loc 1 4640 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 257


 7630 0064 FFF7FEFF 		bl	get_fattime
 7631              	.LVL1160:
 7632 0068 8246     		mov	r10, r0
 7633              	.LVL1161:
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
 7634              		.loc 1 4641 0
 7635 006a 94B1     		cbz	r4, .L752
 7636              	.LVL1162:
 7637              	.L734:
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
 7638              		.loc 1 4664 0
 7639 006c 002C     		cmp	r4, #0
 7640 006e 62D0     		beq	.L753
 7641              	.L738:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7642              		.loc 1 4667 0
 7643 0070 002C     		cmp	r4, #0
 7644 0072 65D0     		beq	.L754
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7645              		.loc 1 4690 0
 7646 0074 0022     		movs	r2, #0
 7647 0076 4146     		mov	r1, r8
 7648 0078 04A8     		add	r0, sp, #16
 7649 007a FFF7FEFF 		bl	remove_chain
 7650              	.LVL1163:
 7651 007e CCE7     		b	.L728
 7652              	.LVL1164:
 7653              	.L749:
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7654              		.loc 1 4637 0
 7655 0080 0224     		movs	r4, #2
 7656              	.LVL1165:
 7657 0082 EBE7     		b	.L731
 7658              	.LVL1166:
 7659              	.L750:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 7660              		.loc 1 4638 0
 7661 0084 0124     		movs	r4, #1
 7662              	.LVL1167:
 7663 0086 ECE7     		b	.L732
 7664              	.LVL1168:
 7665              	.L751:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7666              		.loc 1 4639 0 discriminator 1
 7667 0088 1046     		mov	r0, r2
 7668              	.LVL1169:
 7669 008a FFF7FEFF 		bl	sync_window
 7670              	.LVL1170:
 7671 008e 0446     		mov	r4, r0
 7672              	.LVL1171:
 7673 0090 E8E7     		b	.L733
 7674              	.LVL1172:
 7675              	.L752:
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
 7676              		.loc 1 4642 0
 7677 0092 039D     		ldr	r5, [sp, #12]
 7678 0094 4146     		mov	r1, r8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 258


 7679 0096 2846     		mov	r0, r5
 7680              	.LVL1173:
 7681 0098 FFF7FEFF 		bl	clust2sect
 7682              	.LVL1174:
 7683 009c 0646     		mov	r6, r0
 7684              	.LVL1175:
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
 7685              		.loc 1 4643 0
 7686 009e 05F13409 		add	r9, r5, #52
 7687              	.LVL1176:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 7688              		.loc 1 4644 0
 7689 00a2 4FF40072 		mov	r2, #512
 7690 00a6 0021     		movs	r1, #0
 7691 00a8 4846     		mov	r0, r9
 7692              	.LVL1177:
 7693 00aa FFF7FEFF 		bl	mem_set
 7694              	.LVL1178:
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
 7695              		.loc 1 4646 0
 7696 00ae 0B22     		movs	r2, #11
 7697 00b0 2021     		movs	r1, #32
 7698 00b2 4846     		mov	r0, r9
 7699 00b4 FFF7FEFF 		bl	mem_set
 7700              	.LVL1179:
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 7701              		.loc 1 4647 0
 7702 00b8 4FF02E0B 		mov	fp, #46
 7703 00bc 85F834B0 		strb	fp, [r5, #52]
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 7704              		.loc 1 4648 0
 7705 00c0 1023     		movs	r3, #16
 7706 00c2 85F83F30 		strb	r3, [r5, #63]
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
 7707              		.loc 1 4649 0
 7708 00c6 5146     		mov	r1, r10
 7709 00c8 05F14A00 		add	r0, r5, #74
 7710 00cc FFF7FEFF 		bl	st_dword
 7711              	.LVL1180:
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
 7712              		.loc 1 4650 0
 7713 00d0 4246     		mov	r2, r8
 7714 00d2 4946     		mov	r1, r9
 7715 00d4 0398     		ldr	r0, [sp, #12]
 7716 00d6 FFF7FEFF 		bl	st_clust
 7717              	.LVL1181:
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 7718              		.loc 1 4651 0
 7719 00da 05F15407 		add	r7, r5, #84
 7720 00de 2022     		movs	r2, #32
 7721 00e0 4946     		mov	r1, r9
 7722 00e2 3846     		mov	r0, r7
 7723 00e4 FFF7FEFF 		bl	mem_cpy
 7724              	.LVL1182:
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 7725              		.loc 1 4652 0
 7726 00e8 85F855B0 		strb	fp, [r5, #85]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 259


 7727 00ec 069A     		ldr	r2, [sp, #24]
 7728              	.LVL1183:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7729              		.loc 1 4653 0
 7730 00ee 0398     		ldr	r0, [sp, #12]
 7731 00f0 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 7732 00f2 032B     		cmp	r3, #3
 7733 00f4 1AD0     		beq	.L755
 7734              	.LVL1184:
 7735              	.L735:
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7736              		.loc 1 4654 0
 7737 00f6 3946     		mov	r1, r7
 7738 00f8 FFF7FEFF 		bl	st_clust
 7739              	.LVL1185:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7740              		.loc 1 4656 0
 7741 00fc 039B     		ldr	r3, [sp, #12]
 7742 00fe 5D89     		ldrh	r5, [r3, #10]
 7743              	.LVL1186:
 7744              	.L736:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7745              		.loc 1 4656 0 is_stmt 0 discriminator 1
 7746 0100 002D     		cmp	r5, #0
 7747 0102 B3D0     		beq	.L734
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7748              		.loc 1 4657 0 is_stmt 1
 7749 0104 039B     		ldr	r3, [sp, #12]
 7750 0106 771C     		adds	r7, r6, #1
 7751              	.LVL1187:
 7752 0108 1E63     		str	r6, [r3, #48]
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
 7753              		.loc 1 4658 0
 7754 010a 0122     		movs	r2, #1
 7755 010c DA70     		strb	r2, [r3, #3]
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 7756              		.loc 1 4659 0
 7757 010e 0398     		ldr	r0, [sp, #12]
 7758 0110 FFF7FEFF 		bl	sync_window
 7759              	.LVL1188:
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
 7760              		.loc 1 4660 0
 7761 0114 0446     		mov	r4, r0
 7762 0116 0028     		cmp	r0, #0
 7763 0118 A8D1     		bne	.L734
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7764              		.loc 1 4661 0 discriminator 2
 7765 011a 4FF40072 		mov	r2, #512
 7766 011e 0021     		movs	r1, #0
 7767 0120 4846     		mov	r0, r9
 7768              	.LVL1189:
 7769 0122 FFF7FEFF 		bl	mem_set
 7770              	.LVL1190:
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7771              		.loc 1 4656 0 discriminator 2
 7772 0126 013D     		subs	r5, r5, #1
 7773              	.LVL1191:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 260


4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7774              		.loc 1 4657 0 discriminator 2
 7775 0128 3E46     		mov	r6, r7
 7776 012a E9E7     		b	.L736
 7777              	.LVL1192:
 7778              	.L755:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7779              		.loc 1 4653 0 discriminator 1
 7780 012c 836A     		ldr	r3, [r0, #40]
 7781 012e 9A42     		cmp	r2, r3
 7782 0130 E1D1     		bne	.L735
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7783              		.loc 1 4653 0 is_stmt 0
 7784 0132 0022     		movs	r2, #0
 7785              	.LVL1193:
 7786 0134 DFE7     		b	.L735
 7787              	.LVL1194:
 7788              	.L753:
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7789              		.loc 1 4665 0 is_stmt 1
 7790 0136 04A8     		add	r0, sp, #16
 7791 0138 FFF7FEFF 		bl	dir_register
 7792              	.LVL1195:
 7793 013c 0446     		mov	r4, r0
 7794              	.LVL1196:
 7795 013e 97E7     		b	.L738
 7796              	.L754:
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 7797              		.loc 1 4680 0
 7798 0140 0C9C     		ldr	r4, [sp, #48]
 7799              	.LVL1197:
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
 7800              		.loc 1 4681 0
 7801 0142 5146     		mov	r1, r10
 7802 0144 04F11600 		add	r0, r4, #22
 7803 0148 FFF7FEFF 		bl	st_dword
 7804              	.LVL1198:
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 7805              		.loc 1 4682 0
 7806 014c 4246     		mov	r2, r8
 7807 014e 2146     		mov	r1, r4
 7808 0150 0398     		ldr	r0, [sp, #12]
 7809 0152 FFF7FEFF 		bl	st_clust
 7810              	.LVL1199:
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7811              		.loc 1 4683 0
 7812 0156 1023     		movs	r3, #16
 7813 0158 E372     		strb	r3, [r4, #11]
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7814              		.loc 1 4684 0
 7815 015a 0122     		movs	r2, #1
 7816 015c 039B     		ldr	r3, [sp, #12]
 7817 015e DA70     		strb	r2, [r3, #3]
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7818              		.loc 1 4687 0
 7819 0160 0398     		ldr	r0, [sp, #12]
 7820 0162 FFF7FEFF 		bl	sync_fs
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 261


 7821              	.LVL1200:
 7822 0166 0446     		mov	r4, r0
 7823              	.LVL1201:
 7824 0168 57E7     		b	.L728
 7825              		.cfi_endproc
 7826              	.LFE195:
 7828              		.section	.text.f_rename,"ax",%progbits
 7829              		.align	1
 7830              		.global	f_rename
 7831              		.syntax unified
 7832              		.thumb
 7833              		.thumb_func
 7834              		.fpu fpv5-sp-d16
 7836              	f_rename:
 7837              	.LFB196:
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7838              		.loc 1 4710 0
 7839              		.cfi_startproc
 7840              		@ args = 0, pretend = 0, frame = 136
 7841              		@ frame_needed = 0, uses_anonymous_args = 0
 7842              	.LVL1202:
 7843 0000 30B5     		push	{r4, r5, lr}
 7844              	.LCFI115:
 7845              		.cfi_def_cfa_offset 12
 7846              		.cfi_offset 4, -12
 7847              		.cfi_offset 5, -8
 7848              		.cfi_offset 14, -4
 7849 0002 A3B0     		sub	sp, sp, #140
 7850              	.LCFI116:
 7851              		.cfi_def_cfa_offset 152
 7852 0004 0190     		str	r0, [sp, #4]
 7853 0006 22A8     		add	r0, sp, #136
 7854              	.LVL1203:
 7855 0008 40F8881D 		str	r1, [r0, #-136]!
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 7856              		.loc 1 4719 0
 7857 000c FFF7FEFF 		bl	get_ldnumber
 7858              	.LVL1204:
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7859              		.loc 1 4720 0
 7860 0010 0222     		movs	r2, #2
 7861 0012 09A9     		add	r1, sp, #36
 7862 0014 01A8     		add	r0, sp, #4
 7863 0016 FFF7FEFF 		bl	find_volume
 7864              	.LVL1205:
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
 7865              		.loc 1 4721 0
 7866 001a 0446     		mov	r4, r0
 7867 001c 30B1     		cbz	r0, .L767
 7868              	.LVL1206:
 7869              	.L757:
4799:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7870              		.loc 1 4799 0
 7871 001e 2146     		mov	r1, r4
 7872 0020 0998     		ldr	r0, [sp, #36]
 7873 0022 FFF7FEFF 		bl	unlock_fs
 7874              	.LVL1207:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 262


4800:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7875              		.loc 1 4800 0
 7876 0026 2046     		mov	r0, r4
 7877 0028 23B0     		add	sp, sp, #140
 7878              	.LCFI117:
 7879              		.cfi_remember_state
 7880              		.cfi_def_cfa_offset 12
 7881              		@ sp needed
 7882 002a 30BD     		pop	{r4, r5, pc}
 7883              	.LVL1208:
 7884              	.L767:
 7885              	.LCFI118:
 7886              		.cfi_restore_state
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7887              		.loc 1 4722 0
 7888 002c 099B     		ldr	r3, [sp, #36]
 7889 002e 1693     		str	r3, [sp, #88]
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 7890              		.loc 1 4724 0
 7891 0030 0199     		ldr	r1, [sp, #4]
 7892 0032 16A8     		add	r0, sp, #88
 7893              	.LVL1209:
 7894 0034 FFF7FEFF 		bl	follow_path
 7895              	.LVL1210:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7896              		.loc 1 4725 0
 7897 0038 0446     		mov	r4, r0
 7898 003a 28B9     		cbnz	r0, .L758
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7899              		.loc 1 4725 0 is_stmt 0 discriminator 1
 7900 003c 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
 7901 0040 13F0A00F 		tst	r3, #160
 7902 0044 00D0     		beq	.L758
4725:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7903              		.loc 1 4725 0
 7904 0046 0624     		movs	r4, #6
 7905              	.L758:
 7906              	.LVL1211:
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
 7907              		.loc 1 4727 0 is_stmt 1
 7908 0048 24B9     		cbnz	r4, .L759
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7909              		.loc 1 4728 0
 7910 004a 0221     		movs	r1, #2
 7911 004c 16A8     		add	r0, sp, #88
 7912 004e FFF7FEFF 		bl	chk_lock
 7913              	.LVL1212:
 7914 0052 0446     		mov	r4, r0
 7915              	.LVL1213:
 7916              	.L759:
4731:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7917              		.loc 1 4731 0
 7918 0054 002C     		cmp	r4, #0
 7919 0056 E2D1     		bne	.L757
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 7920              		.loc 1 4758 0
 7921 0058 1522     		movs	r2, #21
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 263


 7922 005a 1E99     		ldr	r1, [sp, #120]
 7923 005c 0B31     		adds	r1, r1, #11
 7924 005e 03A8     		add	r0, sp, #12
 7925 0060 FFF7FEFF 		bl	mem_cpy
 7926              	.LVL1214:
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 7927              		.loc 1 4759 0
 7928 0064 3022     		movs	r2, #48
 7929 0066 16A9     		add	r1, sp, #88
 7930 0068 0AA8     		add	r0, sp, #40
 7931 006a FFF7FEFF 		bl	mem_cpy
 7932              	.LVL1215:
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 7933              		.loc 1 4760 0
 7934 006e 0099     		ldr	r1, [sp]
 7935 0070 0AA8     		add	r0, sp, #40
 7936 0072 FFF7FEFF 		bl	follow_path
 7937              	.LVL1216:
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 7938              		.loc 1 4761 0
 7939 0076 0446     		mov	r4, r0
 7940 0078 20B9     		cbnz	r0, .L760
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7941              		.loc 1 4762 0
 7942 007a 189B     		ldr	r3, [sp, #96]
 7943 007c 0C9A     		ldr	r2, [sp, #48]
 7944 007e 9A42     		cmp	r2, r3
 7945 0080 0FD0     		beq	.L768
 7946 0082 0824     		movs	r4, #8
 7947              	.L760:
 7948              	.LVL1217:
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 7949              		.loc 1 4764 0
 7950 0084 042C     		cmp	r4, #4
 7951 0086 14D0     		beq	.L769
 7952              	.LVL1218:
 7953              	.L761:
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
 7954              		.loc 1 4788 0
 7955 0088 002C     		cmp	r4, #0
 7956 008a C8D1     		bne	.L757
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 7957              		.loc 1 4789 0
 7958 008c 16A8     		add	r0, sp, #88
 7959 008e FFF7FEFF 		bl	dir_remove
 7960              	.LVL1219:
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
 7961              		.loc 1 4790 0
 7962 0092 0446     		mov	r4, r0
 7963 0094 0028     		cmp	r0, #0
 7964 0096 C2D1     		bne	.L757
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7965              		.loc 1 4791 0
 7966 0098 0998     		ldr	r0, [sp, #36]
 7967              	.LVL1220:
 7968 009a FFF7FEFF 		bl	sync_fs
 7969              	.LVL1221:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 264


 7970 009e 0446     		mov	r4, r0
 7971              	.LVL1222:
 7972 00a0 BDE7     		b	.L757
 7973              	.LVL1223:
 7974              	.L768:
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7975              		.loc 1 4762 0 discriminator 1
 7976 00a2 1B9B     		ldr	r3, [sp, #108]
 7977 00a4 0F9A     		ldr	r2, [sp, #60]
 7978 00a6 9A42     		cmp	r2, r3
 7979 00a8 01D0     		beq	.L764
4762:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7980              		.loc 1 4762 0 is_stmt 0
 7981 00aa 0824     		movs	r4, #8
 7982 00ac EAE7     		b	.L760
 7983              	.L764:
 7984 00ae 0424     		movs	r4, #4
 7985 00b0 E8E7     		b	.L760
 7986              	.LVL1224:
 7987              	.L769:
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 7988              		.loc 1 4765 0 is_stmt 1
 7989 00b2 0AA8     		add	r0, sp, #40
 7990 00b4 FFF7FEFF 		bl	dir_register
 7991              	.LVL1225:
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
 7992              		.loc 1 4766 0
 7993 00b8 0446     		mov	r4, r0
 7994 00ba 0028     		cmp	r0, #0
 7995 00bc E4D1     		bne	.L761
4767:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 7996              		.loc 1 4767 0
 7997 00be 129D     		ldr	r5, [sp, #72]
 7998              	.LVL1226:
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 7999              		.loc 1 4768 0
 8000 00c0 1322     		movs	r2, #19
 8001 00c2 0DF10E01 		add	r1, sp, #14
 8002 00c6 05F10D00 		add	r0, r5, #13
 8003              	.LVL1227:
 8004 00ca FFF7FEFF 		bl	mem_cpy
 8005              	.LVL1228:
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 8006              		.loc 1 4769 0
 8007 00ce 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 8008 00d2 43F02003 		orr	r3, r3, #32
 8009 00d6 EB72     		strb	r3, [r5, #11]
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 8010              		.loc 1 4770 0
 8011 00d8 0122     		movs	r2, #1
 8012 00da 099B     		ldr	r3, [sp, #36]
 8013 00dc DA70     		strb	r2, [r3, #3]
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 8014              		.loc 1 4771 0
 8015 00de EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 8016 00e0 13F0100F 		tst	r3, #16
 8017 00e4 D0D0     		beq	.L761
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 265


4771:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 8018              		.loc 1 4771 0 is_stmt 0 discriminator 1
 8019 00e6 0C9B     		ldr	r3, [sp, #48]
 8020 00e8 189A     		ldr	r2, [sp, #96]
 8021 00ea 9A42     		cmp	r2, r3
 8022 00ec CCD0     		beq	.L761
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 8023              		.loc 1 4772 0 is_stmt 1
 8024 00ee 099C     		ldr	r4, [sp, #36]
 8025 00f0 2946     		mov	r1, r5
 8026 00f2 2046     		mov	r0, r4
 8027 00f4 FFF7FEFF 		bl	ld_clust
 8028              	.LVL1229:
 8029 00f8 0146     		mov	r1, r0
 8030 00fa 2046     		mov	r0, r4
 8031 00fc FFF7FEFF 		bl	clust2sect
 8032              	.LVL1230:
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
 8033              		.loc 1 4773 0
 8034 0100 0146     		mov	r1, r0
 8035 0102 08B9     		cbnz	r0, .L770
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 8036              		.loc 1 4774 0
 8037 0104 0224     		movs	r4, #2
 8038 0106 BFE7     		b	.L761
 8039              	.L770:
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
 8040              		.loc 1 4777 0
 8041 0108 2046     		mov	r0, r4
 8042              	.LVL1231:
 8043 010a FFF7FEFF 		bl	move_window
 8044              	.LVL1232:
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 8045              		.loc 1 4778 0
 8046 010e 099B     		ldr	r3, [sp, #36]
 8047 0110 03F15401 		add	r1, r3, #84
 8048              	.LVL1233:
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 8049              		.loc 1 4779 0
 8050 0114 0446     		mov	r4, r0
 8051 0116 0028     		cmp	r0, #0
 8052 0118 B6D1     		bne	.L761
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 8053              		.loc 1 4779 0 is_stmt 0 discriminator 1
 8054 011a 93F85520 		ldrb	r2, [r3, #85]	@ zero_extendqisi2
 8055 011e 2E2A     		cmp	r2, #46
 8056 0120 B2D1     		bne	.L761
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
 8057              		.loc 1 4780 0 is_stmt 1
 8058 0122 0C9A     		ldr	r2, [sp, #48]
 8059 0124 1846     		mov	r0, r3
 8060              	.LVL1234:
 8061 0126 FFF7FEFF 		bl	st_clust
 8062              	.LVL1235:
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 8063              		.loc 1 4781 0
 8064 012a 0122     		movs	r2, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 266


 8065 012c 099B     		ldr	r3, [sp, #36]
 8066 012e DA70     		strb	r2, [r3, #3]
 8067 0130 AAE7     		b	.L761
 8068              		.cfi_endproc
 8069              	.LFE196:
 8071              		.section	.text.f_mkfs,"ax",%progbits
 8072              		.align	1
 8073              		.global	f_mkfs
 8074              		.syntax unified
 8075              		.thumb
 8076              		.thumb_func
 8077              		.fpu fpv5-sp-d16
 8079              	f_mkfs:
 8080              	.LFB197:
5297:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
 8081              		.loc 1 5297 0
 8082              		.cfi_startproc
 8083              		@ args = 4, pretend = 0, frame = 40
 8084              		@ frame_needed = 0, uses_anonymous_args = 0
 8085              	.LVL1236:
 8086 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8087              	.LCFI119:
 8088              		.cfi_def_cfa_offset 36
 8089              		.cfi_offset 4, -36
 8090              		.cfi_offset 5, -32
 8091              		.cfi_offset 6, -28
 8092              		.cfi_offset 7, -24
 8093              		.cfi_offset 8, -20
 8094              		.cfi_offset 9, -16
 8095              		.cfi_offset 10, -12
 8096              		.cfi_offset 11, -8
 8097              		.cfi_offset 14, -4
 8098 0004 8BB0     		sub	sp, sp, #44
 8099              	.LCFI120:
 8100              		.cfi_def_cfa_offset 80
 8101 0006 0AAC     		add	r4, sp, #40
 8102 0008 44F80C0D 		str	r0, [r4, #-12]!
 8103 000c 0E46     		mov	r6, r1
 8104 000e 1746     		mov	r7, r2
 8105 0010 1D46     		mov	r5, r3
 8106              	.LVL1237:
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 8107              		.loc 1 5316 0
 8108 0012 2046     		mov	r0, r4
 8109              	.LVL1238:
 8110 0014 FFF7FEFF 		bl	get_ldnumber
 8111              	.LVL1239:
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 8112              		.loc 1 5317 0
 8113 0018 0028     		cmp	r0, #0
 8114 001a C0F2E182 		blt	.L814
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 8115              		.loc 1 5318 0
 8116 001e 9D4B     		ldr	r3, .L858
 8117 0020 53F82030 		ldr	r3, [r3, r0, lsl #2]
 8118 0024 0BB1     		cbz	r3, .L773
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 267


 8119              		.loc 1 5318 0 is_stmt 0 discriminator 1
 8120 0026 0022     		movs	r2, #0
 8121 0028 1A70     		strb	r2, [r3]
 8122              	.L773:
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
 8123              		.loc 1 5319 0 is_stmt 1
 8124 002a C4B2     		uxtb	r4, r0
 8125              	.LVL1240:
5323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 8126              		.loc 1 5323 0
 8127 002c 2046     		mov	r0, r4
 8128              	.LVL1241:
 8129 002e FFF7FEFF 		bl	disk_initialize
 8130              	.LVL1242:
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 8131              		.loc 1 5324 0
 8132 0032 10F0010F 		tst	r0, #1
 8133 0036 01D0     		beq	.L852
 8134 0038 0320     		movs	r0, #3
 8135              	.LVL1243:
 8136 003a D2E2     		b	.L772
 8137              	.LVL1244:
 8138              	.L852:
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 8139              		.loc 1 5325 0
 8140 003c 10F0040F 		tst	r0, #4
 8141 0040 01D0     		beq	.L853
 8142 0042 0A20     		movs	r0, #10
 8143              	.LVL1245:
 8144 0044 CDE2     		b	.L772
 8145              	.LVL1246:
 8146              	.L853:
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8147              		.loc 1 5326 0
 8148 0046 09AA     		add	r2, sp, #36
 8149 0048 0321     		movs	r1, #3
 8150 004a 2046     		mov	r0, r4
 8151              	.LVL1247:
 8152 004c FFF7FEFF 		bl	disk_ioctl
 8153              	.LVL1248:
 8154 0050 38B9     		cbnz	r0, .L774
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8155              		.loc 1 5326 0 is_stmt 0 discriminator 2
 8156 0052 099B     		ldr	r3, [sp, #36]
 8157 0054 2BB1     		cbz	r3, .L774
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8158              		.loc 1 5326 0 discriminator 4
 8159 0056 B3F5004F 		cmp	r3, #32768
 8160 005a 02D8     		bhi	.L774
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8161              		.loc 1 5326 0 discriminator 6
 8162 005c 5A1E     		subs	r2, r3, #1
 8163 005e 1342     		tst	r3, r2
 8164 0060 01D0     		beq	.L775
 8165              	.L774:
5326:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 8166              		.loc 1 5326 0 discriminator 7
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 268


 8167 0062 0123     		movs	r3, #1
 8168 0064 0993     		str	r3, [sp, #36]
 8169              	.L775:
 8170              	.LVL1249:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8171              		.loc 1 5333 0 is_stmt 1
 8172 0066 27B1     		cbz	r7, .L776
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8173              		.loc 1 5333 0 is_stmt 0 discriminator 1
 8174 0068 B7F5007F 		cmp	r7, #512
 8175 006c 01D2     		bcs	.L776
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8176              		.loc 1 5333 0
 8177 006e 1320     		movs	r0, #19
 8178 0070 B7E2     		b	.L772
 8179              	.L776:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8180              		.loc 1 5333 0 discriminator 4
 8181 0072 B7F1807F 		cmp	r7, #16777216
 8182 0076 01D9     		bls	.L854
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8183              		.loc 1 5333 0
 8184 0078 1320     		movs	r0, #19
 8185 007a B2E2     		b	.L772
 8186              	.L854:
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8187              		.loc 1 5333 0 discriminator 6
 8188 007c 7B1E     		subs	r3, r7, #1
 8189 007e 1F42     		tst	r7, r3
 8190 0080 01D0     		beq	.L855
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8191              		.loc 1 5333 0
 8192 0082 1320     		movs	r0, #19
 8193 0084 ADE2     		b	.L772
 8194              	.L855:
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8195              		.loc 1 5334 0 is_stmt 1
 8196 0086 4FEA5729 		lsr	r9, r7, #9
 8197              	.LVL1250:
5338:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 8198              		.loc 1 5338 0
 8199 008a 149B     		ldr	r3, [sp, #80]
 8200 008c 5B0A     		lsrs	r3, r3, #9
 8201 008e 0593     		str	r3, [sp, #20]
 8202              	.LVL1251:
5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
 8203              		.loc 1 5339 0
 8204 0090 DFF804A2 		ldr	r10, .L858+4
 8205 0094 149B     		ldr	r3, [sp, #80]
 8206              	.LVL1252:
 8207 0096 03EA0A0A 		and	r10, r3, r10
 8208              	.LVL1253:
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8209              		.loc 1 5340 0
 8210 009a BAF1000F 		cmp	r10, #0
 8211 009e 01D1     		bne	.L856
 8212 00a0 0E20     		movs	r0, #14
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 269


 8213 00a2 9EE2     		b	.L772
 8214              	.L856:
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 8215              		.loc 1 5353 0
 8216 00a4 08AA     		add	r2, sp, #32
 8217 00a6 0121     		movs	r1, #1
 8218 00a8 2046     		mov	r0, r4
 8219 00aa FFF7FEFF 		bl	disk_ioctl
 8220              	.LVL1254:
 8221 00ae 0028     		cmp	r0, #0
 8222 00b0 40F09A82 		bne	.L821
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 8223              		.loc 1 5354 0
 8224 00b4 16F00803 		ands	r3, r6, #8
 8225 00b8 0693     		str	r3, [sp, #24]
 8226 00ba 0CD0     		beq	.L822
 8227 00bc 4FF00008 		mov	r8, #0
 8228              	.L777:
 8229              	.LVL1255:
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 8230              		.loc 1 5355 0 discriminator 4
 8231 00c0 089A     		ldr	r2, [sp, #32]
 8232 00c2 9045     		cmp	r8, r2
 8233 00c4 00F29282 		bhi	.L823
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8234              		.loc 1 5356 0
 8235 00c8 A2EB0802 		sub	r2, r2, r8
 8236 00cc 0892     		str	r2, [sp, #32]
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8237              		.loc 1 5358 0
 8238 00ce 7F2A     		cmp	r2, #127
 8239 00d0 04D8     		bhi	.L857
 8240 00d2 0E20     		movs	r0, #14
 8241 00d4 85E2     		b	.L772
 8242              	.LVL1256:
 8243              	.L822:
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 8244              		.loc 1 5354 0
 8245 00d6 4FF03F08 		mov	r8, #63
 8246 00da F1E7     		b	.L777
 8247              	.LVL1257:
 8248              	.L857:
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 8249              		.loc 1 5367 0
 8250 00dc B9F1800F 		cmp	r9, #128
 8251 00e0 00F28682 		bhi	.L825
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 8252              		.loc 1 5368 0
 8253 00e4 16F00201 		ands	r1, r6, #2
 8254 00e8 06D0     		beq	.L778
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 8255              		.loc 1 5369 0
 8256 00ea 06F00703 		and	r3, r6, #7
 8257 00ee 022B     		cmp	r3, #2
 8258 00f0 69D0     		beq	.L826
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 8259              		.loc 1 5369 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 270


 8260 00f2 16F0010F 		tst	r6, #1
 8261 00f6 6AD0     		beq	.L827
 8262              	.L778:
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 8263              		.loc 1 5373 0 is_stmt 1
 8264 00f8 16F0010F 		tst	r6, #1
 8265 00fc 00F07A82 		beq	.L828
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
 8266              		.loc 1 5374 0
 8267 0100 0227     		movs	r7, #2
 8268 0102 4846     		mov	r0, r9
 8269 0104 0191     		str	r1, [sp, #4]
 8270              	.LVL1258:
 8271              	.L780:
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
 8272              		.loc 1 5544 0
 8273 0106 032F     		cmp	r7, #3
 8274 0108 70D1     		bne	.L781
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
 8275              		.loc 1 5545 0
 8276 010a 0028     		cmp	r0, #0
 8277 010c 6AD1     		bne	.L829
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 8278              		.loc 1 5546 0
 8279 010e 4FEA524C 		lsr	ip, r2, #17
 8280              	.LVL1259:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8281              		.loc 1 5547 0
 8282 0112 0023     		movs	r3, #0
 8283 0114 0126     		movs	r6, #1
 8284 0116 0199     		ldr	r1, [sp, #4]
 8285              	.LVL1260:
 8286              	.L783:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8287              		.loc 1 5547 0 is_stmt 0 discriminator 1
 8288 0118 DFF880E1 		ldr	lr, .L858+8
 8289 011c 3EF813E0 		ldrh	lr, [lr, r3, lsl #1]
 8290 0120 BEF1000F 		cmp	lr, #0
 8291 0124 60D0     		beq	.L848
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8292              		.loc 1 5547 0 discriminator 3
 8293 0126 F445     		cmp	ip, lr
 8294 0128 59D2     		bcs	.L784
 8295 012a 0191     		str	r1, [sp, #4]
 8296              	.LVL1261:
 8297              	.L782:
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 8298              		.loc 1 5549 0 is_stmt 1
 8299 012c B2FBF6FE 		udiv	lr, r2, r6
 8300              	.LVL1262:
5550:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 8301              		.loc 1 5550 0
 8302 0130 0EF10203 		add	r3, lr, #2
 8303 0134 9B00     		lsls	r3, r3, #2
 8304 0136 03F2FF13 		addw	r3, r3, #511
 8305 013a 5B0A     		lsrs	r3, r3, #9
 8306 013c 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 271


 8307              	.LVL1263:
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 8308              		.loc 1 5553 0
 8309 013e DFF860C1 		ldr	ip, .L858+12
 8310 0142 F444     		add	ip, ip, lr
 8311 0144 DFF85CE1 		ldr	lr, .L858+16
 8312              	.LVL1264:
 8313 0148 F445     		cmp	ip, lr
 8314 014a 00F25582 		bhi	.L830
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 8315              		.loc 1 5552 0
 8316 014e 0023     		movs	r3, #0
 8317              	.LVL1265:
 8318 0150 0493     		str	r3, [sp, #16]
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
 8319              		.loc 1 5551 0
 8320 0152 4FF02009 		mov	r9, #32
 8321              	.LVL1266:
 8322              	.L785:
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 8323              		.loc 1 5570 0
 8324 0156 09EB0803 		add	r3, r9, r8
 8325 015a 0393     		str	r3, [sp, #12]
 8326              	.LVL1267:
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8327              		.loc 1 5571 0
 8328 015c 0299     		ldr	r1, [sp, #8]
 8329 015e 01EB030E 		add	lr, r1, r3
 8330 0162 049B     		ldr	r3, [sp, #16]
 8331              	.LVL1268:
 8332 0164 9E44     		add	lr, lr, r3
 8333              	.LVL1269:
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 8334              		.loc 1 5574 0
 8335 0166 DDF824B0 		ldr	fp, [sp, #36]
 8336 016a 0EEB0B0C 		add	ip, lr, fp
 8337 016e 0CF1FF3C 		add	ip, ip, #-1
 8338 0172 CBF1000B 		rsb	fp, fp, #0
 8339 0176 0CEA0B0C 		and	ip, ip, fp
 8340 017a ACEB0E0C 		sub	ip, ip, lr
 8341              	.LVL1270:
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
 8342              		.loc 1 5575 0
 8343 017e 032F     		cmp	r7, #3
 8344 0180 63D1     		bne	.L791
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 8345              		.loc 1 5576 0
 8346 0182 E144     		add	r9, r9, ip
 8347              	.LVL1271:
 8348 0184 039B     		ldr	r3, [sp, #12]
 8349 0186 6344     		add	r3, r3, ip
 8350 0188 0393     		str	r3, [sp, #12]
 8351              	.LVL1272:
 8352              	.L792:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 8353              		.loc 1 5582 0
 8354 018a 0EEB061E 		add	lr, lr, r6, lsl #4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 272


 8355              	.LVL1273:
 8356 018e AEEB080E 		sub	lr, lr, r8
 8357 0192 7245     		cmp	r2, lr
 8358 0194 C0F03282 		bcc	.L832
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8359              		.loc 1 5583 0
 8360 0198 A2EB090B 		sub	fp, r2, r9
 8361 019c 029B     		ldr	r3, [sp, #8]
 8362 019e ABEB030B 		sub	fp, fp, r3
 8363 01a2 049B     		ldr	r3, [sp, #16]
 8364 01a4 ABEB030B 		sub	fp, fp, r3
 8365 01a8 BBFBF6FB 		udiv	fp, fp, r6
 8366              	.LVL1274:
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 8367              		.loc 1 5584 0
 8368 01ac 032F     		cmp	r7, #3
 8369 01ae 50D1     		bne	.L793
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 8370              		.loc 1 5585 0
 8371 01b0 4FF6F57E 		movw	lr, #65525
 8372 01b4 F345     		cmp	fp, lr
 8373 01b6 4CD8     		bhi	.L793
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8374              		.loc 1 5586 0
 8375 01b8 0028     		cmp	r0, #0
 8376 01ba 40F02182 		bne	.L833
 8377              	.LVL1275:
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8378              		.loc 1 5586 0 is_stmt 0 discriminator 1
 8379 01be 7308     		lsrs	r3, r6, #1
 8380              	.LVL1276:
 8381 01c0 0BD1     		bne	.L794
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8382              		.loc 1 5587 0 is_stmt 1
 8383 01c2 0E20     		movs	r0, #14
 8384 01c4 0DE2     		b	.L772
 8385              	.LVL1277:
 8386              	.L826:
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8387              		.loc 1 5370 0
 8388 01c6 0327     		movs	r7, #3
 8389 01c8 4846     		mov	r0, r9
 8390 01ca 0191     		str	r1, [sp, #4]
 8391 01cc 9BE7     		b	.L780
 8392              	.L827:
 8393 01ce 0327     		movs	r7, #3
 8394 01d0 4846     		mov	r0, r9
 8395 01d2 0191     		str	r1, [sp, #4]
 8396 01d4 97E7     		b	.L780
 8397              	.LVL1278:
 8398              	.L834:
 8399 01d6 0346     		mov	r3, r0
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8400              		.loc 1 5596 0
 8401 01d8 0327     		movs	r7, #3
 8402              	.LVL1279:
 8403              	.L794:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 273


 8404 01da 1846     		mov	r0, r3
 8405 01dc 93E7     		b	.L780
 8406              	.LVL1280:
 8407              	.L784:
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8408              		.loc 1 5547 0 discriminator 4
 8409 01de 0133     		adds	r3, r3, #1
 8410              	.LVL1281:
 8411 01e0 7600     		lsls	r6, r6, #1
 8412              	.LVL1282:
 8413 01e2 99E7     		b	.L783
 8414              	.LVL1283:
 8415              	.L829:
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
 8416              		.loc 1 5542 0
 8417 01e4 0646     		mov	r6, r0
 8418 01e6 A1E7     		b	.L782
 8419              	.LVL1284:
 8420              	.L848:
 8421 01e8 0191     		str	r1, [sp, #4]
 8422 01ea 9FE7     		b	.L782
 8423              	.LVL1285:
 8424              	.L781:
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
 8425              		.loc 1 5555 0
 8426 01ec 10BB     		cbnz	r0, .L831
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 8427              		.loc 1 5556 0
 8428 01ee 4FEA123C 		lsr	ip, r2, #12
 8429              	.LVL1286:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8430              		.loc 1 5557 0
 8431 01f2 0023     		movs	r3, #0
 8432 01f4 0126     		movs	r6, #1
 8433 01f6 0199     		ldr	r1, [sp, #4]
 8434              	.LVL1287:
 8435              	.L787:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8436              		.loc 1 5557 0 is_stmt 0 discriminator 1
 8437 01f8 DFF8ACE0 		ldr	lr, .L858+20
 8438 01fc 3EF813E0 		ldrh	lr, [lr, r3, lsl #1]
 8439 0200 BEF1000F 		cmp	lr, #0
 8440 0204 18D0     		beq	.L849
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8441              		.loc 1 5557 0 discriminator 3
 8442 0206 F445     		cmp	ip, lr
 8443 0208 11D2     		bcs	.L788
 8444 020a 0191     		str	r1, [sp, #4]
 8445              	.LVL1288:
 8446              	.L786:
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
 8447              		.loc 1 5559 0 is_stmt 1
 8448 020c B2FBF6F3 		udiv	r3, r2, r6
 8449              	.LVL1289:
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 8450              		.loc 1 5560 0
 8451 0210 40F6F57E 		movw	lr, #4085
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 274


 8452 0214 7345     		cmp	r3, lr
 8453 0216 11D9     		bls	.L789
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 8454              		.loc 1 5561 0
 8455 0218 0233     		adds	r3, r3, #2
 8456              	.LVL1290:
 8457 021a 5B00     		lsls	r3, r3, #1
 8458              	.LVL1291:
 8459              	.L790:
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
 8460              		.loc 1 5566 0
 8461 021c 03F2FF13 		addw	r3, r3, #511
 8462              	.LVL1292:
 8463 0220 5B0A     		lsrs	r3, r3, #9
 8464              	.LVL1293:
 8465 0222 0293     		str	r3, [sp, #8]
 8466              	.LVL1294:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8467              		.loc 1 5568 0
 8468 0224 2023     		movs	r3, #32
 8469              	.LVL1295:
 8470 0226 0493     		str	r3, [sp, #16]
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
 8471              		.loc 1 5567 0
 8472 0228 4FF00109 		mov	r9, #1
 8473 022c 93E7     		b	.L785
 8474              	.LVL1296:
 8475              	.L788:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8476              		.loc 1 5557 0 discriminator 4
 8477 022e 0133     		adds	r3, r3, #1
 8478              	.LVL1297:
 8479 0230 7600     		lsls	r6, r6, #1
 8480              	.LVL1298:
 8481 0232 E1E7     		b	.L787
 8482              	.LVL1299:
 8483              	.L831:
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
 8484              		.loc 1 5542 0
 8485 0234 0646     		mov	r6, r0
 8486 0236 E9E7     		b	.L786
 8487              	.LVL1300:
 8488              	.L849:
 8489 0238 0191     		str	r1, [sp, #4]
 8490 023a E7E7     		b	.L786
 8491              	.LVL1301:
 8492              	.L789:
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8493              		.loc 1 5564 0
 8494 023c 03EB4303 		add	r3, r3, r3, lsl #1
 8495              	.LVL1302:
 8496 0240 0133     		adds	r3, r3, #1
 8497 0242 5B08     		lsrs	r3, r3, #1
 8498 0244 0333     		adds	r3, r3, #3
 8499              	.LVL1303:
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 8500              		.loc 1 5563 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 275


 8501 0246 0127     		movs	r7, #1
 8502 0248 E8E7     		b	.L790
 8503              	.LVL1304:
 8504              	.L791:
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8505              		.loc 1 5578 0
 8506 024a 029B     		ldr	r3, [sp, #8]
 8507              	.LVL1305:
 8508 024c 6344     		add	r3, r3, ip
 8509 024e 0293     		str	r3, [sp, #8]
 8510              	.LVL1306:
 8511 0250 9BE7     		b	.L792
 8512              	.LVL1307:
 8513              	.L793:
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
 8514              		.loc 1 5590 0
 8515 0252 022F     		cmp	r7, #2
 8516 0254 2AD1     		bne	.L795
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
 8517              		.loc 1 5591 0
 8518 0256 4FF6F57E 		movw	lr, #65525
 8519 025a F345     		cmp	fp, lr
 8520 025c 0ED9     		bls	.L796
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 8521              		.loc 1 5592 0
 8522 025e 10B9     		cbnz	r0, .L797
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 8523              		.loc 1 5592 0 is_stmt 0 discriminator 1
 8524 0260 7300     		lsls	r3, r6, #1
 8525 0262 402B     		cmp	r3, #64
 8526 0264 B9D9     		bls	.L794
 8527              	.L797:
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 8528              		.loc 1 5595 0 is_stmt 1
 8529 0266 019B     		ldr	r3, [sp, #4]
 8530 0268 002B     		cmp	r3, #0
 8531 026a B4D1     		bne	.L834
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8532              		.loc 1 5598 0
 8533 026c 0028     		cmp	r0, #0
 8534 026e 40F0C981 		bne	.L835
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8535              		.loc 1 5598 0 is_stmt 0 discriminator 1
 8536 0272 7300     		lsls	r3, r6, #1
 8537              	.LVL1308:
 8538 0274 802B     		cmp	r3, #128
 8539 0276 B0D9     		bls	.L794
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8540              		.loc 1 5599 0 is_stmt 1
 8541 0278 0E20     		movs	r0, #14
 8542 027a B2E1     		b	.L772
 8543              	.LVL1309:
 8544              	.L796:
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 8545              		.loc 1 5601 0
 8546 027c 40F6F57E 		movw	lr, #4085
 8547 0280 F345     		cmp	fp, lr
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 276


 8548 0282 13D8     		bhi	.L795
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8549              		.loc 1 5602 0
 8550 0284 0028     		cmp	r0, #0
 8551 0286 40F0BF81 		bne	.L836
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8552              		.loc 1 5602 0 is_stmt 0 discriminator 1
 8553 028a 7300     		lsls	r3, r6, #1
 8554              	.LVL1310:
 8555 028c 802B     		cmp	r3, #128
 8556 028e A4D9     		bls	.L794
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8557              		.loc 1 5603 0 is_stmt 1
 8558 0290 0E20     		movs	r0, #14
 8559 0292 A6E1     		b	.L772
 8560              	.L859:
 8561              		.align	2
 8562              	.L858:
 8563 0294 00000000 		.word	.LANCHOR2
 8564 0298 00FEFFFF 		.word	-512
 8565 029c 00000000 		.word	.LANCHOR4
 8566 02a0 0A00FFFF 		.word	-65526
 8567 02a4 FFFFFE0F 		.word	268369919
 8568 02a8 00000000 		.word	.LANCHOR5
 8569              	.LVL1311:
 8570              	.L795:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8571              		.loc 1 5606 0
 8572 02ac 40F6F572 		movw	r2, #4085
 8573 02b0 012F     		cmp	r7, #1
 8574 02b2 14BF     		ite	ne
 8575 02b4 0023     		movne	r3, #0
 8576 02b6 0123     		moveq	r3, #1
 8577 02b8 9345     		cmp	fp, r2
 8578 02ba 98BF     		it	ls
 8579 02bc 0023     		movls	r3, #0
 8580 02be 002B     		cmp	r3, #0
 8581 02c0 40F0A481 		bne	.L837
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
 8582              		.loc 1 5617 0
 8583 02c4 4FF40072 		mov	r2, #512
 8584 02c8 0021     		movs	r1, #0
 8585 02ca 2846     		mov	r0, r5
 8586              	.LVL1312:
 8587 02cc FFF7FEFF 		bl	mem_set
 8588              	.LVL1313:
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
 8589              		.loc 1 5618 0
 8590 02d0 0B22     		movs	r2, #11
 8591 02d2 D449     		ldr	r1, .L860
 8592 02d4 2846     		mov	r0, r5
 8593 02d6 FFF7FEFF 		bl	mem_cpy
 8594              	.LVL1314:
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
 8595              		.loc 1 5619 0
 8596 02da 4FF40071 		mov	r1, #512
 8597 02de 05F10B00 		add	r0, r5, #11
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 277


 8598 02e2 FFF7FEFF 		bl	st_word
 8599              	.LVL1315:
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
 8600              		.loc 1 5620 0
 8601 02e6 6E73     		strb	r6, [r5, #13]
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
 8602              		.loc 1 5621 0
 8603 02e8 1FFA89F1 		uxth	r1, r9
 8604 02ec 05F10E00 		add	r0, r5, #14
 8605 02f0 FFF7FEFF 		bl	st_word
 8606              	.LVL1316:
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
 8607              		.loc 1 5622 0
 8608 02f4 0123     		movs	r3, #1
 8609 02f6 2B74     		strb	r3, [r5, #16]
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8610              		.loc 1 5623 0
 8611 02f8 05F11100 		add	r0, r5, #17
 8612 02fc 032F     		cmp	r7, #3
 8613 02fe 00F00581 		beq	.L838
 8614 0302 4FF40071 		mov	r1, #512
 8615              	.L798:
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8616              		.loc 1 5623 0 is_stmt 0 discriminator 4
 8617 0306 FFF7FEFF 		bl	st_word
 8618              	.LVL1317:
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 8619              		.loc 1 5624 0 is_stmt 1 discriminator 4
 8620 030a 0899     		ldr	r1, [sp, #32]
 8621 030c B1F5803F 		cmp	r1, #65536
 8622 0310 80F0FE80 		bcs	.L799
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8623              		.loc 1 5625 0
 8624 0314 89B2     		uxth	r1, r1
 8625 0316 05F11300 		add	r0, r5, #19
 8626 031a FFF7FEFF 		bl	st_word
 8627              	.LVL1318:
 8628              	.L800:
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
 8629              		.loc 1 5629 0
 8630 031e F823     		movs	r3, #248
 8631 0320 6B75     		strb	r3, [r5, #21]
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
 8632              		.loc 1 5630 0
 8633 0322 3F21     		movs	r1, #63
 8634 0324 05F11800 		add	r0, r5, #24
 8635 0328 FFF7FEFF 		bl	st_word
 8636              	.LVL1319:
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
 8637              		.loc 1 5631 0
 8638 032c FF21     		movs	r1, #255
 8639 032e 05F11A00 		add	r0, r5, #26
 8640 0332 FFF7FEFF 		bl	st_word
 8641              	.LVL1320:
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 8642              		.loc 1 5632 0
 8643 0336 4146     		mov	r1, r8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 278


 8644 0338 05F11C00 		add	r0, r5, #28
 8645 033c FFF7FEFF 		bl	st_dword
 8646              	.LVL1321:
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 8647              		.loc 1 5633 0
 8648 0340 032F     		cmp	r7, #3
 8649 0342 40F0EA80 		bne	.L801
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
 8650              		.loc 1 5634 0
 8651 0346 FFF7FEFF 		bl	get_fattime
 8652              	.LVL1322:
 8653 034a 0146     		mov	r1, r0
 8654 034c 05F14300 		add	r0, r5, #67
 8655 0350 FFF7FEFF 		bl	st_dword
 8656              	.LVL1323:
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
 8657              		.loc 1 5635 0
 8658 0354 0299     		ldr	r1, [sp, #8]
 8659 0356 05F12400 		add	r0, r5, #36
 8660 035a FFF7FEFF 		bl	st_dword
 8661              	.LVL1324:
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
 8662              		.loc 1 5636 0
 8663 035e 0221     		movs	r1, #2
 8664 0360 05F12C00 		add	r0, r5, #44
 8665 0364 FFF7FEFF 		bl	st_dword
 8666              	.LVL1325:
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
 8667              		.loc 1 5637 0
 8668 0368 0121     		movs	r1, #1
 8669 036a 05F13000 		add	r0, r5, #48
 8670 036e FFF7FEFF 		bl	st_word
 8671              	.LVL1326:
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
 8672              		.loc 1 5638 0
 8673 0372 0621     		movs	r1, #6
 8674 0374 05F13200 		add	r0, r5, #50
 8675 0378 FFF7FEFF 		bl	st_word
 8676              	.LVL1327:
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 8677              		.loc 1 5639 0
 8678 037c 8023     		movs	r3, #128
 8679 037e 85F84030 		strb	r3, [r5, #64]
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 8680              		.loc 1 5640 0
 8681 0382 2923     		movs	r3, #41
 8682 0384 85F84230 		strb	r3, [r5, #66]
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8683              		.loc 1 5641 0
 8684 0388 1322     		movs	r2, #19
 8685 038a A749     		ldr	r1, .L860+4
 8686 038c 05F14700 		add	r0, r5, #71
 8687 0390 FFF7FEFF 		bl	mem_cpy
 8688              	.LVL1328:
 8689              	.L802:
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
 8690              		.loc 1 5649 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 279


 8691 0394 05F5FF73 		add	r3, r5, #510
 8692 0398 0193     		str	r3, [sp, #4]
 8693 039a 4AF65521 		movw	r1, #43605
 8694 039e 1846     		mov	r0, r3
 8695 03a0 FFF7FEFF 		bl	st_word
 8696              	.LVL1329:
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8697              		.loc 1 5650 0
 8698 03a4 0123     		movs	r3, #1
 8699 03a6 4246     		mov	r2, r8
 8700 03a8 2946     		mov	r1, r5
 8701 03aa 2046     		mov	r0, r4
 8702 03ac FFF7FEFF 		bl	disk_write
 8703              	.LVL1330:
 8704 03b0 0028     		cmp	r0, #0
 8705 03b2 40F02D81 		bne	.L839
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
 8706              		.loc 1 5653 0
 8707 03b6 032F     		cmp	r7, #3
 8708 03b8 33D1     		bne	.L803
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8709              		.loc 1 5654 0
 8710 03ba 0123     		movs	r3, #1
 8711 03bc 08F10602 		add	r2, r8, #6
 8712 03c0 2946     		mov	r1, r5
 8713 03c2 2046     		mov	r0, r4
 8714 03c4 FFF7FEFF 		bl	disk_write
 8715              	.LVL1331:
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
 8716              		.loc 1 5655 0
 8717 03c8 4FF40072 		mov	r2, #512
 8718 03cc 0021     		movs	r1, #0
 8719 03ce 2846     		mov	r0, r5
 8720 03d0 FFF7FEFF 		bl	mem_set
 8721              	.LVL1332:
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
 8722              		.loc 1 5656 0
 8723 03d4 9549     		ldr	r1, .L860+8
 8724 03d6 2846     		mov	r0, r5
 8725 03d8 FFF7FEFF 		bl	st_dword
 8726              	.LVL1333:
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 8727              		.loc 1 5657 0
 8728 03dc 9449     		ldr	r1, .L860+12
 8729 03de 05F5F270 		add	r0, r5, #484
 8730 03e2 FFF7FEFF 		bl	st_dword
 8731              	.LVL1334:
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 8732              		.loc 1 5658 0
 8733 03e6 0BF1FF31 		add	r1, fp, #-1
 8734 03ea 05F5F470 		add	r0, r5, #488
 8735 03ee FFF7FEFF 		bl	st_dword
 8736              	.LVL1335:
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
 8737              		.loc 1 5659 0
 8738 03f2 0221     		movs	r1, #2
 8739 03f4 05F5F670 		add	r0, r5, #492
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 280


 8740 03f8 FFF7FEFF 		bl	st_dword
 8741              	.LVL1336:
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
 8742              		.loc 1 5660 0
 8743 03fc 4AF65521 		movw	r1, #43605
 8744 0400 0198     		ldr	r0, [sp, #4]
 8745 0402 FFF7FEFF 		bl	st_word
 8746              	.LVL1337:
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 8747              		.loc 1 5661 0
 8748 0406 0123     		movs	r3, #1
 8749 0408 08F10702 		add	r2, r8, #7
 8750 040c 2946     		mov	r1, r5
 8751 040e 2046     		mov	r0, r4
 8752 0410 FFF7FEFF 		bl	disk_write
 8753              	.LVL1338:
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8754              		.loc 1 5662 0
 8755 0414 0123     		movs	r3, #1
 8756 0416 08EB0302 		add	r2, r8, r3
 8757 041a 2946     		mov	r1, r5
 8758 041c 2046     		mov	r0, r4
 8759 041e FFF7FEFF 		bl	disk_write
 8760              	.LVL1339:
 8761              	.L803:
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
 8762              		.loc 1 5666 0
 8763 0422 5246     		mov	r2, r10
 8764 0424 0021     		movs	r1, #0
 8765 0426 2846     		mov	r0, r5
 8766 0428 FFF7FEFF 		bl	mem_set
 8767              	.LVL1340:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8768              		.loc 1 5668 0
 8769 042c 4FF0000B 		mov	fp, #0
 8770              	.LVL1341:
 8771              	.L804:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8772              		.loc 1 5668 0 is_stmt 0 discriminator 1
 8773 0430 BBF1000F 		cmp	fp, #0
 8774 0434 00F08B80 		beq	.L809
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 8775              		.loc 1 5686 0 is_stmt 1
 8776 0438 032F     		cmp	r7, #3
 8777 043a 40F0C380 		bne	.L850
 8778 043e DDF80CA0 		ldr	r10, [sp, #12]
 8779 0442 B146     		mov	r9, r6
 8780              	.LVL1342:
 8781              	.L811:
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8782              		.loc 1 5688 0
 8783 0444 059B     		ldr	r3, [sp, #20]
 8784 0446 4B45     		cmp	r3, r9
 8785 0448 28BF     		it	cs
 8786 044a 4B46     		movcs	r3, r9
 8787 044c 1E46     		mov	r6, r3
 8788              	.LVL1343:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 281


5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 8789              		.loc 1 5689 0
 8790 044e 5246     		mov	r2, r10
 8791 0450 2946     		mov	r1, r5
 8792 0452 2046     		mov	r0, r4
 8793 0454 FFF7FEFF 		bl	disk_write
 8794              	.LVL1344:
 8795 0458 0028     		cmp	r0, #0
 8796 045a 40F0DD80 		bne	.L842
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
 8797              		.loc 1 5690 0
 8798 045e B244     		add	r10, r10, r6
 8799              	.LVL1345:
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8800              		.loc 1 5691 0
 8801 0460 B9EB0609 		subs	r9, r9, r6
 8802              	.LVL1346:
 8803 0464 EED1     		bne	.L811
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
 8804              		.loc 1 5698 0
 8805 0466 032F     		cmp	r7, #3
 8806 0468 00F0B180 		beq	.L843
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
 8807              		.loc 1 5701 0
 8808 046c 089B     		ldr	r3, [sp, #32]
 8809 046e B3F5803F 		cmp	r3, #65536
 8810 0472 80F0AF80 		bcs	.L844
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8811              		.loc 1 5704 0
 8812 0476 022F     		cmp	r7, #2
 8813 0478 40F0AF80 		bne	.L845
 8814 047c 4FF00409 		mov	r9, #4
 8815              	.LVL1347:
 8816              	.L812:
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8817              		.loc 1 5716 0
 8818 0480 069B     		ldr	r3, [sp, #24]
 8819 0482 CBBB     		cbnz	r3, .L813
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
 8820              		.loc 1 5717 0
 8821 0484 4FF40072 		mov	r2, #512
 8822 0488 0021     		movs	r1, #0
 8823 048a 2846     		mov	r0, r5
 8824 048c FFF7FEFF 		bl	mem_set
 8825              	.LVL1348:
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
 8826              		.loc 1 5718 0
 8827 0490 4AF65521 		movw	r1, #43605
 8828 0494 0198     		ldr	r0, [sp, #4]
 8829 0496 FFF7FEFF 		bl	st_word
 8830              	.LVL1349:
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
 8831              		.loc 1 5720 0
 8832 049a 0026     		movs	r6, #0
 8833              	.LVL1350:
 8834 049c 85F8BE61 		strb	r6, [r5, #446]
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 282


 8835              		.loc 1 5721 0
 8836 04a0 0127     		movs	r7, #1
 8837 04a2 85F8BF71 		strb	r7, [r5, #447]
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
 8838              		.loc 1 5722 0
 8839 04a6 85F8C071 		strb	r7, [r5, #448]
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
 8840              		.loc 1 5723 0
 8841 04aa 85F8C161 		strb	r6, [r5, #449]
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
 8842              		.loc 1 5724 0
 8843 04ae 85F8C291 		strb	r9, [r5, #450]
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 8844              		.loc 1 5725 0
 8845 04b2 089B     		ldr	r3, [sp, #32]
 8846 04b4 4344     		add	r3, r3, r8
 8847 04b6 43F6C162 		movw	r2, #16065
 8848 04ba B3FBF2F3 		udiv	r3, r3, r2
 8849              	.LVL1351:
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 8850              		.loc 1 5726 0
 8851 04be FE22     		movs	r2, #254
 8852 04c0 85F8C321 		strb	r2, [r5, #451]
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 8853              		.loc 1 5727 0
 8854 04c4 9A08     		lsrs	r2, r3, #2
 8855 04c6 42F03F02 		orr	r2, r2, #63
 8856 04ca 85F8C421 		strb	r2, [r5, #452]
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
 8857              		.loc 1 5728 0
 8858 04ce 85F8C531 		strb	r3, [r5, #453]
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
 8859              		.loc 1 5729 0
 8860 04d2 4146     		mov	r1, r8
 8861 04d4 05F5E370 		add	r0, r5, #454
 8862 04d8 FFF7FEFF 		bl	st_dword
 8863              	.LVL1352:
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
 8864              		.loc 1 5730 0
 8865 04dc 0899     		ldr	r1, [sp, #32]
 8866 04de 05F5E570 		add	r0, r5, #458
 8867 04e2 FFF7FEFF 		bl	st_dword
 8868              	.LVL1353:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8869              		.loc 1 5731 0
 8870 04e6 3B46     		mov	r3, r7
 8871 04e8 3246     		mov	r2, r6
 8872 04ea 2946     		mov	r1, r5
 8873 04ec 2046     		mov	r0, r4
 8874 04ee FFF7FEFF 		bl	disk_write
 8875              	.LVL1354:
 8876 04f2 0028     		cmp	r0, #0
 8877 04f4 40F09280 		bne	.L846
 8878              	.LVL1355:
 8879              	.L813:
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8880              		.loc 1 5735 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 283


 8881 04f8 0022     		movs	r2, #0
 8882 04fa 1146     		mov	r1, r2
 8883 04fc 2046     		mov	r0, r4
 8884 04fe FFF7FEFF 		bl	disk_ioctl
 8885              	.LVL1356:
 8886 0502 0028     		cmp	r0, #0
 8887 0504 00F08C80 		beq	.L847
 8888 0508 0120     		movs	r0, #1
 8889 050a 6AE0     		b	.L772
 8890              	.LVL1357:
 8891              	.L838:
5623:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8892              		.loc 1 5623 0
 8893 050c 0021     		movs	r1, #0
 8894 050e FAE6     		b	.L798
 8895              	.L799:
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8896              		.loc 1 5627 0
 8897 0510 05F12000 		add	r0, r5, #32
 8898 0514 FFF7FEFF 		bl	st_dword
 8899              	.LVL1358:
 8900 0518 01E7     		b	.L800
 8901              	.L801:
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
 8902              		.loc 1 5643 0
 8903 051a FFF7FEFF 		bl	get_fattime
 8904              	.LVL1359:
 8905 051e 0146     		mov	r1, r0
 8906 0520 05F12700 		add	r0, r5, #39
 8907 0524 FFF7FEFF 		bl	st_dword
 8908              	.LVL1360:
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
 8909              		.loc 1 5644 0
 8910 0528 BDF80810 		ldrh	r1, [sp, #8]
 8911 052c 05F11600 		add	r0, r5, #22
 8912 0530 FFF7FEFF 		bl	st_word
 8913              	.LVL1361:
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 8914              		.loc 1 5645 0
 8915 0534 8023     		movs	r3, #128
 8916 0536 85F82430 		strb	r3, [r5, #36]
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 8917              		.loc 1 5646 0
 8918 053a 2923     		movs	r3, #41
 8919 053c 85F82630 		strb	r3, [r5, #38]
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8920              		.loc 1 5647 0
 8921 0540 1322     		movs	r2, #19
 8922 0542 3C49     		ldr	r1, .L860+16
 8923 0544 05F12B00 		add	r0, r5, #43
 8924 0548 FFF7FEFF 		bl	mem_cpy
 8925              	.LVL1362:
 8926 054c 22E7     		b	.L802
 8927              	.LVL1363:
 8928              	.L809:
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
 8929              		.loc 1 5669 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 284


 8930 054e 032F     		cmp	r7, #3
 8931 0550 2ED1     		bne	.L805
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
 8932              		.loc 1 5670 0
 8933 0552 6FF00701 		mvn	r1, #7
 8934 0556 2846     		mov	r0, r5
 8935 0558 FFF7FEFF 		bl	st_dword
 8936              	.LVL1364:
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
 8937              		.loc 1 5671 0
 8938 055c 4FF0FF31 		mov	r1, #-1
 8939 0560 281D     		adds	r0, r5, #4
 8940 0562 FFF7FEFF 		bl	st_dword
 8941              	.LVL1365:
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 8942              		.loc 1 5672 0
 8943 0566 6FF07041 		mvn	r1, #-268435456
 8944 056a 05F10800 		add	r0, r5, #8
 8945 056e FFF7FEFF 		bl	st_dword
 8946              	.LVL1366:
 8947              	.L806:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8948              		.loc 1 5674 0
 8949 0572 DDF80890 		ldr	r9, [sp, #8]
 8950 0576 BA46     		mov	r10, r7
 8951              	.L808:
 8952              	.LVL1367:
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8953              		.loc 1 5678 0
 8954 0578 059B     		ldr	r3, [sp, #20]
 8955 057a 4B45     		cmp	r3, r9
 8956 057c 28BF     		it	cs
 8957 057e 4B46     		movcs	r3, r9
 8958 0580 1F46     		mov	r7, r3
 8959              	.LVL1368:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 8960              		.loc 1 5679 0
 8961 0582 039A     		ldr	r2, [sp, #12]
 8962 0584 2946     		mov	r1, r5
 8963 0586 2046     		mov	r0, r4
 8964 0588 FFF7FEFF 		bl	disk_write
 8965              	.LVL1369:
 8966 058c 0028     		cmp	r0, #0
 8967 058e 41D1     		bne	.L841
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
 8968              		.loc 1 5680 0
 8969 0590 4FF40072 		mov	r2, #512
 8970 0594 0021     		movs	r1, #0
 8971 0596 2846     		mov	r0, r5
 8972 0598 FFF7FEFF 		bl	mem_set
 8973              	.LVL1370:
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
 8974              		.loc 1 5681 0
 8975 059c 039B     		ldr	r3, [sp, #12]
 8976 059e 3B44     		add	r3, r3, r7
 8977 05a0 0393     		str	r3, [sp, #12]
 8978              	.LVL1371:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 285


5682:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8979              		.loc 1 5682 0
 8980 05a2 B9EB0709 		subs	r9, r9, r7
 8981              	.LVL1372:
 8982 05a6 E7D1     		bne	.L808
 8983 05a8 5746     		mov	r7, r10
 8984              	.LVL1373:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8985              		.loc 1 5668 0 discriminator 2
 8986 05aa 0BF1010B 		add	fp, fp, #1
 8987              	.LVL1374:
 8988 05ae 3FE7     		b	.L804
 8989              	.LVL1375:
 8990              	.L805:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8991              		.loc 1 5674 0
 8992 05b0 012F     		cmp	r7, #1
 8993 05b2 04D1     		bne	.L840
 8994 05b4 2049     		ldr	r1, .L860+20
 8995              	.L807:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8996              		.loc 1 5674 0 is_stmt 0 discriminator 4
 8997 05b6 2846     		mov	r0, r5
 8998 05b8 FFF7FEFF 		bl	st_dword
 8999              	.LVL1376:
 9000 05bc D9E7     		b	.L806
 9001              	.L840:
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9002              		.loc 1 5674 0
 9003 05be 6FF00701 		mvn	r1, #7
 9004 05c2 F8E7     		b	.L807
 9005              	.L850:
 9006 05c4 DDF80CA0 		ldr	r10, [sp, #12]
 9007 05c8 DDF81090 		ldr	r9, [sp, #16]
 9008 05cc 3AE7     		b	.L811
 9009              	.LVL1377:
 9010              	.L843:
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 9011              		.loc 1 5699 0 is_stmt 1
 9012 05ce 4FF00C09 		mov	r9, #12
 9013              	.LVL1378:
 9014 05d2 55E7     		b	.L812
 9015              	.LVL1379:
 9016              	.L844:
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 9017              		.loc 1 5702 0
 9018 05d4 4FF00609 		mov	r9, #6
 9019              	.LVL1380:
 9020 05d8 52E7     		b	.L812
 9021              	.LVL1381:
 9022              	.L845:
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9023              		.loc 1 5704 0
 9024 05da 4FF00109 		mov	r9, #1
 9025              	.LVL1382:
 9026 05de 4FE7     		b	.L812
 9027              	.LVL1383:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 286


 9028              	.L814:
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 9029              		.loc 1 5317 0
 9030 05e0 0B20     		movs	r0, #11
 9031              	.LVL1384:
 9032              	.L772:
5738:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9033              		.loc 1 5738 0
 9034 05e2 0BB0     		add	sp, sp, #44
 9035              	.LCFI121:
 9036              		.cfi_remember_state
 9037              		.cfi_def_cfa_offset 36
 9038              		@ sp needed
 9039 05e4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9040              	.LVL1385:
 9041              	.L821:
 9042              	.LCFI122:
 9043              		.cfi_restore_state
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 9044              		.loc 1 5353 0
 9045 05e8 0120     		movs	r0, #1
 9046 05ea FAE7     		b	.L772
 9047              	.LVL1386:
 9048              	.L823:
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 9049              		.loc 1 5355 0
 9050 05ec 0E20     		movs	r0, #14
 9051 05ee F8E7     		b	.L772
 9052              	.L825:
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 9053              		.loc 1 5367 0
 9054 05f0 1320     		movs	r0, #19
 9055 05f2 F6E7     		b	.L772
 9056              	.L828:
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 9057              		.loc 1 5373 0
 9058 05f4 1320     		movs	r0, #19
 9059 05f6 F4E7     		b	.L772
 9060              	.LVL1387:
 9061              	.L830:
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 9062              		.loc 1 5553 0
 9063 05f8 0E20     		movs	r0, #14
 9064              	.LVL1388:
 9065 05fa F2E7     		b	.L772
 9066              	.LVL1389:
 9067              	.L832:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 9068              		.loc 1 5582 0
 9069 05fc 0E20     		movs	r0, #14
 9070              	.LVL1390:
 9071 05fe F0E7     		b	.L772
 9072              	.LVL1391:
 9073              	.L833:
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9074              		.loc 1 5587 0
 9075 0600 0E20     		movs	r0, #14
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 287


 9076              	.LVL1392:
 9077 0602 EEE7     		b	.L772
 9078              	.LVL1393:
 9079              	.L835:
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9080              		.loc 1 5599 0
 9081 0604 0E20     		movs	r0, #14
 9082              	.LVL1394:
 9083 0606 ECE7     		b	.L772
 9084              	.LVL1395:
 9085              	.L836:
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 9086              		.loc 1 5603 0
 9087 0608 0E20     		movs	r0, #14
 9088              	.LVL1396:
 9089 060a EAE7     		b	.L772
 9090              	.LVL1397:
 9091              	.L837:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9092              		.loc 1 5606 0
 9093 060c 0E20     		movs	r0, #14
 9094              	.LVL1398:
 9095 060e E8E7     		b	.L772
 9096              	.LVL1399:
 9097              	.L839:
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9098              		.loc 1 5650 0
 9099 0610 0120     		movs	r0, #1
 9100 0612 E6E7     		b	.L772
 9101              	.LVL1400:
 9102              	.L841:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 9103              		.loc 1 5679 0
 9104 0614 0120     		movs	r0, #1
 9105 0616 E4E7     		b	.L772
 9106              	.LVL1401:
 9107              	.L842:
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 9108              		.loc 1 5689 0
 9109 0618 0120     		movs	r0, #1
 9110 061a E2E7     		b	.L772
 9111              	.LVL1402:
 9112              	.L846:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9113              		.loc 1 5731 0
 9114 061c 0120     		movs	r0, #1
 9115 061e E0E7     		b	.L772
 9116              	.LVL1403:
 9117              	.L847:
5737:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9118              		.loc 1 5737 0
 9119 0620 0020     		movs	r0, #0
 9120 0622 DEE7     		b	.L772
 9121              	.L861:
 9122              		.align	2
 9123              	.L860:
 9124 0624 00000000 		.word	.LC1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 288


 9125 0628 0C000000 		.word	.LC2
 9126 062c 52526141 		.word	1096897106
 9127 0630 72724161 		.word	1631679090
 9128 0634 20000000 		.word	.LC3
 9129 0638 F8FFFF00 		.word	16777208
 9130              		.cfi_endproc
 9131              	.LFE197:
 9133              		.section	.text.f_gets,"ax",%progbits
 9134              		.align	1
 9135              		.global	f_gets
 9136              		.syntax unified
 9137              		.thumb
 9138              		.thumb_func
 9139              		.fpu fpv5-sp-d16
 9141              	f_gets:
 9142              	.LFB198:
5824:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 9143              		.loc 1 5824 0
 9144              		.cfi_startproc
 9145              		@ args = 0, pretend = 0, frame = 8
 9146              		@ frame_needed = 0, uses_anonymous_args = 0
 9147              	.LVL1404:
 9148 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 9149              	.LCFI123:
 9150              		.cfi_def_cfa_offset 24
 9151              		.cfi_offset 4, -24
 9152              		.cfi_offset 5, -20
 9153              		.cfi_offset 6, -16
 9154              		.cfi_offset 7, -12
 9155              		.cfi_offset 8, -8
 9156              		.cfi_offset 14, -4
 9157 0004 82B0     		sub	sp, sp, #8
 9158              	.LCFI124:
 9159              		.cfi_def_cfa_offset 32
 9160 0006 8046     		mov	r8, r0
 9161 0008 0E46     		mov	r6, r1
 9162 000a 1746     		mov	r7, r2
 9163              	.LVL1405:
5826:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 9164              		.loc 1 5826 0
 9165 000c 0546     		mov	r5, r0
5825:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 9166              		.loc 1 5825 0
 9167 000e 0024     		movs	r4, #0
 9168              	.LVL1406:
 9169              	.L863:
5831:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
 9170              		.loc 1 5831 0
 9171 0010 731E     		subs	r3, r6, #1
 9172 0012 9C42     		cmp	r4, r3
 9173 0014 14DA     		bge	.L864
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 9174              		.loc 1 5876 0
 9175 0016 6B46     		mov	r3, sp
 9176 0018 0122     		movs	r2, #1
 9177 001a 01A9     		add	r1, sp, #4
 9178 001c 3846     		mov	r0, r7
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 289


 9179 001e FFF7FEFF 		bl	f_read
 9180              	.LVL1407:
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 9181              		.loc 1 5877 0
 9182 0022 009B     		ldr	r3, [sp]
 9183 0024 012B     		cmp	r3, #1
 9184 0026 0BD1     		bne	.L864
5878:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 9185              		.loc 1 5878 0
 9186 0028 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 9187              	.LVL1408:
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 9188              		.loc 1 5880 0
 9189 002c 0D2B     		cmp	r3, #13
 9190 002e EFD0     		beq	.L863
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 9191              		.loc 1 5881 0
 9192 0030 6A1C     		adds	r2, r5, #1
 9193              	.LVL1409:
 9194 0032 2B70     		strb	r3, [r5]
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 9195              		.loc 1 5882 0
 9196 0034 0134     		adds	r4, r4, #1
 9197              	.LVL1410:
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 9198              		.loc 1 5883 0
 9199 0036 0A2B     		cmp	r3, #10
 9200 0038 01D0     		beq	.L868
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 9201              		.loc 1 5881 0
 9202 003a 1546     		mov	r5, r2
 9203 003c E8E7     		b	.L863
 9204              	.L868:
 9205 003e 1546     		mov	r5, r2
 9206              	.LVL1411:
 9207              	.L864:
5885:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 9208              		.loc 1 5885 0
 9209 0040 0023     		movs	r3, #0
 9210 0042 2B70     		strb	r3, [r5]
5886:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9211              		.loc 1 5886 0
 9212 0044 1CB1     		cbz	r4, .L869
 9213 0046 4046     		mov	r0, r8
 9214              	.L862:
5887:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9215              		.loc 1 5887 0
 9216 0048 02B0     		add	sp, sp, #8
 9217              	.LCFI125:
 9218              		.cfi_remember_state
 9219              		.cfi_def_cfa_offset 24
 9220              		@ sp needed
 9221 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 9222              	.LVL1412:
 9223              	.L869:
 9224              	.LCFI126:
 9225              		.cfi_restore_state
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 290


5886:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9226              		.loc 1 5886 0
 9227 004e 0020     		movs	r0, #0
 9228 0050 FAE7     		b	.L862
 9229              		.cfi_endproc
 9230              	.LFE198:
 9232              		.section	.text.f_putc,"ax",%progbits
 9233              		.align	1
 9234              		.global	f_putc
 9235              		.syntax unified
 9236              		.thumb
 9237              		.thumb_func
 9238              		.fpu fpv5-sp-d16
 9240              	f_putc:
 9241              	.LFB202:
5983:Middlewares/Third_Party/FatFs/src/ff.c **** }
5984:Middlewares/Third_Party/FatFs/src/ff.c **** 
5985:Middlewares/Third_Party/FatFs/src/ff.c **** 
5986:Middlewares/Third_Party/FatFs/src/ff.c **** 
5987:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
5988:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
5989:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
5990:Middlewares/Third_Party/FatFs/src/ff.c **** )
5991:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9242              		.loc 1 5991 0
 9243              		.cfi_startproc
 9244              		@ args = 0, pretend = 0, frame = 80
 9245              		@ frame_needed = 0, uses_anonymous_args = 0
 9246              	.LVL1413:
 9247 0000 10B5     		push	{r4, lr}
 9248              	.LCFI127:
 9249              		.cfi_def_cfa_offset 8
 9250              		.cfi_offset 4, -8
 9251              		.cfi_offset 14, -4
 9252 0002 94B0     		sub	sp, sp, #80
 9253              	.LCFI128:
 9254              		.cfi_def_cfa_offset 88
 9255 0004 0446     		mov	r4, r0
5992:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
5993:Middlewares/Third_Party/FatFs/src/ff.c **** 
5994:Middlewares/Third_Party/FatFs/src/ff.c **** 
5995:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9256              		.loc 1 5995 0
 9257 0006 01A8     		add	r0, sp, #4
 9258              	.LVL1414:
 9259 0008 FFF7FEFF 		bl	putc_init
 9260              	.LVL1415:
5996:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put the character */
 9261              		.loc 1 5996 0
 9262 000c 2146     		mov	r1, r4
 9263 000e 01A8     		add	r0, sp, #4
 9264 0010 FFF7FEFF 		bl	putc_bfd
 9265              	.LVL1416:
5997:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9266              		.loc 1 5997 0
 9267 0014 01A8     		add	r0, sp, #4
 9268 0016 FFF7FEFF 		bl	putc_flush
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 291


 9269              	.LVL1417:
5998:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9270              		.loc 1 5998 0
 9271 001a 14B0     		add	sp, sp, #80
 9272              	.LCFI129:
 9273              		.cfi_def_cfa_offset 8
 9274              		@ sp needed
 9275 001c 10BD     		pop	{r4, pc}
 9276              		.cfi_endproc
 9277              	.LFE202:
 9279              		.section	.text.f_puts,"ax",%progbits
 9280              		.align	1
 9281              		.global	f_puts
 9282              		.syntax unified
 9283              		.thumb
 9284              		.thumb_func
 9285              		.fpu fpv5-sp-d16
 9287              	f_puts:
 9288              	.LFB203:
5999:Middlewares/Third_Party/FatFs/src/ff.c **** 
6000:Middlewares/Third_Party/FatFs/src/ff.c **** 
6001:Middlewares/Third_Party/FatFs/src/ff.c **** 
6002:Middlewares/Third_Party/FatFs/src/ff.c **** 
6003:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6004:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
6005:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6006:Middlewares/Third_Party/FatFs/src/ff.c **** 
6007:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
6008:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
6009:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
6010:Middlewares/Third_Party/FatFs/src/ff.c **** )
6011:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9289              		.loc 1 6011 0
 9290              		.cfi_startproc
 9291              		@ args = 0, pretend = 0, frame = 80
 9292              		@ frame_needed = 0, uses_anonymous_args = 0
 9293              	.LVL1418:
 9294 0000 10B5     		push	{r4, lr}
 9295              	.LCFI130:
 9296              		.cfi_def_cfa_offset 8
 9297              		.cfi_offset 4, -8
 9298              		.cfi_offset 14, -4
 9299 0002 94B0     		sub	sp, sp, #80
 9300              	.LCFI131:
 9301              		.cfi_def_cfa_offset 88
 9302 0004 0446     		mov	r4, r0
6012:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6013:Middlewares/Third_Party/FatFs/src/ff.c **** 
6014:Middlewares/Third_Party/FatFs/src/ff.c **** 
6015:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9303              		.loc 1 6015 0
 9304 0006 01A8     		add	r0, sp, #4
 9305              	.LVL1419:
 9306 0008 FFF7FEFF 		bl	putc_init
 9307              	.LVL1420:
6016:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
 9308              		.loc 1 6016 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 292


 9309 000c 03E0     		b	.L874
 9310              	.L875:
 9311              		.loc 1 6016 0 is_stmt 0 discriminator 2
 9312 000e 0134     		adds	r4, r4, #1
 9313              	.LVL1421:
 9314 0010 01A8     		add	r0, sp, #4
 9315 0012 FFF7FEFF 		bl	putc_bfd
 9316              	.LVL1422:
 9317              	.L874:
 9318              		.loc 1 6016 0 discriminator 1
 9319 0016 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 9320 0018 0029     		cmp	r1, #0
 9321 001a F8D1     		bne	.L875
6017:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9322              		.loc 1 6017 0 is_stmt 1
 9323 001c 01A8     		add	r0, sp, #4
 9324 001e FFF7FEFF 		bl	putc_flush
 9325              	.LVL1423:
6018:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9326              		.loc 1 6018 0
 9327 0022 14B0     		add	sp, sp, #80
 9328              	.LCFI132:
 9329              		.cfi_def_cfa_offset 8
 9330              		@ sp needed
 9331 0024 10BD     		pop	{r4, pc}
 9332              		.cfi_endproc
 9333              	.LFE203:
 9335              		.section	.text.f_printf,"ax",%progbits
 9336              		.align	1
 9337              		.global	f_printf
 9338              		.syntax unified
 9339              		.thumb
 9340              		.thumb_func
 9341              		.fpu fpv5-sp-d16
 9343              	f_printf:
 9344              	.LFB204:
6019:Middlewares/Third_Party/FatFs/src/ff.c **** 
6020:Middlewares/Third_Party/FatFs/src/ff.c **** 
6021:Middlewares/Third_Party/FatFs/src/ff.c **** 
6022:Middlewares/Third_Party/FatFs/src/ff.c **** 
6023:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6024:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
6025:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6026:Middlewares/Third_Party/FatFs/src/ff.c **** 
6027:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
6028:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
6029:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
6030:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
6031:Middlewares/Third_Party/FatFs/src/ff.c **** )
6032:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9345              		.loc 1 6032 0
 9346              		.cfi_startproc
 9347              		@ args = 4, pretend = 12, frame = 112
 9348              		@ frame_needed = 0, uses_anonymous_args = 1
 9349              	.LVL1424:
 9350 0000 0EB4     		push	{r1, r2, r3}
 9351              	.LCFI133:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 293


 9352              		.cfi_def_cfa_offset 12
 9353              		.cfi_offset 1, -12
 9354              		.cfi_offset 2, -8
 9355              		.cfi_offset 3, -4
 9356 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 9357              	.LCFI134:
 9358              		.cfi_def_cfa_offset 44
 9359              		.cfi_offset 4, -44
 9360              		.cfi_offset 5, -40
 9361              		.cfi_offset 6, -36
 9362              		.cfi_offset 7, -32
 9363              		.cfi_offset 8, -28
 9364              		.cfi_offset 9, -24
 9365              		.cfi_offset 10, -20
 9366              		.cfi_offset 14, -16
 9367 0006 9DB0     		sub	sp, sp, #116
 9368              	.LCFI135:
 9369              		.cfi_def_cfa_offset 160
 9370 0008 25AC     		add	r4, sp, #148
 9371 000a 54F8046B 		ldr	r6, [r4], #4
6033:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
6034:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6035:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
6036:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, w;
6037:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
6038:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, str[32], *p;
6039:Middlewares/Third_Party/FatFs/src/ff.c **** 
6040:Middlewares/Third_Party/FatFs/src/ff.c **** 
6041:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9372              		.loc 1 6041 0
 9373 000e 0146     		mov	r1, r0
 9374 0010 08A8     		add	r0, sp, #32
 9375              	.LVL1425:
 9376 0012 FFF7FEFF 		bl	putc_init
 9377              	.LVL1426:
6042:Middlewares/Third_Party/FatFs/src/ff.c **** 
6043:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
 9378              		.loc 1 6043 0
 9379 0016 1B94     		str	r4, [sp, #108]
 9380 0018 F9E0     		b	.L878
 9381              	.LVL1427:
 9382              	.L880:
6044:Middlewares/Third_Party/FatFs/src/ff.c **** 
6045:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
6047:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
6050:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6051:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
6053:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9383              		.loc 1 6053 0
 9384 001a 0236     		adds	r6, r6, #2
 9385              	.LVL1428:
 9386 001c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 9387              	.LVL1429:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 294


6054:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 9388              		.loc 1 6054 0
 9389 001e 3029     		cmp	r1, #48
 9390 0020 04D0     		beq	.L927
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
6056:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
6057:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 9391              		.loc 1 6057 0
 9392 0022 2D29     		cmp	r1, #45
 9393 0024 06D0     		beq	.L928
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9394              		.loc 1 6052 0
 9395 0026 0027     		movs	r7, #0
 9396              	.LVL1430:
 9397              	.L883:
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
 9398              		.loc 1 6055 0
 9399 0028 0025     		movs	r5, #0
 9400 002a 0EE0     		b	.L884
 9401              	.LVL1431:
 9402              	.L927:
 9403 002c A61C     		adds	r6, r4, #2
 9404              	.LVL1432:
 9405 002e 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 9406              	.LVL1433:
 9407 0030 0127     		movs	r7, #1
 9408 0032 F9E7     		b	.L883
 9409              	.LVL1434:
 9410              	.L928:
6058:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 9411              		.loc 1 6058 0
 9412 0034 A61C     		adds	r6, r4, #2
 9413              	.LVL1435:
 9414 0036 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 9415              	.LVL1436:
 9416 0038 0227     		movs	r7, #2
 9417 003a F5E7     		b	.L883
 9418              	.LVL1437:
 9419              	.L885:
6059:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6060:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
6062:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9420              		.loc 1 6062 0
 9421 003c 05EB8505 		add	r5, r5, r5, lsl #2
 9422              	.LVL1438:
 9423 0040 6B00     		lsls	r3, r5, #1
 9424 0042 CD18     		adds	r5, r1, r3
 9425 0044 303D     		subs	r5, r5, #48
 9426              	.LVL1439:
6063:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 9427              		.loc 1 6063 0
 9428 0046 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 9429              	.LVL1440:
 9430 0048 0136     		adds	r6, r6, #1
 9431              	.LVL1441:
 9432              	.L884:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 295


6061:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9433              		.loc 1 6061 0
 9434 004a A1F13003 		sub	r3, r1, #48
 9435 004e DBB2     		uxtb	r3, r3
 9436 0050 092B     		cmp	r3, #9
 9437 0052 F3D9     		bls	.L885
6064:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6065:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 9438              		.loc 1 6065 0
 9439 0054 4C29     		cmp	r1, #76
 9440 0056 18BF     		it	ne
 9441 0058 6C29     		cmpne	r1, #108
 9442 005a 03D1     		bne	.L886
6066:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 9443              		.loc 1 6066 0
 9444 005c 47F00407 		orr	r7, r7, #4
 9445              	.LVL1442:
 9446 0060 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 9447              	.LVL1443:
 9448 0062 0136     		adds	r6, r6, #1
 9449              	.LVL1444:
 9450              	.L886:
6067:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6068:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
 9451              		.loc 1 6068 0
 9452 0064 0029     		cmp	r1, #0
 9453 0066 00F0DD80 		beq	.L879
 9454              	.LVL1445:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
6070:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 9455              		.loc 1 6070 0
 9456 006a A1F16103 		sub	r3, r1, #97
 9457 006e DBB2     		uxtb	r3, r3
 9458 0070 192B     		cmp	r3, #25
 9459 0072 14D8     		bhi	.L921
 9460              		.loc 1 6070 0 is_stmt 0 discriminator 1
 9461 0074 A1F12003 		sub	r3, r1, #32
 9462 0078 DBB2     		uxtb	r3, r3
 9463              	.LVL1446:
 9464              	.L887:
6071:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
 9465              		.loc 1 6071 0 is_stmt 1
 9466 007a A3F14202 		sub	r2, r3, #66
 9467 007e 162A     		cmp	r2, #22
 9468 0080 48D8     		bhi	.L888
 9469 0082 DFE802F0 		tbb	[pc, r2]
 9470              	.L890:
 9471 0086 4B       		.byte	(.L889-.L890)/2
 9472 0087 39       		.byte	(.L891-.L890)/2
 9473 0088 41       		.byte	(.L892-.L890)/2
 9474 0089 47       		.byte	(.L888-.L890)/2
 9475 008a 47       		.byte	(.L888-.L890)/2
 9476 008b 47       		.byte	(.L888-.L890)/2
 9477 008c 47       		.byte	(.L888-.L890)/2
 9478 008d 47       		.byte	(.L888-.L890)/2
 9479 008e 47       		.byte	(.L888-.L890)/2
 9480 008f 47       		.byte	(.L888-.L890)/2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 296


 9481 0090 47       		.byte	(.L888-.L890)/2
 9482 0091 47       		.byte	(.L888-.L890)/2
 9483 0092 47       		.byte	(.L888-.L890)/2
 9484 0093 4E       		.byte	(.L922-.L890)/2
 9485 0094 47       		.byte	(.L888-.L890)/2
 9486 0095 47       		.byte	(.L888-.L890)/2
 9487 0096 47       		.byte	(.L888-.L890)/2
 9488 0097 0E       		.byte	(.L894-.L890)/2
 9489 0098 47       		.byte	(.L888-.L890)/2
 9490 0099 41       		.byte	(.L892-.L890)/2
 9491 009a 47       		.byte	(.L888-.L890)/2
 9492 009b 47       		.byte	(.L888-.L890)/2
 9493 009c 44       		.byte	(.L895-.L890)/2
 9494              	.LVL1447:
 9495 009d 00       		.p2align 1
 9496              	.L921:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 9497              		.loc 1 6069 0
 9498 009e 0B46     		mov	r3, r1
 9499 00a0 EBE7     		b	.L887
 9500              	.LVL1448:
 9501              	.L894:
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
6073:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
 9502              		.loc 1 6073 0
 9503 00a2 1B9B     		ldr	r3, [sp, #108]
 9504              	.LVL1449:
 9505 00a4 1A1D     		adds	r2, r3, #4
 9506 00a6 1B92     		str	r2, [sp, #108]
 9507 00a8 1C68     		ldr	r4, [r3]
 9508              	.LVL1450:
6074:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
 9509              		.loc 1 6074 0
 9510 00aa 0023     		movs	r3, #0
 9511 00ac 00E0     		b	.L896
 9512              	.LVL1451:
 9513              	.L897:
 9514              		.loc 1 6074 0 is_stmt 0 discriminator 3
 9515 00ae 0133     		adds	r3, r3, #1
 9516              	.LVL1452:
 9517              	.L896:
 9518              		.loc 1 6074 0 discriminator 1
 9519 00b0 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 9520 00b2 002A     		cmp	r2, #0
 9521 00b4 FBD1     		bne	.L897
6075:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 9522              		.loc 1 6075 0 is_stmt 1
 9523 00b6 17F0020F 		tst	r7, #2
 9524 00ba 07D0     		beq	.L898
 9525 00bc 1F46     		mov	r7, r3
 9526              	.LVL1453:
 9527 00be 0DE0     		b	.L901
 9528              	.LVL1454:
 9529              	.L900:
6076:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 9530              		.loc 1 6076 0 discriminator 2
 9531 00c0 2021     		movs	r1, #32
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 297


 9532 00c2 0DEB0100 		add	r0, sp, r1
 9533 00c6 FFF7FEFF 		bl	putc_bfd
 9534              	.LVL1455:
 9535 00ca 3B46     		mov	r3, r7
 9536              	.LVL1456:
 9537              	.L898:
 9538              		.loc 1 6076 0 is_stmt 0 discriminator 1
 9539 00cc 5F1C     		adds	r7, r3, #1
 9540              	.LVL1457:
 9541 00ce AB42     		cmp	r3, r5
 9542 00d0 F6D3     		bcc	.L900
 9543 00d2 03E0     		b	.L901
 9544              	.LVL1458:
 9545              	.L902:
6077:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6078:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
 9546              		.loc 1 6078 0 is_stmt 1 discriminator 2
 9547 00d4 0134     		adds	r4, r4, #1
 9548              	.LVL1459:
 9549 00d6 08A8     		add	r0, sp, #32
 9550 00d8 FFF7FEFF 		bl	putc_bfd
 9551              	.LVL1460:
 9552              	.L901:
 9553              		.loc 1 6078 0 is_stmt 0 discriminator 1
 9554 00dc 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 9555 00de 0029     		cmp	r1, #0
 9556 00e0 F8D1     		bne	.L902
 9557 00e2 05E0     		b	.L903
 9558              	.LVL1461:
 9559              	.L904:
6079:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 9560              		.loc 1 6079 0 is_stmt 1 discriminator 2
 9561 00e4 2021     		movs	r1, #32
 9562 00e6 0DEB0100 		add	r0, sp, r1
 9563 00ea FFF7FEFF 		bl	putc_bfd
 9564              	.LVL1462:
 9565 00ee 2746     		mov	r7, r4
 9566              	.LVL1463:
 9567              	.L903:
 9568              		.loc 1 6079 0 is_stmt 0 discriminator 1
 9569 00f0 7C1C     		adds	r4, r7, #1
 9570              	.LVL1464:
 9571 00f2 AF42     		cmp	r7, r5
 9572 00f4 F6D3     		bcc	.L904
 9573 00f6 8AE0     		b	.L878
 9574              	.LVL1465:
 9575              	.L891:
6080:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6081:Middlewares/Third_Party/FatFs/src/ff.c **** 
6082:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
6083:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
 9576              		.loc 1 6083 0 is_stmt 1
 9577 00f8 1B9B     		ldr	r3, [sp, #108]
 9578              	.LVL1466:
 9579 00fa 1A1D     		adds	r2, r3, #4
 9580 00fc 1B92     		str	r2, [sp, #108]
 9581 00fe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 298


 9582              	.LVL1467:
 9583 0100 08A8     		add	r0, sp, #32
 9584 0102 FFF7FEFF 		bl	putc_bfd
 9585              	.LVL1468:
 9586 0106 82E0     		b	.L878
 9587              	.LVL1469:
 9588              	.L892:
6084:Middlewares/Third_Party/FatFs/src/ff.c **** 
6085:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
6087:Middlewares/Third_Party/FatFs/src/ff.c **** 
6088:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
6090:Middlewares/Third_Party/FatFs/src/ff.c **** 
6091:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
6092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
6093:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
 9589              		.loc 1 6093 0
 9590 0108 4FF00A0C 		mov	ip, #10
 9591 010c 0BE0     		b	.L893
 9592              	.LVL1470:
 9593              	.L895:
6094:Middlewares/Third_Party/FatFs/src/ff.c **** 
6095:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
6096:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
 9594              		.loc 1 6096 0
 9595 010e 4FF0100C 		mov	ip, #16
 9596 0112 08E0     		b	.L893
 9597              	.LVL1471:
 9598              	.L888:
6097:Middlewares/Third_Party/FatFs/src/ff.c **** 
6098:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
6099:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 9599              		.loc 1 6099 0
 9600 0114 08A8     		add	r0, sp, #32
 9601 0116 FFF7FEFF 		bl	putc_bfd
 9602              	.LVL1472:
 9603 011a 78E0     		b	.L878
 9604              	.LVL1473:
 9605              	.L889:
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9606              		.loc 1 6086 0
 9607 011c 4FF0020C 		mov	ip, #2
 9608 0120 01E0     		b	.L893
 9609              	.L922:
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9610              		.loc 1 6089 0
 9611 0122 4FF0080C 		mov	ip, #8
 9612              	.L893:
 9613              	.LVL1474:
6100:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6101:Middlewares/Third_Party/FatFs/src/ff.c **** 
6102:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 9614              		.loc 1 6103 0
 9615 0126 17F0040F 		tst	r7, #4
 9616 012a 12D1     		bne	.L929
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 299


 9617              		.loc 1 6103 0 is_stmt 0 discriminator 2
 9618 012c 442B     		cmp	r3, #68
 9619 012e 15D0     		beq	.L930
 9620              		.loc 1 6103 0
 9621 0130 1B9A     		ldr	r2, [sp, #108]
 9622 0132 101D     		adds	r0, r2, #4
 9623 0134 1B90     		str	r0, [sp, #108]
 9624 0136 1068     		ldr	r0, [r2]
 9625              	.L906:
 9626              	.LVL1475:
6104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9627              		.loc 1 6104 0 is_stmt 1 discriminator 8
 9628 0138 C20F     		lsrs	r2, r0, #31
 9629 013a 442B     		cmp	r3, #68
 9630 013c 14BF     		ite	ne
 9631 013e 0023     		movne	r3, #0
 9632 0140 02F00103 		andeq	r3, r2, #1
 9633              	.LVL1476:
 9634 0144 13B1     		cbz	r3, .L908
6105:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 9635              		.loc 1 6105 0
 9636 0146 4042     		negs	r0, r0
 9637              	.LVL1477:
6106:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
 9638              		.loc 1 6106 0
 9639 0148 47F00807 		orr	r7, r7, #8
 9640              	.LVL1478:
 9641              	.L908:
6107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6108:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 9642              		.loc 1 6108 0
 9643 014c 4FF0000E 		mov	lr, #0
 9644 0150 1CE0     		b	.L911
 9645              	.LVL1479:
 9646              	.L929:
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9647              		.loc 1 6103 0
 9648 0152 1B9A     		ldr	r2, [sp, #108]
 9649 0154 101D     		adds	r0, r2, #4
 9650 0156 1B90     		str	r0, [sp, #108]
 9651 0158 1068     		ldr	r0, [r2]
 9652 015a EDE7     		b	.L906
 9653              	.L930:
 9654 015c 1B9A     		ldr	r2, [sp, #108]
 9655 015e 101D     		adds	r0, r2, #4
 9656 0160 1B90     		str	r0, [sp, #108]
 9657 0162 1068     		ldr	r0, [r2]
 9658 0164 E8E7     		b	.L906
 9659              	.LVL1480:
 9660              	.L932:
6109:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9661              		.loc 1 6111 0
 9662 0166 2724     		movs	r4, #39
 9663              	.L910:
 9664              		.loc 1 6111 0 is_stmt 0 discriminator 5
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 300


 9665 0168 2344     		add	r3, r3, r4
 9666              	.LVL1481:
 9667 016a DBB2     		uxtb	r3, r3
 9668              	.LVL1482:
 9669              	.L909:
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9670              		.loc 1 6112 0 is_stmt 1
 9671 016c 0EF10104 		add	r4, lr, #1
 9672              	.LVL1483:
 9673 0170 3033     		adds	r3, r3, #48
 9674              	.LVL1484:
 9675 0172 0DF17008 		add	r8, sp, #112
 9676 0176 F044     		add	r8, r8, lr
 9677 0178 08F8703C 		strb	r3, [r8, #-112]
6113:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 9678              		.loc 1 6113 0
 9679 017c 0032     		adds	r2, r2, #0
 9680 017e 18BF     		it	ne
 9681 0180 0122     		movne	r2, #1
 9682 0182 1F2C     		cmp	r4, #31
 9683 0184 88BF     		it	hi
 9684 0186 0022     		movhi	r2, #0
 9685 0188 62B1     		cbz	r2, .L931
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9686              		.loc 1 6112 0
 9687 018a A646     		mov	lr, r4
 9688              	.LVL1485:
 9689              	.L911:
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9690              		.loc 1 6110 0
 9691 018c B0FBFCF2 		udiv	r2, r0, ip
 9692 0190 0CFB1203 		mls	r3, ip, r2, r0
 9693 0194 DBB2     		uxtb	r3, r3
 9694              	.LVL1486:
 9695 0196 1046     		mov	r0, r2
 9696              	.LVL1487:
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9697              		.loc 1 6111 0
 9698 0198 092B     		cmp	r3, #9
 9699 019a E7D9     		bls	.L909
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9700              		.loc 1 6111 0 is_stmt 0 discriminator 1
 9701 019c 7829     		cmp	r1, #120
 9702 019e E2D0     		beq	.L932
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9703              		.loc 1 6111 0
 9704 01a0 0724     		movs	r4, #7
 9705 01a2 E1E7     		b	.L910
 9706              	.LVL1488:
 9707              	.L931:
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) str[i++] = '-';
 9708              		.loc 1 6114 0 is_stmt 1
 9709 01a4 17F0080F 		tst	r7, #8
 9710 01a8 06D0     		beq	.L912
 9711              	.LVL1489:
 9712              		.loc 1 6114 0 is_stmt 0 discriminator 1
 9713 01aa 1CAB     		add	r3, sp, #112
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 301


 9714 01ac 1C44     		add	r4, r4, r3
 9715 01ae 2D23     		movs	r3, #45
 9716 01b0 04F8703C 		strb	r3, [r4, #-112]
 9717 01b4 0EF10204 		add	r4, lr, #2
 9718              	.LVL1490:
 9719              	.L912:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9720              		.loc 1 6115 0 is_stmt 1
 9721 01b8 17F0010F 		tst	r7, #1
 9722 01bc 03D0     		beq	.L925
 9723 01be 4FF0300A 		mov	r10, #48
 9724              	.L913:
 9725              	.LVL1491:
 9726              		.loc 1 6115 0 is_stmt 0 discriminator 4
 9727 01c2 A046     		mov	r8, r4
6116:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 9728              		.loc 1 6116 0 is_stmt 1 discriminator 4
 9729 01c4 07E0     		b	.L914
 9730              	.LVL1492:
 9731              	.L925:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9732              		.loc 1 6115 0
 9733 01c6 4FF0200A 		mov	r10, #32
 9734 01ca FAE7     		b	.L913
 9735              	.LVL1493:
 9736              	.L916:
 9737              		.loc 1 6116 0 discriminator 3
 9738 01cc 5146     		mov	r1, r10
 9739 01ce 08A8     		add	r0, sp, #32
 9740 01d0 FFF7FEFF 		bl	putc_bfd
 9741              	.LVL1494:
 9742 01d4 C846     		mov	r8, r9
 9743              	.LVL1495:
 9744              	.L914:
 9745              		.loc 1 6116 0 is_stmt 0 discriminator 1
 9746 01d6 17F0020F 		tst	r7, #2
 9747 01da 04D1     		bne	.L917
 9748              		.loc 1 6116 0 discriminator 2
 9749 01dc 08F10109 		add	r9, r8, #1
 9750              	.LVL1496:
 9751 01e0 A845     		cmp	r8, r5
 9752 01e2 F3D3     		bcc	.L916
 9753              		.loc 1 6116 0
 9754 01e4 C846     		mov	r8, r9
 9755              	.LVL1497:
 9756              	.L917:
6117:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6118:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, str[--i]);
 9757              		.loc 1 6118 0 is_stmt 1 discriminator 1
 9758 01e6 013C     		subs	r4, r4, #1
 9759              	.LVL1498:
 9760 01e8 1CAB     		add	r3, sp, #112
 9761 01ea 2344     		add	r3, r3, r4
 9762 01ec 13F8701C 		ldrb	r1, [r3, #-112]	@ zero_extendqisi2
 9763 01f0 08A8     		add	r0, sp, #32
 9764 01f2 FFF7FEFF 		bl	putc_bfd
 9765              	.LVL1499:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 302


6119:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i);
 9766              		.loc 1 6119 0 discriminator 1
 9767 01f6 002C     		cmp	r4, #0
 9768 01f8 F5D1     		bne	.L917
 9769 01fa 04E0     		b	.L918
 9770              	.LVL1500:
 9771              	.L919:
6120:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 9772              		.loc 1 6120 0 discriminator 2
 9773 01fc 5146     		mov	r1, r10
 9774 01fe 08A8     		add	r0, sp, #32
 9775 0200 FFF7FEFF 		bl	putc_bfd
 9776              	.LVL1501:
 9777 0204 A046     		mov	r8, r4
 9778              	.LVL1502:
 9779              	.L918:
 9780              		.loc 1 6120 0 is_stmt 0 discriminator 1
 9781 0206 08F10104 		add	r4, r8, #1
 9782              	.LVL1503:
 9783 020a A845     		cmp	r8, r5
 9784 020c F6D3     		bcc	.L919
 9785              	.LVL1504:
 9786              	.L878:
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 9787              		.loc 1 6046 0 is_stmt 1
 9788 020e 741C     		adds	r4, r6, #1
 9789              	.LVL1505:
 9790 0210 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 9791              	.LVL1506:
6047:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 9792              		.loc 1 6047 0
 9793 0212 39B1     		cbz	r1, .L879
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 9794              		.loc 1 6048 0
 9795 0214 2529     		cmp	r1, #37
 9796 0216 3FF400AF 		beq	.L880
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 9797              		.loc 1 6049 0
 9798 021a 08A8     		add	r0, sp, #32
 9799 021c FFF7FEFF 		bl	putc_bfd
 9800              	.LVL1507:
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 9801              		.loc 1 6046 0
 9802 0220 2646     		mov	r6, r4
6050:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9803              		.loc 1 6050 0
 9804 0222 F4E7     		b	.L878
 9805              	.LVL1508:
 9806              	.L879:
6121:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 
6123:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
6124:Middlewares/Third_Party/FatFs/src/ff.c **** 
6125:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9807              		.loc 1 6125 0
 9808 0224 08A8     		add	r0, sp, #32
 9809 0226 FFF7FEFF 		bl	putc_flush
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 303


 9810              	.LVL1509:
6126:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9811              		.loc 1 6126 0
 9812 022a 1DB0     		add	sp, sp, #116
 9813              	.LCFI136:
 9814              		.cfi_def_cfa_offset 44
 9815              		@ sp needed
 9816 022c BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 9817              	.LCFI137:
 9818              		.cfi_restore 14
 9819              		.cfi_restore 10
 9820              		.cfi_restore 9
 9821              		.cfi_restore 8
 9822              		.cfi_restore 7
 9823              		.cfi_restore 6
 9824              		.cfi_restore 5
 9825              		.cfi_restore 4
 9826              		.cfi_def_cfa_offset 12
 9827 0230 03B0     		add	sp, sp, #12
 9828              	.LCFI138:
 9829              		.cfi_restore 3
 9830              		.cfi_restore 2
 9831              		.cfi_restore 1
 9832              		.cfi_def_cfa_offset 0
 9833 0232 7047     		bx	lr
 9834              		.cfi_endproc
 9835              	.LFE204:
 9837              		.section	.bss.FatFs,"aw",%nobits
 9838              		.align	2
 9839              		.set	.LANCHOR2,. + 0
 9842              	FatFs:
 9843 0000 00000000 		.space	8
 9843      00000000 
 9844              		.section	.bss.Files,"aw",%nobits
 9845              		.align	2
 9846              		.set	.LANCHOR0,. + 0
 9849              	Files:
 9850 0000 00000000 		.space	32
 9850      00000000 
 9850      00000000 
 9850      00000000 
 9850      00000000 
 9851              		.section	.bss.Fsid,"aw",%nobits
 9852              		.align	1
 9853              		.set	.LANCHOR3,. + 0
 9856              	Fsid:
 9857 0000 0000     		.space	2
 9858              		.section	.rodata.ExCvt,"a",%progbits
 9859              		.align	2
 9860              		.set	.LANCHOR1,. + 0
 9863              	ExCvt:
 9864 0000 43       		.byte	67
 9865 0001 55       		.byte	85
 9866 0002 45       		.byte	69
 9867 0003 41       		.byte	65
 9868 0004 41       		.byte	65
 9869 0005 41       		.byte	65
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 304


 9870 0006 41       		.byte	65
 9871 0007 43       		.byte	67
 9872 0008 45       		.byte	69
 9873 0009 45       		.byte	69
 9874 000a 45       		.byte	69
 9875 000b 49       		.byte	73
 9876 000c 49       		.byte	73
 9877 000d 49       		.byte	73
 9878 000e 41       		.byte	65
 9879 000f 41       		.byte	65
 9880 0010 45       		.byte	69
 9881 0011 92       		.byte	-110
 9882 0012 92       		.byte	-110
 9883 0013 4F       		.byte	79
 9884 0014 4F       		.byte	79
 9885 0015 4F       		.byte	79
 9886 0016 55       		.byte	85
 9887 0017 55       		.byte	85
 9888 0018 59       		.byte	89
 9889 0019 4F       		.byte	79
 9890 001a 55       		.byte	85
 9891 001b 4F       		.byte	79
 9892 001c 9C       		.byte	-100
 9893 001d 4F       		.byte	79
 9894 001e 9E       		.byte	-98
 9895 001f 9F       		.byte	-97
 9896 0020 41       		.byte	65
 9897 0021 49       		.byte	73
 9898 0022 4F       		.byte	79
 9899 0023 55       		.byte	85
 9900 0024 A5       		.byte	-91
 9901 0025 A5       		.byte	-91
 9902 0026 A6       		.byte	-90
 9903 0027 A7       		.byte	-89
 9904 0028 A8       		.byte	-88
 9905 0029 A9       		.byte	-87
 9906 002a AA       		.byte	-86
 9907 002b AB       		.byte	-85
 9908 002c AC       		.byte	-84
 9909 002d AD       		.byte	-83
 9910 002e AE       		.byte	-82
 9911 002f AF       		.byte	-81
 9912 0030 B0       		.byte	-80
 9913 0031 B1       		.byte	-79
 9914 0032 B2       		.byte	-78
 9915 0033 B3       		.byte	-77
 9916 0034 B4       		.byte	-76
 9917 0035 41       		.byte	65
 9918 0036 41       		.byte	65
 9919 0037 41       		.byte	65
 9920 0038 B8       		.byte	-72
 9921 0039 B9       		.byte	-71
 9922 003a BA       		.byte	-70
 9923 003b BB       		.byte	-69
 9924 003c BC       		.byte	-68
 9925 003d BD       		.byte	-67
 9926 003e BE       		.byte	-66
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 305


 9927 003f BF       		.byte	-65
 9928 0040 C0       		.byte	-64
 9929 0041 C1       		.byte	-63
 9930 0042 C2       		.byte	-62
 9931 0043 C3       		.byte	-61
 9932 0044 C4       		.byte	-60
 9933 0045 C5       		.byte	-59
 9934 0046 41       		.byte	65
 9935 0047 41       		.byte	65
 9936 0048 C8       		.byte	-56
 9937 0049 C9       		.byte	-55
 9938 004a CA       		.byte	-54
 9939 004b CB       		.byte	-53
 9940 004c CC       		.byte	-52
 9941 004d CD       		.byte	-51
 9942 004e CE       		.byte	-50
 9943 004f CF       		.byte	-49
 9944 0050 D1       		.byte	-47
 9945 0051 D1       		.byte	-47
 9946 0052 45       		.byte	69
 9947 0053 45       		.byte	69
 9948 0054 45       		.byte	69
 9949 0055 49       		.byte	73
 9950 0056 49       		.byte	73
 9951 0057 49       		.byte	73
 9952 0058 49       		.byte	73
 9953 0059 D9       		.byte	-39
 9954 005a DA       		.byte	-38
 9955 005b DB       		.byte	-37
 9956 005c DC       		.byte	-36
 9957 005d DD       		.byte	-35
 9958 005e 49       		.byte	73
 9959 005f DF       		.byte	-33
 9960 0060 4F       		.byte	79
 9961 0061 E1       		.byte	-31
 9962 0062 4F       		.byte	79
 9963 0063 4F       		.byte	79
 9964 0064 4F       		.byte	79
 9965 0065 4F       		.byte	79
 9966 0066 E6       		.byte	-26
 9967 0067 E8       		.byte	-24
 9968 0068 E8       		.byte	-24
 9969 0069 55       		.byte	85
 9970 006a 55       		.byte	85
 9971 006b 55       		.byte	85
 9972 006c 59       		.byte	89
 9973 006d 59       		.byte	89
 9974 006e EE       		.byte	-18
 9975 006f EF       		.byte	-17
 9976 0070 F0       		.byte	-16
 9977 0071 F1       		.byte	-15
 9978 0072 F2       		.byte	-14
 9979 0073 F3       		.byte	-13
 9980 0074 F4       		.byte	-12
 9981 0075 F5       		.byte	-11
 9982 0076 F6       		.byte	-10
 9983 0077 F7       		.byte	-9
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 306


 9984 0078 F8       		.byte	-8
 9985 0079 F9       		.byte	-7
 9986 007a FA       		.byte	-6
 9987 007b FB       		.byte	-5
 9988 007c FC       		.byte	-4
 9989 007d FD       		.byte	-3
 9990 007e FE       		.byte	-2
 9991 007f FF       		.byte	-1
 9992              		.section	.rodata.create_name.str1.4,"aMS",%progbits,1
 9993              		.align	2
 9994              	.LC0:
 9995 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 9995      3A3B3C3D 
 9995      3E3F5B5D 
 9995      7C7F00
 9996              		.section	.rodata.cst.13803,"a",%progbits
 9997              		.align	2
 9998              		.set	.LANCHOR5,. + 0
 10001              	cst.13803:
 10002 0000 0100     		.short	1
 10003 0002 0400     		.short	4
 10004 0004 1000     		.short	16
 10005 0006 4000     		.short	64
 10006 0008 0001     		.short	256
 10007 000a 0002     		.short	512
 10008 000c 0000     		.short	0
 10009              		.section	.rodata.cst32.13804,"a",%progbits
 10010              		.align	2
 10011              		.set	.LANCHOR4,. + 0
 10014              	cst32.13804:
 10015 0000 0100     		.short	1
 10016 0002 0200     		.short	2
 10017 0004 0400     		.short	4
 10018 0006 0800     		.short	8
 10019 0008 1000     		.short	16
 10020 000a 2000     		.short	32
 10021 000c 0000     		.short	0
 10022              		.section	.rodata.f_mkfs.str1.4,"aMS",%progbits,1
 10023              		.align	2
 10024              	.LC1:
 10025 0000 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 10025      53444F53 
 10025      352E3000 
 10026              	.LC2:
 10027 000c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 10027      414D4520 
 10027      20202046 
 10027      41543332 
 10027      20202000 
 10028              	.LC3:
 10029 0020 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 10029      414D4520 
 10029      20202046 
 10029      41542020 
 10029      20202000 
 10030              		.text
 10031              	.Letext0:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 307


 10032              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 10033              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 10034              		.file 4 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 10035              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 10036              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 10037              		.file 7 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stdarg.h"
 10038              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdio.h"
 10039              		.file 9 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 10040              		.file 10 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 10041              		.file 11 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 10042              		.file 12 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 10043              		.file 13 "<built-in>"
 10044              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 10045              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 10046              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 10047              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 10048              		.file 18 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 10049              		.file 19 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 10050              		.file 20 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 10051              		.file 21 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 10052              		.file 22 "Middlewares/Third_Party/FatFs/src/ff.h"
 10053              		.file 23 "Middlewares/Third_Party/FatFs/src/diskio.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 308


DEFINED SYMBOLS
                            *ABS*:00000000 ff.c
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:18     .text.ld_word:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:24     .text.ld_word:00000000 ld_word
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:47     .text.ld_dword:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:53     .text.ld_dword:00000000 ld_dword
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:83     .text.st_word:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:89     .text.st_word:00000000 st_word
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:109    .text.st_dword:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:115    .text.st_dword:00000000 st_dword
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:143    .text.mem_cpy:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:149    .text.mem_cpy:00000000 mem_cpy
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:180    .text.mem_set:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:186    .text.mem_set:00000000 mem_set
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:210    .text.mem_cmp:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:216    .text.mem_cmp:00000000 mem_cmp
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:266    .text.chk_chr:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:272    .text.chk_chr:00000000 chk_chr
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:302    .text.chk_lock:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:308    .text.chk_lock:00000000 chk_lock
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:421    .text.chk_lock:00000070 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:426    .text.enq_lock:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:432    .text.enq_lock:00000000 enq_lock
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:469    .text.enq_lock:0000001c $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:474    .text.inc_lock:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:480    .text.inc_lock:00000000 inc_lock
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:632    .text.inc_lock:000000a0 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:637    .text.dec_lock:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:643    .text.dec_lock:00000000 dec_lock
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:711    .text.dec_lock:0000003c $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:716    .text.clear_lock:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:722    .text.clear_lock:00000000 clear_lock
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:788    .text.clear_lock:00000038 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:793    .text.clust2sect:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:799    .text.clust2sect:00000000 clust2sect
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:832    .text.clmt_clust:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:838    .text.clmt_clust:00000000 clmt_clust
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:889    .text.ld_clust:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:895    .text.ld_clust:00000000 ld_clust
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:940    .text.st_clust:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:946    .text.st_clust:00000000 st_clust
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:989    .text.get_fileinfo:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:995    .text.get_fileinfo:00000000 get_fileinfo
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1107   .text.create_name:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1113   .text.create_name:00000000 create_name
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1293   .text.create_name:000000d4 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1299   .text.get_ldnumber:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1305   .text.get_ldnumber:00000000 get_ldnumber
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1401   .text.putc_init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1407   .text.putc_init:00000000 putc_init
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1426   .text.lock_fs:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1432   .text.lock_fs:00000000 lock_fs
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1469   .text.validate:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1475   .text.validate:00000000 validate
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1543   .text.sync_window:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1549   .text.sync_window:00000000 sync_window
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1640   .text.move_window:00000000 $t
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 309


C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1646   .text.move_window:00000000 move_window
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1707   .text.check_fs:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1713   .text.check_fs:00000000 check_fs
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1798   .text.check_fs:00000070 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1805   .text.find_volume:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:1811   .text.find_volume:00000000 find_volume
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:2361   .text.find_volume:000002cc $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:2369   .text.put_fat:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:2375   .text.put_fat:00000000 put_fat
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:2573   .text.get_fat:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:2579   .text.get_fat:00000000 get_fat
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:2745   .text.dir_sdi:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:2751   .text.dir_sdi:00000000 dir_sdi
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:2907   .text.create_chain:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:2913   .text.create_chain:00000000 create_chain
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3098   .text.remove_chain:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3104   .text.remove_chain:00000000 remove_chain
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3226   .text.dir_remove:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3232   .text.dir_remove:00000000 dir_remove
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3275   .text.dir_next:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3281   .text.dir_next:00000000 dir_next
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3508   .text.dir_find:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3514   .text.dir_find:00000000 dir_find
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3600   .text.follow_path:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3606   .text.follow_path:00000000 follow_path
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3732   .text.dir_alloc:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3738   .text.dir_alloc:00000000 dir_alloc
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3827   .text.dir_register:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3833   .text.dir_register:00000000 dir_register
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3896   .text.dir_read:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3902   .text.dir_read:00000000 dir_read
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:3999   .text.unlock_fs:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:4005   .text.unlock_fs:00000000 unlock_fs
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:4048   .text.sync_fs:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:4054   .text.sync_fs:00000000 sync_fs
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:4150   .text.sync_fs:00000084 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:4156   .text.f_mount:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:4163   .text.f_mount:00000000 f_mount
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:4285   .text.f_mount:0000008c $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:4290   .text.f_open:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:4297   .text.f_open:00000000 f_open
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:4732   .text.f_read:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:4739   .text.f_read:00000000 f_read
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:5098   .text.f_write:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:5105   .text.f_write:00000000 f_write
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:5496   .text.putc_bfd:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:5502   .text.putc_bfd:00000000 putc_bfd
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:5592   .text.putc_flush:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:5598   .text.putc_flush:00000000 putc_flush
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:5666   .text.f_sync:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:5673   .text.f_sync:00000000 f_sync
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:5814   .text.f_close:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:5821   .text.f_close:00000000 f_close
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:5891   .text.f_lseek:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:5898   .text.f_lseek:00000000 f_lseek
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:6495   .text.f_opendir:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:6502   .text.f_opendir:00000000 f_opendir
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 310


C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:6649   .text.f_closedir:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:6656   .text.f_closedir:00000000 f_closedir
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:6720   .text.f_readdir:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:6727   .text.f_readdir:00000000 f_readdir
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:6820   .text.f_stat:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:6827   .text.f_stat:00000000 f_stat
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:6908   .text.f_getfree:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:6915   .text.f_getfree:00000000 f_getfree
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:7134   .text.f_truncate:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:7141   .text.f_truncate:00000000 f_truncate
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:7324   .text.f_unlink:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:7331   .text.f_unlink:00000000 f_unlink
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:7518   .text.f_mkdir:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:7525   .text.f_mkdir:00000000 f_mkdir
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:7829   .text.f_rename:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:7836   .text.f_rename:00000000 f_rename
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:8072   .text.f_mkfs:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:8079   .text.f_mkfs:00000000 f_mkfs
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:8563   .text.f_mkfs:00000294 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:8572   .text.f_mkfs:000002ac $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9124   .text.f_mkfs:00000624 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9134   .text.f_gets:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9141   .text.f_gets:00000000 f_gets
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9233   .text.f_putc:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9240   .text.f_putc:00000000 f_putc
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9280   .text.f_puts:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9287   .text.f_puts:00000000 f_puts
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9336   .text.f_printf:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9343   .text.f_printf:00000000 f_printf
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9471   .text.f_printf:00000086 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9838   .bss.FatFs:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9842   .bss.FatFs:00000000 FatFs
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9845   .bss.Files:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9849   .bss.Files:00000000 Files
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9852   .bss.Fsid:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9856   .bss.Fsid:00000000 Fsid
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9859   .rodata.ExCvt:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9863   .rodata.ExCvt:00000000 ExCvt
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9993   .rodata.create_name.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9997   .rodata.cst.13803:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:10001  .rodata.cst.13803:00000000 cst.13803
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:10010  .rodata.cst32.13804:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:10014  .rodata.cst32.13804:00000000 cst32.13804
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:10023  .rodata.f_mkfs.str1.4:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9495   .text.f_printf:0000009d $d
C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s:9495   .text.f_printf:0000009e $t

UNDEFINED SYMBOLS
ff_req_grant
disk_status
disk_write
disk_read
disk_initialize
ff_rel_grant
disk_ioctl
ff_del_syncobj
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccGTSr5d.s 			page 311


ff_cre_syncobj
get_fattime
