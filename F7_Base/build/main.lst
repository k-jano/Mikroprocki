ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	MX_SDMMC1_SD_Init:
  25              	.LFB153:
  26              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        ****   ******************************************************************************
   3:main.c        ****   * @file           : main.c
   4:main.c        ****   * @brief          : Main program body
   5:main.c        ****   ******************************************************************************
   6:main.c        ****   * This notice applies to any and all portions of this file
   7:main.c        ****   * that are not between comment pairs USER CODE BEGIN and
   8:main.c        ****   * USER CODE END. Other portions of this file, whether 
   9:main.c        ****   * inserted by the user or by software development tools
  10:main.c        ****   * are owned by their respective copyright owners.
  11:main.c        ****   *
  12:main.c        ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:main.c        ****   * All rights reserved.
  14:main.c        ****   *
  15:main.c        ****   * Redistribution and use in source and binary forms, with or without 
  16:main.c        ****   * modification, are permitted, provided that the following conditions are met:
  17:main.c        ****   *
  18:main.c        ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:main.c        ****   *    this list of conditions and the following disclaimer.
  20:main.c        ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:main.c        ****   *    this list of conditions and the following disclaimer in the documentation
  22:main.c        ****   *    and/or other materials provided with the distribution.
  23:main.c        ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:main.c        ****   *    contributors to this software may be used to endorse or promote products 
  25:main.c        ****   *    derived from this software without specific written permission.
  26:main.c        ****   * 4. This software, including modifications and/or derivative works of this 
  27:main.c        ****   *    software, must execute solely and exclusively on microcontroller or
  28:main.c        ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:main.c        ****   * 5. Redistribution and use of this software other than as permitted under 
  30:main.c        ****   *    this license is void and will automatically terminate your rights under 
  31:main.c        ****   *    this license. 
  32:main.c        ****   *
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 2


  33:main.c        ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:main.c        ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:main.c        ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:main.c        ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:main.c        ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:main.c        ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:main.c        ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:main.c        ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:main.c        ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:main.c        ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:main.c        ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:main.c        ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:main.c        ****   *
  46:main.c        ****   ******************************************************************************
  47:main.c        ****   */
  48:main.c        **** /* Includes ------------------------------------------------------------------*/
  49:main.c        **** #include "main.h"
  50:main.c        **** #include "stm32f7xx_hal.h"
  51:main.c        **** #include "cmsis_os.h"
  52:main.c        **** #include "fatfs.h"
  53:main.c        **** #include "usb_host.h"
  54:main.c        **** 
  55:main.c        **** /* USER CODE BEGIN Includes */
  56:main.c        **** #include  <errno.h>
  57:main.c        **** #include  <sys/unistd.h>
  58:main.c        **** 
  59:main.c        **** #include "stm32746g_discovery_lcd.h"
  60:main.c        **** #include "Utilities/Fonts/fonts.h"
  61:main.c        **** #include "stm32746g_discovery_ts.h"
  62:main.c        **** #include "term_io.h"
  63:main.c        **** #include "dbgu.h"
  64:main.c        **** #include "ansi.h"
  65:main.c        **** 
  66:main.c        **** #include "FreeRTOS.h"
  67:main.c        **** #include "task.h"
  68:main.c        **** #include "queue.h"
  69:main.c        **** 
  70:main.c        **** #define  CIRCLE_RADIUS        30
  71:main.c        **** /* Private macro -------------------------------------------------------------*/
  72:main.c        **** #define  CIRCLE_XPOS(i)       ((i * BSP_LCD_GetXSize()) / 5)
  73:main.c        **** #define  CIRCLE_YPOS(i)       (BSP_LCD_GetYSize() - CIRCLE_RADIUS - 60)
  74:main.c        **** /* Private variables ---------------------------------------------------------*/
  75:main.c        **** 
  76:main.c        **** 
  77:main.c        **** /* USER CODE END Includes */
  78:main.c        **** 
  79:main.c        **** /* Private variables ---------------------------------------------------------*/
  80:main.c        **** ADC_HandleTypeDef hadc3;
  81:main.c        **** 
  82:main.c        **** CRC_HandleTypeDef hcrc;
  83:main.c        **** 
  84:main.c        **** DMA2D_HandleTypeDef hdma2d;
  85:main.c        **** 
  86:main.c        **** RNG_HandleTypeDef hrng;
  87:main.c        **** 
  88:main.c        **** RTC_HandleTypeDef hrtc;
  89:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 3


  90:main.c        **** SD_HandleTypeDef hsd1;
  91:main.c        **** 
  92:main.c        **** TIM_HandleTypeDef htim10;
  93:main.c        **** 
  94:main.c        **** UART_HandleTypeDef huart1;
  95:main.c        **** UART_HandleTypeDef huart6;
  96:main.c        **** DMA_HandleTypeDef hdma_usart1_rx;
  97:main.c        **** DMA_HandleTypeDef hdma_usart6_rx;
  98:main.c        **** 
  99:main.c        **** 
 100:main.c        **** /* USER CODE BEGIN PV */
 101:main.c        **** /* Private variables ---------------------------------------------------------*/
 102:main.c        **** 
 103:main.c        **** 
 104:main.c        **** /* Private function prototypes -----------------------------------------------*/
 105:main.c        **** void SystemClock_Config(void);
 106:main.c        **** static void MX_GPIO_Init(void);
 107:main.c        **** static void MX_DMA_Init(void);
 108:main.c        **** static void MX_ADC3_Init(void);
 109:main.c        **** static void MX_CRC_Init(void);
 110:main.c        **** static void MX_DMA2D_Init(void);
 111:main.c        **** static void MX_RNG_Init(void);
 112:main.c        **** static void MX_RTC_Init(void);
 113:main.c        **** static void MX_SDMMC1_SD_Init(void);
 114:main.c        **** static void MX_TIM10_Init(void);
 115:main.c        **** static void MX_USART1_UART_Init(void);
 116:main.c        **** static void MX_USART6_UART_Init(void);
 117:main.c        **** void StartDefaultTask(void const * argument);
 118:main.c        **** 
 119:main.c        **** static TS_StateTypeDef  TS_State;
 120:main.c        **** static TS_StateTypeDef  TS_State1;
 121:main.c        **** /* Private function prototypes -----------------------------------------------*/
 122:main.c        **** static void Touchscreen_SetHint(void);
 123:main.c        **** static void Touchscreen_DrawBackground (uint8_t state);
 124:main.c        **** /* Private functions ---------------------------------------------------------*/
 125:main.c        **** 
 126:main.c        **** void mainTask(void* p);
 127:main.c        **** 
 128:main.c        **** #define LCD_X_SIZE			RK043FN48H_WIDTH
 129:main.c        **** #define LCD_Y_SIZE			RK043FN48H_HEIGHT
 130:main.c        **** static uint32_t lcd_image_fg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attribute
 131:main.c        **** static uint32_t lcd_image_bg[LCD_Y_SIZE][LCD_X_SIZE] __attribute__((section(".sdram"))) __attribute
 132:main.c        **** 
 133:main.c        **** #define PRINTF_USES_HAL_TX		0
 134:main.c        **** 
 135:main.c        **** int _write(int file, char *data, int len)
 136:main.c        **** {
 137:main.c        **** 	if ((file != STDOUT_FILENO) && (file != STDERR_FILENO))
 138:main.c        **** 	{
 139:main.c        **** 		errno = EBADF;
 140:main.c        **** 		return -1;
 141:main.c        **** 	}
 142:main.c        **** 	
 143:main.c        **** 	#if PRINTF_USES_HAL_TX
 144:main.c        **** 		HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, (uint8_t*)data, len, 100);	
 145:main.c        **** 		
 146:main.c        **** 		if(status==HAL_OK)
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 4


 147:main.c        **** 			return len;
 148:main.c        **** 		else
 149:main.c        **** 			return 0;
 150:main.c        **** 	#else
 151:main.c        **** 		int left = len;
 152:main.c        **** 		while(left--)
 153:main.c        **** 		{
 154:main.c        **** 			while(__HAL_UART_GET_FLAG(&huart1, UART_FLAG_TXE) == RESET) { ; }
 155:main.c        **** 			huart1.Instance->TDR = (uint16_t)(*data++);
 156:main.c        **** 		}
 157:main.c        **** 		return len;
 158:main.c        **** 	#endif
 159:main.c        **** }
 160:main.c        **** 
 161:main.c        **** char inkey(void)
 162:main.c        **** {
 163:main.c        **** 	uint32_t flags = huart1.Instance->ISR;
 164:main.c        **** 	
 165:main.c        **** 	if((flags & UART_FLAG_RXNE) || (flags & UART_FLAG_ORE))
 166:main.c        **** 	{
 167:main.c        **** 		__HAL_UART_CLEAR_OREFLAG(&huart1);
 168:main.c        **** 		return (huart1.Instance->RDR);
 169:main.c        **** 	}
 170:main.c        **** 	else
 171:main.c        **** 		return 0;
 172:main.c        **** }
 173:main.c        **** 
 174:main.c        **** void initialize_touchscreen(){
 175:main.c        **** 	uint8_t  status = 0;
 176:main.c        **** 	status = BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
 177:main.c        **** 	if (status != TS_OK)
 178:main.c        **** 	{
 179:main.c        **** 		BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 180:main.c        **** 		BSP_LCD_SetTextColor(LCD_COLOR_RED);
 181:main.c        **** 		BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() - 95, (uint8_t *)"ERROR", CENTER_MODE);
 182:main.c        **** 		BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() - 80, (uint8_t *)"Touchscreen cannot be initialized
 183:main.c        **** 		return;
 184:main.c        **** 	}
 185:main.c        **** }
 186:main.c        **** 
 187:main.c        **** void lcd_start() {
 188:main.c        **** 	BSP_LCD_Init();
 189:main.c        **** 	BSP_LCD_LayerRgb565Init(1, (uint32_t)&lcd_image_fg);
 190:main.c        **** 	BSP_LCD_LayerRgb565Init(0, (uint32_t)&lcd_image_bg);
 191:main.c        **** 	
 192:main.c        **** 	BSP_LCD_DisplayOn();
 193:main.c        **** 	
 194:main.c        **** 	BSP_LCD_SelectLayer(0);     //Czyszczenie tla i ustawianie koloru
 195:main.c        **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 196:main.c        **** 	BSP_LCD_SelectLayer(1);
 197:main.c        **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 198:main.c        **** 	
 199:main.c        **** 	BSP_LCD_SetTransparency(0, 255);  //Przezroczystosc
 200:main.c        **** 	BSP_LCD_SetTransparency(1, 100);
 201:main.c        **** 	
 202:main.c        **** }
 203:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 5


 204:main.c        **** void draw_background(){
 205:main.c        **** 	BSP_LCD_SelectLayer(0);
 206:main.c        **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLUE);
 207:main.c        **** 	BSP_LCD_FillRect(0, 136, 480, 130);
 208:main.c        **** 	BSP_LCD_SelectLayer(0);
 209:main.c        **** 	BSP_LCD_SetTextColor(LCD_COLOR_ORANGE);
 210:main.c        **** 	BSP_LCD_FillEllipse(240, 130, 30, 30);
 211:main.c        **** }
 212:main.c        **** /**
 213:main.c        ****   * @brief  The application entry point.
 214:main.c        ****   *
 215:main.c        ****   * @retval None
 216:main.c        ****   */
 217:main.c        **** int main(void)
 218:main.c        **** {
 219:main.c        ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 220:main.c        ****   HAL_Init();
 221:main.c        **** 
 222:main.c        ****   /* Configure the system clock */
 223:main.c        ****   SystemClock_Config();
 224:main.c        **** 
 225:main.c        ****   /* Initialize all configured peripherals */
 226:main.c        ****   MX_GPIO_Init();
 227:main.c        ****   MX_DMA_Init();
 228:main.c        ****   MX_ADC3_Init();
 229:main.c        ****   MX_CRC_Init();
 230:main.c        ****   MX_DMA2D_Init();
 231:main.c        ****   MX_RNG_Init();
 232:main.c        ****   MX_RTC_Init();
 233:main.c        ****   MX_SDMMC1_SD_Init();
 234:main.c        ****   MX_TIM10_Init();
 235:main.c        ****   MX_USART1_UART_Init();
 236:main.c        ****   MX_USART6_UART_Init();
 237:main.c        **** 
 238:main.c        ****   debug_init(&huart1);
 239:main.c        **** 
 240:main.c        ****   xprintf(ANSI_FG_GREEN "F7_Base Project" ANSI_FG_DEFAULT "\n");
 241:main.c        **** 
 242:main.c        ****   printf("Regular printf says hello!\n");
 243:main.c        **** 
 244:main.c        ****   xTaskCreate( mainTask, NULL, 1024, NULL, 2, NULL );
 245:main.c        **** 
 246:main.c        **** 
 247:main.c        ****   /* Start scheduler */
 248:main.c        ****   vTaskStartScheduler();
 249:main.c        ****   
 250:main.c        ****   /* We should never get here as control is now taken by the scheduler */
 251:main.c        ****   while (1)
 252:main.c        ****   {
 253:main.c        **** 	  
 254:main.c        ****   }
 255:main.c        **** 
 256:main.c        **** 
 257:main.c        **** }
 258:main.c        **** 
 259:main.c        **** /**
 260:main.c        ****   * @brief System Clock Configuration
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 6


 261:main.c        ****   * @retval None
 262:main.c        ****   */
 263:main.c        **** void SystemClock_Config(void)
 264:main.c        **** {
 265:main.c        **** 
 266:main.c        ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 267:main.c        ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 268:main.c        ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 269:main.c        **** 
 270:main.c        ****     /**Configure the main internal regulator output voltage 
 271:main.c        ****     */
 272:main.c        ****   __HAL_RCC_PWR_CLK_ENABLE();
 273:main.c        **** 
 274:main.c        ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 275:main.c        **** 
 276:main.c        ****     /**Initializes the CPU, AHB and APB busses clocks 
 277:main.c        ****     */
 278:main.c        ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 279:main.c        ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 280:main.c        ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 281:main.c        ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 282:main.c        ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 283:main.c        ****   RCC_OscInitStruct.PLL.PLLM = 25;
 284:main.c        ****   RCC_OscInitStruct.PLL.PLLN = 432;
 285:main.c        ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 286:main.c        ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 287:main.c        ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 288:main.c        ****   {
 289:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 290:main.c        ****   }
 291:main.c        **** 
 292:main.c        ****     /**Activate the Over-Drive mode 
 293:main.c        ****     */
 294:main.c        ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 295:main.c        ****   {
 296:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 297:main.c        ****   }
 298:main.c        **** 
 299:main.c        ****     /**Initializes the CPU, AHB and APB busses clocks 
 300:main.c        ****     */
 301:main.c        ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 302:main.c        ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 303:main.c        ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 304:main.c        ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 305:main.c        ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 306:main.c        ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 307:main.c        **** 
 308:main.c        ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 309:main.c        ****   {
 310:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 311:main.c        ****   }
 312:main.c        **** 
 313:main.c        ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART1
 314:main.c        ****                               |RCC_PERIPHCLK_USART6|RCC_PERIPHCLK_SDMMC1
 315:main.c        ****                               |RCC_PERIPHCLK_CLK48;
 316:main.c        ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 317:main.c        ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 7


 318:main.c        ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 319:main.c        ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 320:main.c        ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 321:main.c        ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 322:main.c        ****   {
 323:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 324:main.c        ****   }
 325:main.c        **** 
 326:main.c        ****     /**Configure the Systick interrupt time 
 327:main.c        ****     */
 328:main.c        ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 329:main.c        **** 
 330:main.c        ****     /**Configure the Systick 
 331:main.c        ****     */
 332:main.c        ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 333:main.c        **** 
 334:main.c        ****   /* SysTick_IRQn interrupt configuration */
 335:main.c        ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 336:main.c        **** }
 337:main.c        **** 
 338:main.c        **** /* ADC3 init function */
 339:main.c        **** static void MX_ADC3_Init(void)
 340:main.c        **** {
 341:main.c        **** 
 342:main.c        ****   ADC_ChannelConfTypeDef sConfig;
 343:main.c        **** 
 344:main.c        ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 345:main.c        ****     */
 346:main.c        ****   hadc3.Instance = ADC3;
 347:main.c        ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 348:main.c        ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 349:main.c        ****   hadc3.Init.ScanConvMode = DISABLE;
 350:main.c        ****   hadc3.Init.ContinuousConvMode = DISABLE;
 351:main.c        ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 352:main.c        ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 353:main.c        ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 354:main.c        ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 355:main.c        ****   hadc3.Init.NbrOfConversion = 1;
 356:main.c        ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 357:main.c        ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 358:main.c        ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 359:main.c        ****   {
 360:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 361:main.c        ****   }
 362:main.c        **** 
 363:main.c        ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 364:main.c        ****     */
 365:main.c        ****   sConfig.Channel = ADC_CHANNEL_0;
 366:main.c        ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 367:main.c        ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 368:main.c        ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 369:main.c        ****   {
 370:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 371:main.c        ****   }
 372:main.c        **** 
 373:main.c        **** }
 374:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 8


 375:main.c        **** /* CRC init function */
 376:main.c        **** static void MX_CRC_Init(void)
 377:main.c        **** {
 378:main.c        **** 
 379:main.c        ****   hcrc.Instance = CRC;
 380:main.c        ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 381:main.c        ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 382:main.c        ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 383:main.c        ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 384:main.c        ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 385:main.c        ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 386:main.c        ****   {
 387:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 388:main.c        ****   }
 389:main.c        **** 
 390:main.c        **** }
 391:main.c        **** 
 392:main.c        **** /* DMA2D init function */
 393:main.c        **** static void MX_DMA2D_Init(void)
 394:main.c        **** {
 395:main.c        **** 
 396:main.c        ****   hdma2d.Instance = DMA2D;
 397:main.c        ****   hdma2d.Init.Mode = DMA2D_M2M;
 398:main.c        ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 399:main.c        ****   hdma2d.Init.OutputOffset = 0;
 400:main.c        ****   hdma2d.LayerCfg[1].InputOffset = 0;
 401:main.c        ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 402:main.c        ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 403:main.c        ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 404:main.c        ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 405:main.c        ****   {
 406:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 407:main.c        ****   }
 408:main.c        **** 
 409:main.c        ****   if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 410:main.c        ****   {
 411:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 412:main.c        ****   }
 413:main.c        **** 
 414:main.c        **** }
 415:main.c        **** 
 416:main.c        **** /* RNG init function */
 417:main.c        **** static void MX_RNG_Init(void)
 418:main.c        **** {
 419:main.c        **** 
 420:main.c        ****   hrng.Instance = RNG;
 421:main.c        ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 422:main.c        ****   {
 423:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 424:main.c        ****   }
 425:main.c        **** 
 426:main.c        **** }
 427:main.c        **** 
 428:main.c        **** /* RTC init function */
 429:main.c        **** static void MX_RTC_Init(void)
 430:main.c        **** {
 431:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 9


 432:main.c        ****   RTC_TimeTypeDef sTime;
 433:main.c        ****   RTC_DateTypeDef sDate;
 434:main.c        **** 
 435:main.c        ****     /**Initialize RTC Only 
 436:main.c        ****     */
 437:main.c        ****   hrtc.Instance = RTC;
 438:main.c        **** if(HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR0) != 0x32F2){
 439:main.c        ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 440:main.c        ****   hrtc.Init.AsynchPrediv = 127;
 441:main.c        ****   hrtc.Init.SynchPrediv = 255;
 442:main.c        ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 443:main.c        ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 444:main.c        ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 445:main.c        ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 446:main.c        ****   {
 447:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 448:main.c        ****   }
 449:main.c        **** 
 450:main.c        ****     /**Initialize RTC and set the Time and Date 
 451:main.c        ****     */
 452:main.c        ****   sTime.Hours = 0x0;
 453:main.c        ****   sTime.Minutes = 0x0;
 454:main.c        ****   sTime.Seconds = 0x0;
 455:main.c        ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 456:main.c        ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 457:main.c        ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 458:main.c        ****   {
 459:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 460:main.c        ****   }
 461:main.c        **** 
 462:main.c        ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 463:main.c        ****   sDate.Month = RTC_MONTH_JANUARY;
 464:main.c        ****   sDate.Date = 0x1;
 465:main.c        ****   sDate.Year = 0x0;
 466:main.c        **** 
 467:main.c        ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 468:main.c        ****   {
 469:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 470:main.c        ****   }
 471:main.c        **** 
 472:main.c        ****     HAL_RTCEx_BKUPWrite(&hrtc,RTC_BKP_DR0,0x32F2);
 473:main.c        ****   }
 474:main.c        **** 
 475:main.c        **** }
 476:main.c        **** 
 477:main.c        **** /* SDMMC1 init function */
 478:main.c        **** static void MX_SDMMC1_SD_Init(void)
 479:main.c        **** {
  27              		.loc 1 479 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 480:main.c        **** 
 481:main.c        ****   hsd1.Instance = SDMMC1;
  32              		.loc 1 481 0
  33 0000 054B     		ldr	r3, .L2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 10


  34 0002 064A     		ldr	r2, .L2+4
  35 0004 1A60     		str	r2, [r3]
 482:main.c        ****   hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  36              		.loc 1 482 0
  37 0006 0022     		movs	r2, #0
  38 0008 5A60     		str	r2, [r3, #4]
 483:main.c        ****   hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  39              		.loc 1 483 0
  40 000a 9A60     		str	r2, [r3, #8]
 484:main.c        ****   hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  41              		.loc 1 484 0
  42 000c DA60     		str	r2, [r3, #12]
 485:main.c        ****   hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
  43              		.loc 1 485 0
  44 000e 1A61     		str	r2, [r3, #16]
 486:main.c        ****   hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  45              		.loc 1 486 0
  46 0010 5A61     		str	r2, [r3, #20]
 487:main.c        ****   hsd1.Init.ClockDiv = 0;
  47              		.loc 1 487 0
  48 0012 9A61     		str	r2, [r3, #24]
  49 0014 7047     		bx	lr
  50              	.L3:
  51 0016 00BF     		.align	2
  52              	.L2:
  53 0018 00000000 		.word	hsd1
  54 001c 002C0140 		.word	1073818624
  55              		.cfi_endproc
  56              	.LFE153:
  58              		.section	.text.MX_GPIO_Init,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv5-sp-d16
  65              	MX_GPIO_Init:
  66              	.LFB158:
 488:main.c        **** 
 489:main.c        **** }
 490:main.c        **** 
 491:main.c        **** /* TIM10 init function */
 492:main.c        **** static void MX_TIM10_Init(void)
 493:main.c        **** {
 494:main.c        **** 
 495:main.c        ****   htim10.Instance = TIM10;
 496:main.c        ****   htim10.Init.Prescaler = 0;
 497:main.c        ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 498:main.c        ****   htim10.Init.Period = 0;
 499:main.c        ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 500:main.c        ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 501:main.c        ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 502:main.c        ****   {
 503:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 504:main.c        ****   }
 505:main.c        **** 
 506:main.c        **** }
 507:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 11


 508:main.c        **** /* USART1 init function */
 509:main.c        **** static void MX_USART1_UART_Init(void)
 510:main.c        **** {
 511:main.c        **** 
 512:main.c        ****   huart1.Instance = USART1;
 513:main.c        ****   huart1.Init.BaudRate = 115200;
 514:main.c        ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 515:main.c        ****   huart1.Init.StopBits = UART_STOPBITS_1;
 516:main.c        ****   huart1.Init.Parity = UART_PARITY_NONE;
 517:main.c        ****   huart1.Init.Mode = UART_MODE_TX_RX;
 518:main.c        ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 519:main.c        ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 520:main.c        ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 521:main.c        ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 522:main.c        ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 523:main.c        ****   {
 524:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 525:main.c        ****   }
 526:main.c        **** 
 527:main.c        **** }
 528:main.c        **** 
 529:main.c        **** /* USART6 init function */
 530:main.c        **** static void MX_USART6_UART_Init(void)
 531:main.c        **** {
 532:main.c        **** 
 533:main.c        ****   huart6.Instance = USART6;
 534:main.c        ****   huart6.Init.BaudRate = 115200;
 535:main.c        ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 536:main.c        ****   huart6.Init.StopBits = UART_STOPBITS_1;
 537:main.c        ****   huart6.Init.Parity = UART_PARITY_NONE;
 538:main.c        ****   huart6.Init.Mode = UART_MODE_TX_RX;
 539:main.c        ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 540:main.c        ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 541:main.c        ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 542:main.c        ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 543:main.c        ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 544:main.c        ****   {
 545:main.c        ****     _Error_Handler(__FILE__, __LINE__);
 546:main.c        ****   }
 547:main.c        **** 
 548:main.c        **** }
 549:main.c        **** 
 550:main.c        **** /** 
 551:main.c        ****   * Enable DMA controller clock
 552:main.c        ****   */
 553:main.c        **** static void MX_DMA_Init(void) 
 554:main.c        **** {
 555:main.c        ****   /* DMA controller clock enable */
 556:main.c        ****   __HAL_RCC_DMA2_CLK_ENABLE();
 557:main.c        **** 
 558:main.c        ****   /* DMA interrupt init */
 559:main.c        ****   /* DMA2_Stream1_IRQn interrupt configuration */
 560:main.c        ****   HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 5, 0);
 561:main.c        ****   HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 562:main.c        ****   /* DMA2_Stream2_IRQn interrupt configuration */
 563:main.c        ****   HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 5, 0);
 564:main.c        ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 12


 565:main.c        **** 
 566:main.c        **** }
 567:main.c        **** 
 568:main.c        **** /** Configure pins
 569:main.c        ****      PE4   ------> LTDC_B0
 570:main.c        ****      PE2   ------> QUADSPI_BK1_IO2
 571:main.c        ****      PG14   ------> ETH_TXD1
 572:main.c        ****      PE1   ------> FMC_NBL1
 573:main.c        ****      PE0   ------> FMC_NBL0
 574:main.c        ****      PB8   ------> I2C1_SCL
 575:main.c        ****      PB5   ------> USB_OTG_HS_ULPI_D7
 576:main.c        ****      PB4   ------> S_TIM3_CH1
 577:main.c        ****      PD7   ------> SPDIFRX_IN0
 578:main.c        ****      PA15   ------> S_TIM2_CH1_ETR
 579:main.c        ****      PE5   ------> DCMI_D6
 580:main.c        ****      PE6   ------> DCMI_D7
 581:main.c        ****      PG13   ------> ETH_TXD0
 582:main.c        ****      PB9   ------> I2C1_SDA
 583:main.c        ****      PB6   ------> QUADSPI_BK1_NCS
 584:main.c        ****      PG15   ------> FMC_SDNCAS
 585:main.c        ****      PG11   ------> ETH_TX_EN
 586:main.c        ****      PJ13   ------> LTDC_B1
 587:main.c        ****      PD0   ------> FMC_D2_DA2
 588:main.c        ****      PI4   ------> SAI2_MCLK_A
 589:main.c        ****      PK7   ------> LTDC_DE
 590:main.c        ****      PK6   ------> LTDC_B7
 591:main.c        ****      PK5   ------> LTDC_B6
 592:main.c        ****      PG12   ------> LTDC_B4
 593:main.c        ****      PG10   ------> SAI2_SD_B
 594:main.c        ****      PJ14   ------> LTDC_B2
 595:main.c        ****      PD3   ------> DCMI_D5
 596:main.c        ****      PD1   ------> FMC_D3_DA3
 597:main.c        ****      PF0   ------> FMC_A0
 598:main.c        ****      PI5   ------> SAI2_SCK_A
 599:main.c        ****      PI7   ------> SAI2_FS_A
 600:main.c        ****      PI10   ------> LTDC_HSYNC
 601:main.c        ****      PI6   ------> SAI2_SD_A
 602:main.c        ****      PK4   ------> LTDC_B5
 603:main.c        ****      PG9   ------> DCMI_VSYNC
 604:main.c        ****      PJ15   ------> LTDC_B3
 605:main.c        ****      PI1   ------> SPI2_SCK
 606:main.c        ****      PF1   ------> FMC_A1
 607:main.c        ****      PI9   ------> LTDC_VSYNC
 608:main.c        ****      PH14   ------> DCMI_D4
 609:main.c        ****      PI0   ------> S_TIM5_CH4
 610:main.c        ****      PK1   ------> LTDC_G6
 611:main.c        ****      PK2   ------> LTDC_G7
 612:main.c        ****      PA8   ------> S_TIM1_CH1
 613:main.c        ****      PF2   ------> FMC_A2
 614:main.c        ****      PI15   ------> LTDC_R0
 615:main.c        ****      PJ11   ------> LTDC_G4
 616:main.c        ****      PK0   ------> LTDC_G5
 617:main.c        ****      PF3   ------> FMC_A3
 618:main.c        ****      PI14   ------> LTDC_CLK
 619:main.c        ****      PH4   ------> USB_OTG_HS_ULPI_NXT
 620:main.c        ****      PJ8   ------> LTDC_G1
 621:main.c        ****      PJ10   ------> LTDC_G3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 13


 622:main.c        ****      PG8   ------> FMC_SDCLK
 623:main.c        ****      PF4   ------> FMC_A4
 624:main.c        ****      PH5   ------> FMC_SDNWE
 625:main.c        ****      PH3   ------> FMC_SDNE0
 626:main.c        ****      PJ7   ------> LTDC_G0
 627:main.c        ****      PJ9   ------> LTDC_G2
 628:main.c        ****      PF5   ------> FMC_A5
 629:main.c        ****      PJ6   ------> LTDC_R7
 630:main.c        ****      PD15   ------> FMC_D1_DA1
 631:main.c        ****      PB13   ------> USB_OTG_HS_ULPI_D6
 632:main.c        ****      PD10   ------> FMC_D15_DA15
 633:main.c        ****      PC3   ------> FMC_SDCKE0
 634:main.c        ****      PD14   ------> FMC_D0_DA0
 635:main.c        ****      PB12   ------> USB_OTG_HS_ULPI_D5
 636:main.c        ****      PD9   ------> FMC_D14_DA14
 637:main.c        ****      PD8   ------> FMC_D13_DA13
 638:main.c        ****      PC0   ------> USB_OTG_HS_ULPI_STP
 639:main.c        ****      PC1   ------> ETH_MDC
 640:main.c        ****      PC2   ------> USB_OTG_HS_ULPI_DIR
 641:main.c        ****      PB2   ------> QUADSPI_CLK
 642:main.c        ****      PF12   ------> FMC_A6
 643:main.c        ****      PG1   ------> FMC_A11
 644:main.c        ****      PF15   ------> FMC_A9
 645:main.c        ****      PJ4   ------> LTDC_R5
 646:main.c        ****      PD12   ------> QUADSPI_BK1_IO1
 647:main.c        ****      PD13   ------> QUADSPI_BK1_IO3
 648:main.c        ****      PJ5   ------> LTDC_R6
 649:main.c        ****      PH12   ------> DCMI_D3
 650:main.c        ****      PA1   ------> ETH_REF_CLK
 651:main.c        ****      PA0/WKUP   ------> ADCx_IN0
 652:main.c        ****      PA4   ------> DCMI_HSYNC
 653:main.c        ****      PC4   ------> ETH_RXD0
 654:main.c        ****      PF13   ------> FMC_A7
 655:main.c        ****      PG0   ------> FMC_A10
 656:main.c        ****      PJ3   ------> LTDC_R4
 657:main.c        ****      PE8   ------> FMC_D5_DA5
 658:main.c        ****      PD11   ------> QUADSPI_BK1_IO0
 659:main.c        ****      PG5   ------> FMC_A15_BA1
 660:main.c        ****      PG4   ------> FMC_A14_BA0
 661:main.c        ****      PH7   ------> I2C3_SCL
 662:main.c        ****      PH9   ------> DCMI_D0
 663:main.c        ****      PH11   ------> DCMI_D2
 664:main.c        ****      PA2   ------> ETH_MDIO
 665:main.c        ****      PA6   ------> DCMI_PIXCLK
 666:main.c        ****      PA5   ------> USB_OTG_HS_ULPI_CK
 667:main.c        ****      PC5   ------> ETH_RXD1
 668:main.c        ****      PF14   ------> FMC_A8
 669:main.c        ****      PJ2   ------> LTDC_R3
 670:main.c        ****      PF11   ------> FMC_SDNRAS
 671:main.c        ****      PE9   ------> FMC_D6_DA6
 672:main.c        ****      PE11   ------> FMC_D8_DA8
 673:main.c        ****      PE14   ------> FMC_D11_DA11
 674:main.c        ****      PB10   ------> USB_OTG_HS_ULPI_D3
 675:main.c        ****      PH6   ------> S_TIM12_CH1
 676:main.c        ****      PH8   ------> I2C3_SDA
 677:main.c        ****      PH10   ------> DCMI_D1
 678:main.c        ****      PA3   ------> USB_OTG_HS_ULPI_D0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 14


 679:main.c        ****      PA7   ------> ETH_CRS_DV
 680:main.c        ****      PB1   ------> USB_OTG_HS_ULPI_D2
 681:main.c        ****      PB0   ------> USB_OTG_HS_ULPI_D1
 682:main.c        ****      PJ0   ------> LTDC_R1
 683:main.c        ****      PJ1   ------> LTDC_R2
 684:main.c        ****      PE7   ------> FMC_D4_DA4
 685:main.c        ****      PE10   ------> FMC_D7_DA7
 686:main.c        ****      PE12   ------> FMC_D9_DA9
 687:main.c        ****      PE15   ------> FMC_D12_DA12
 688:main.c        ****      PE13   ------> FMC_D10_DA10
 689:main.c        ****      PB11   ------> USB_OTG_HS_ULPI_D4
 690:main.c        ****      PB14   ------> SPI2_MISO
 691:main.c        ****      PB15   ------> SPI2_MOSI
 692:main.c        **** */
 693:main.c        **** static void MX_GPIO_Init(void)
 694:main.c        **** {
  67              		.loc 1 694 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 64
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 36
  74              		.cfi_offset 4, -36
  75              		.cfi_offset 5, -32
  76              		.cfi_offset 6, -28
  77              		.cfi_offset 7, -24
  78              		.cfi_offset 8, -20
  79              		.cfi_offset 9, -16
  80              		.cfi_offset 10, -12
  81              		.cfi_offset 11, -8
  82              		.cfi_offset 14, -4
  83 0004 91B0     		sub	sp, sp, #68
  84              	.LCFI1:
  85              		.cfi_def_cfa_offset 104
  86              	.LBB2:
 695:main.c        **** 
 696:main.c        ****   GPIO_InitTypeDef GPIO_InitStruct;
 697:main.c        **** 
 698:main.c        ****   /* GPIO Ports Clock Enable */
 699:main.c        ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  87              		.loc 1 699 0
  88 0006 AA4B     		ldr	r3, .L6
  89 0008 1A6B     		ldr	r2, [r3, #48]
  90 000a 42F01002 		orr	r2, r2, #16
  91 000e 1A63     		str	r2, [r3, #48]
  92 0010 1A6B     		ldr	r2, [r3, #48]
  93 0012 02F01002 		and	r2, r2, #16
  94 0016 0092     		str	r2, [sp]
  95 0018 009A     		ldr	r2, [sp]
  96              	.LBE2:
  97              	.LBB3:
 700:main.c        ****   __HAL_RCC_GPIOG_CLK_ENABLE();
  98              		.loc 1 700 0
  99 001a 1A6B     		ldr	r2, [r3, #48]
 100 001c 42F04002 		orr	r2, r2, #64
 101 0020 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 15


 102 0022 1A6B     		ldr	r2, [r3, #48]
 103 0024 02F04002 		and	r2, r2, #64
 104 0028 0192     		str	r2, [sp, #4]
 105 002a 019A     		ldr	r2, [sp, #4]
 106              	.LBE3:
 107              	.LBB4:
 701:main.c        ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 108              		.loc 1 701 0
 109 002c 1A6B     		ldr	r2, [r3, #48]
 110 002e 42F00202 		orr	r2, r2, #2
 111 0032 1A63     		str	r2, [r3, #48]
 112 0034 1A6B     		ldr	r2, [r3, #48]
 113 0036 02F00202 		and	r2, r2, #2
 114 003a 0292     		str	r2, [sp, #8]
 115 003c 029A     		ldr	r2, [sp, #8]
 116              	.LBE4:
 117              	.LBB5:
 702:main.c        ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 118              		.loc 1 702 0
 119 003e 1A6B     		ldr	r2, [r3, #48]
 120 0040 42F00802 		orr	r2, r2, #8
 121 0044 1A63     		str	r2, [r3, #48]
 122 0046 1A6B     		ldr	r2, [r3, #48]
 123 0048 02F00802 		and	r2, r2, #8
 124 004c 0392     		str	r2, [sp, #12]
 125 004e 039A     		ldr	r2, [sp, #12]
 126              	.LBE5:
 127              	.LBB6:
 703:main.c        ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 128              		.loc 1 703 0
 129 0050 1A6B     		ldr	r2, [r3, #48]
 130 0052 42F00402 		orr	r2, r2, #4
 131 0056 1A63     		str	r2, [r3, #48]
 132 0058 1A6B     		ldr	r2, [r3, #48]
 133 005a 02F00402 		and	r2, r2, #4
 134 005e 0492     		str	r2, [sp, #16]
 135 0060 049A     		ldr	r2, [sp, #16]
 136              	.LBE6:
 137              	.LBB7:
 704:main.c        ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 138              		.loc 1 704 0
 139 0062 1A6B     		ldr	r2, [r3, #48]
 140 0064 42F00102 		orr	r2, r2, #1
 141 0068 1A63     		str	r2, [r3, #48]
 142 006a 1A6B     		ldr	r2, [r3, #48]
 143 006c 02F00102 		and	r2, r2, #1
 144 0070 0592     		str	r2, [sp, #20]
 145 0072 059A     		ldr	r2, [sp, #20]
 146              	.LBE7:
 147              	.LBB8:
 705:main.c        ****   __HAL_RCC_GPIOJ_CLK_ENABLE();
 148              		.loc 1 705 0
 149 0074 1A6B     		ldr	r2, [r3, #48]
 150 0076 42F40072 		orr	r2, r2, #512
 151 007a 1A63     		str	r2, [r3, #48]
 152 007c 1A6B     		ldr	r2, [r3, #48]
 153 007e 02F40072 		and	r2, r2, #512
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 16


 154 0082 0692     		str	r2, [sp, #24]
 155 0084 069A     		ldr	r2, [sp, #24]
 156              	.LBE8:
 157              	.LBB9:
 706:main.c        ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 158              		.loc 1 706 0
 159 0086 1A6B     		ldr	r2, [r3, #48]
 160 0088 42F48072 		orr	r2, r2, #256
 161 008c 1A63     		str	r2, [r3, #48]
 162 008e 1A6B     		ldr	r2, [r3, #48]
 163 0090 02F48072 		and	r2, r2, #256
 164 0094 0792     		str	r2, [sp, #28]
 165 0096 079A     		ldr	r2, [sp, #28]
 166              	.LBE9:
 167              	.LBB10:
 707:main.c        ****   __HAL_RCC_GPIOK_CLK_ENABLE();
 168              		.loc 1 707 0
 169 0098 1A6B     		ldr	r2, [r3, #48]
 170 009a 42F48062 		orr	r2, r2, #1024
 171 009e 1A63     		str	r2, [r3, #48]
 172 00a0 1A6B     		ldr	r2, [r3, #48]
 173 00a2 02F48062 		and	r2, r2, #1024
 174 00a6 0892     		str	r2, [sp, #32]
 175 00a8 089A     		ldr	r2, [sp, #32]
 176              	.LBE10:
 177              	.LBB11:
 708:main.c        ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 178              		.loc 1 708 0
 179 00aa 1A6B     		ldr	r2, [r3, #48]
 180 00ac 42F02002 		orr	r2, r2, #32
 181 00b0 1A63     		str	r2, [r3, #48]
 182 00b2 1A6B     		ldr	r2, [r3, #48]
 183 00b4 02F02002 		and	r2, r2, #32
 184 00b8 0992     		str	r2, [sp, #36]
 185 00ba 099A     		ldr	r2, [sp, #36]
 186              	.LBE11:
 187              	.LBB12:
 709:main.c        ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 188              		.loc 1 709 0
 189 00bc 1A6B     		ldr	r2, [r3, #48]
 190 00be 42F08002 		orr	r2, r2, #128
 191 00c2 1A63     		str	r2, [r3, #48]
 192 00c4 1B6B     		ldr	r3, [r3, #48]
 193 00c6 03F08003 		and	r3, r3, #128
 194 00ca 0A93     		str	r3, [sp, #40]
 195 00cc 0A9B     		ldr	r3, [sp, #40]
 196              	.LBE12:
 710:main.c        **** 
 711:main.c        ****   /*Configure GPIO pin Output Level */
 712:main.c        ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 197              		.loc 1 712 0
 198 00ce 0122     		movs	r2, #1
 199 00d0 2021     		movs	r1, #32
 200 00d2 7848     		ldr	r0, .L6+4
 201 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 202              	.LVL0:
 713:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 17


 714:main.c        ****   /*Configure GPIO pin Output Level */
 715:main.c        ****   HAL_GPIO_WritePin(GPIOI, ARDUINO_D7_Pin|ARDUINO_D8_Pin|LCD_DISP_Pin, GPIO_PIN_RESET);
 203              		.loc 1 715 0
 204 00d8 0022     		movs	r2, #0
 205 00da 41F20C01 		movw	r1, #4108
 206 00de 7648     		ldr	r0, .L6+8
 207 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 208              	.LVL1:
 716:main.c        **** 
 717:main.c        ****   /*Configure GPIO pin Output Level */
 718:main.c        ****   HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_RESET);
 209              		.loc 1 718 0
 210 00e4 0022     		movs	r2, #0
 211 00e6 0821     		movs	r1, #8
 212 00e8 7448     		ldr	r0, .L6+12
 213 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 214              	.LVL2:
 719:main.c        **** 
 720:main.c        ****   /*Configure GPIO pin Output Level */
 721:main.c        ****   HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 215              		.loc 1 721 0
 216 00ee 0022     		movs	r2, #0
 217 00f0 4FF40051 		mov	r1, #8192
 218 00f4 7248     		ldr	r0, .L6+16
 219 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL3:
 722:main.c        **** 
 723:main.c        ****   /*Configure GPIO pin Output Level */
 724:main.c        ****   HAL_GPIO_WritePin(GPIOG, ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin, GPIO_PIN_RESET);
 221              		.loc 1 724 0
 222 00fa 0022     		movs	r2, #0
 223 00fc C821     		movs	r1, #200
 224 00fe 7148     		ldr	r0, .L6+20
 225 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 226              	.LVL4:
 725:main.c        **** 
 726:main.c        ****   /*Configure GPIO pin : LCD_B0_Pin */
 727:main.c        ****   GPIO_InitStruct.Pin = LCD_B0_Pin;
 227              		.loc 1 727 0
 228 0104 1023     		movs	r3, #16
 229 0106 0B93     		str	r3, [sp, #44]
 728:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 230              		.loc 1 728 0
 231 0108 0225     		movs	r5, #2
 232 010a 0C95     		str	r5, [sp, #48]
 729:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 233              		.loc 1 729 0
 234 010c 0024     		movs	r4, #0
 235 010e 0D94     		str	r4, [sp, #52]
 730:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 236              		.loc 1 730 0
 237 0110 0E94     		str	r4, [sp, #56]
 731:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 238              		.loc 1 731 0
 239 0112 0E23     		movs	r3, #14
 240 0114 0F93     		str	r3, [sp, #60]
 732:main.c        ****   HAL_GPIO_Init(LCD_B0_GPIO_Port, &GPIO_InitStruct);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 18


 241              		.loc 1 732 0
 242 0116 DFF8C0A1 		ldr	r10, .L6+40
 243 011a 0BA9     		add	r1, sp, #44
 244 011c 5046     		mov	r0, r10
 245 011e FFF7FEFF 		bl	HAL_GPIO_Init
 246              	.LVL5:
 733:main.c        **** 
 734:main.c        ****   /*Configure GPIO pin : OTG_HS_OverCurrent_Pin */
 735:main.c        ****   GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 247              		.loc 1 735 0
 248 0122 0823     		movs	r3, #8
 249 0124 0B93     		str	r3, [sp, #44]
 736:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 250              		.loc 1 736 0
 251 0126 0C94     		str	r4, [sp, #48]
 737:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 252              		.loc 1 737 0
 253 0128 0D94     		str	r4, [sp, #52]
 738:main.c        ****   HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 254              		.loc 1 738 0
 255 012a 0BA9     		add	r1, sp, #44
 256 012c 5046     		mov	r0, r10
 257 012e FFF7FEFF 		bl	HAL_GPIO_Init
 258              	.LVL6:
 739:main.c        **** 
 740:main.c        ****   /*Configure GPIO pin : QSPI_D2_Pin */
 741:main.c        ****   GPIO_InitStruct.Pin = QSPI_D2_Pin;
 259              		.loc 1 741 0
 260 0132 0423     		movs	r3, #4
 261 0134 0B93     		str	r3, [sp, #44]
 742:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 262              		.loc 1 742 0
 263 0136 0C95     		str	r5, [sp, #48]
 743:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 264              		.loc 1 743 0
 265 0138 0D94     		str	r4, [sp, #52]
 744:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 266              		.loc 1 744 0
 267 013a 0326     		movs	r6, #3
 268 013c 0E96     		str	r6, [sp, #56]
 745:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 269              		.loc 1 745 0
 270 013e 4FF0090B 		mov	fp, #9
 271 0142 CDF83CB0 		str	fp, [sp, #60]
 746:main.c        ****   HAL_GPIO_Init(QSPI_D2_GPIO_Port, &GPIO_InitStruct);
 272              		.loc 1 746 0
 273 0146 0BA9     		add	r1, sp, #44
 274 0148 5046     		mov	r0, r10
 275 014a FFF7FEFF 		bl	HAL_GPIO_Init
 276              	.LVL7:
 747:main.c        **** 
 748:main.c        ****   /*Configure GPIO pins : RMII_TXD1_Pin RMII_TXD0_Pin RMII_TX_EN_Pin */
 749:main.c        ****   GPIO_InitStruct.Pin = RMII_TXD1_Pin|RMII_TXD0_Pin|RMII_TX_EN_Pin;
 277              		.loc 1 749 0
 278 014e 4FF4D043 		mov	r3, #26624
 279 0152 0B93     		str	r3, [sp, #44]
 750:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 19


 280              		.loc 1 750 0
 281 0154 0C95     		str	r5, [sp, #48]
 751:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 282              		.loc 1 751 0
 283 0156 0D94     		str	r4, [sp, #52]
 752:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 284              		.loc 1 752 0
 285 0158 0E96     		str	r6, [sp, #56]
 753:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 286              		.loc 1 753 0
 287 015a 0B23     		movs	r3, #11
 288 015c 0F93     		str	r3, [sp, #60]
 754:main.c        ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 289              		.loc 1 754 0
 290 015e 0BA9     		add	r1, sp, #44
 291 0160 5848     		ldr	r0, .L6+20
 292 0162 FFF7FEFF 		bl	HAL_GPIO_Init
 293              	.LVL8:
 755:main.c        **** 
 756:main.c        ****   /*Configure GPIO pins : FMC_NBL1_Pin FMC_NBL0_Pin FMC_D5_Pin FMC_D6_Pin 
 757:main.c        ****                            FMC_D8_Pin FMC_D11_Pin FMC_D4_Pin FMC_D7_Pin 
 758:main.c        ****                            FMC_D9_Pin FMC_D12_Pin FMC_D10_Pin */
 759:main.c        ****   GPIO_InitStruct.Pin = FMC_NBL1_Pin|FMC_NBL0_Pin|FMC_D5_Pin|FMC_D6_Pin 
 294              		.loc 1 759 0
 295 0166 4FF68373 		movw	r3, #65411
 296 016a 0B93     		str	r3, [sp, #44]
 760:main.c        ****                           |FMC_D8_Pin|FMC_D11_Pin|FMC_D4_Pin|FMC_D7_Pin 
 761:main.c        ****                           |FMC_D9_Pin|FMC_D12_Pin|FMC_D10_Pin;
 762:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 297              		.loc 1 762 0
 298 016c 0C95     		str	r5, [sp, #48]
 763:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 299              		.loc 1 763 0
 300 016e 0D94     		str	r4, [sp, #52]
 764:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 301              		.loc 1 764 0
 302 0170 0E96     		str	r6, [sp, #56]
 765:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 303              		.loc 1 765 0
 304 0172 4FF00C09 		mov	r9, #12
 305 0176 CDF83C90 		str	r9, [sp, #60]
 766:main.c        ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 306              		.loc 1 766 0
 307 017a 0BA9     		add	r1, sp, #44
 308 017c 5046     		mov	r0, r10
 309 017e FFF7FEFF 		bl	HAL_GPIO_Init
 310              	.LVL9:
 767:main.c        **** 
 768:main.c        ****   /*Configure GPIO pins : ARDUINO_SCL_D15_Pin ARDUINO_SDA_D14_Pin */
 769:main.c        ****   GPIO_InitStruct.Pin = ARDUINO_SCL_D15_Pin|ARDUINO_SDA_D14_Pin;
 311              		.loc 1 769 0
 312 0182 4FF44073 		mov	r3, #768
 313 0186 0B93     		str	r3, [sp, #44]
 770:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 314              		.loc 1 770 0
 315 0188 1223     		movs	r3, #18
 316 018a 0C93     		str	r3, [sp, #48]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 20


 771:main.c        ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 317              		.loc 1 771 0
 318 018c 0127     		movs	r7, #1
 319 018e 0D97     		str	r7, [sp, #52]
 772:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 320              		.loc 1 772 0
 321 0190 0E94     		str	r4, [sp, #56]
 773:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 322              		.loc 1 773 0
 323 0192 0423     		movs	r3, #4
 324 0194 0F93     		str	r3, [sp, #60]
 774:main.c        ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 325              		.loc 1 774 0
 326 0196 0BA9     		add	r1, sp, #44
 327 0198 4B48     		ldr	r0, .L6+24
 328 019a FFF7FEFF 		bl	HAL_GPIO_Init
 329              	.LVL10:
 775:main.c        **** 
 776:main.c        ****   /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D3_Pin 
 777:main.c        ****                            ULPI_D2_Pin ULPI_D1_Pin ULPI_D4_Pin */
 778:main.c        ****   GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D3_Pin 
 330              		.loc 1 778 0
 331 019e 43F62343 		movw	r3, #15395
 332 01a2 0B93     		str	r3, [sp, #44]
 779:main.c        ****                           |ULPI_D2_Pin|ULPI_D1_Pin|ULPI_D4_Pin;
 780:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 333              		.loc 1 780 0
 334 01a4 0C95     		str	r5, [sp, #48]
 781:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 335              		.loc 1 781 0
 336 01a6 0D94     		str	r4, [sp, #52]
 782:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 337              		.loc 1 782 0
 338 01a8 0E96     		str	r6, [sp, #56]
 783:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 339              		.loc 1 783 0
 340 01aa 4FF00A08 		mov	r8, #10
 341 01ae CDF83C80 		str	r8, [sp, #60]
 784:main.c        ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 342              		.loc 1 784 0
 343 01b2 0BA9     		add	r1, sp, #44
 344 01b4 4448     		ldr	r0, .L6+24
 345 01b6 FFF7FEFF 		bl	HAL_GPIO_Init
 346              	.LVL11:
 785:main.c        **** 
 786:main.c        ****   /*Configure GPIO pin : ARDUINO_PWM_D3_Pin */
 787:main.c        ****   GPIO_InitStruct.Pin = ARDUINO_PWM_D3_Pin;
 347              		.loc 1 787 0
 348 01ba 1023     		movs	r3, #16
 349 01bc 0B93     		str	r3, [sp, #44]
 788:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 350              		.loc 1 788 0
 351 01be 0C95     		str	r5, [sp, #48]
 789:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 352              		.loc 1 789 0
 353 01c0 0D94     		str	r4, [sp, #52]
 790:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 21


 354              		.loc 1 790 0
 355 01c2 0E94     		str	r4, [sp, #56]
 791:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 356              		.loc 1 791 0
 357 01c4 0F95     		str	r5, [sp, #60]
 792:main.c        ****   HAL_GPIO_Init(ARDUINO_PWM_D3_GPIO_Port, &GPIO_InitStruct);
 358              		.loc 1 792 0
 359 01c6 0BA9     		add	r1, sp, #44
 360 01c8 3F48     		ldr	r0, .L6+24
 361 01ca FFF7FEFF 		bl	HAL_GPIO_Init
 362              	.LVL12:
 793:main.c        **** 
 794:main.c        ****   /*Configure GPIO pin : SPDIF_RX0_Pin */
 795:main.c        ****   GPIO_InitStruct.Pin = SPDIF_RX0_Pin;
 363              		.loc 1 795 0
 364 01ce 8023     		movs	r3, #128
 365 01d0 0B93     		str	r3, [sp, #44]
 796:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 366              		.loc 1 796 0
 367 01d2 0C95     		str	r5, [sp, #48]
 797:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 368              		.loc 1 797 0
 369 01d4 0D94     		str	r4, [sp, #52]
 798:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 370              		.loc 1 798 0
 371 01d6 0E94     		str	r4, [sp, #56]
 799:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF8_SPDIFRX;
 372              		.loc 1 799 0
 373 01d8 0823     		movs	r3, #8
 374 01da 0F93     		str	r3, [sp, #60]
 800:main.c        ****   HAL_GPIO_Init(SPDIF_RX0_GPIO_Port, &GPIO_InitStruct);
 375              		.loc 1 800 0
 376 01dc 0BA9     		add	r1, sp, #44
 377 01de 3548     		ldr	r0, .L6+4
 378 01e0 FFF7FEFF 		bl	HAL_GPIO_Init
 379              	.LVL13:
 801:main.c        **** 
 802:main.c        ****   /*Configure GPIO pin : ARDUINO_PWM_D9_Pin */
 803:main.c        ****   GPIO_InitStruct.Pin = ARDUINO_PWM_D9_Pin;
 380              		.loc 1 803 0
 381 01e4 4FF40043 		mov	r3, #32768
 382 01e8 0B93     		str	r3, [sp, #44]
 804:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 383              		.loc 1 804 0
 384 01ea 0C95     		str	r5, [sp, #48]
 805:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 385              		.loc 1 805 0
 386 01ec 0D94     		str	r4, [sp, #52]
 806:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 387              		.loc 1 806 0
 388 01ee 0E94     		str	r4, [sp, #56]
 807:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 389              		.loc 1 807 0
 390 01f0 0F97     		str	r7, [sp, #60]
 808:main.c        ****   HAL_GPIO_Init(ARDUINO_PWM_D9_GPIO_Port, &GPIO_InitStruct);
 391              		.loc 1 808 0
 392 01f2 0BA9     		add	r1, sp, #44
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 22


 393 01f4 3548     		ldr	r0, .L6+28
 394 01f6 FFF7FEFF 		bl	HAL_GPIO_Init
 395              	.LVL14:
 809:main.c        **** 
 810:main.c        ****   /*Configure GPIO pins : DCMI_D6_Pin DCMI_D7_Pin */
 811:main.c        ****   GPIO_InitStruct.Pin = DCMI_D6_Pin|DCMI_D7_Pin;
 396              		.loc 1 811 0
 397 01fa 6023     		movs	r3, #96
 398 01fc 0B93     		str	r3, [sp, #44]
 812:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 399              		.loc 1 812 0
 400 01fe 0C95     		str	r5, [sp, #48]
 813:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 401              		.loc 1 813 0
 402 0200 0D94     		str	r4, [sp, #52]
 814:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 403              		.loc 1 814 0
 404 0202 0E94     		str	r4, [sp, #56]
 815:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 405              		.loc 1 815 0
 406 0204 0D23     		movs	r3, #13
 407 0206 0F93     		str	r3, [sp, #60]
 816:main.c        ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 408              		.loc 1 816 0
 409 0208 0BA9     		add	r1, sp, #44
 410 020a 5046     		mov	r0, r10
 411 020c FFF7FEFF 		bl	HAL_GPIO_Init
 412              	.LVL15:
 817:main.c        **** 
 818:main.c        ****   /*Configure GPIO pin : QSPI_NCS_Pin */
 819:main.c        ****   GPIO_InitStruct.Pin = QSPI_NCS_Pin;
 413              		.loc 1 819 0
 414 0210 4023     		movs	r3, #64
 415 0212 0B93     		str	r3, [sp, #44]
 820:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 416              		.loc 1 820 0
 417 0214 0C95     		str	r5, [sp, #48]
 821:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 418              		.loc 1 821 0
 419 0216 0D94     		str	r4, [sp, #52]
 822:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 420              		.loc 1 822 0
 421 0218 0E96     		str	r6, [sp, #56]
 823:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 422              		.loc 1 823 0
 423 021a CDF83C80 		str	r8, [sp, #60]
 824:main.c        ****   HAL_GPIO_Init(QSPI_NCS_GPIO_Port, &GPIO_InitStruct);
 424              		.loc 1 824 0
 425 021e 0BA9     		add	r1, sp, #44
 426 0220 2948     		ldr	r0, .L6+24
 427 0222 FFF7FEFF 		bl	HAL_GPIO_Init
 428              	.LVL16:
 825:main.c        **** 
 826:main.c        ****   /*Configure GPIO pins : FMC_SDNCAS_Pin FMC_SDCLK_Pin FMC_A11_Pin FMC_A10_Pin 
 827:main.c        ****                            FMC_BA1_Pin FMC_BA0_Pin */
 828:main.c        ****   GPIO_InitStruct.Pin = FMC_SDNCAS_Pin|FMC_SDCLK_Pin|FMC_A11_Pin|FMC_A10_Pin 
 429              		.loc 1 828 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 23


 430 0226 48F23313 		movw	r3, #33075
 431 022a 0B93     		str	r3, [sp, #44]
 829:main.c        ****                           |FMC_BA1_Pin|FMC_BA0_Pin;
 830:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 432              		.loc 1 830 0
 433 022c 0C95     		str	r5, [sp, #48]
 831:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 434              		.loc 1 831 0
 435 022e 0D94     		str	r4, [sp, #52]
 832:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 436              		.loc 1 832 0
 437 0230 0E96     		str	r6, [sp, #56]
 833:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 438              		.loc 1 833 0
 439 0232 CDF83C90 		str	r9, [sp, #60]
 834:main.c        ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 440              		.loc 1 834 0
 441 0236 0BA9     		add	r1, sp, #44
 442 0238 2248     		ldr	r0, .L6+20
 443 023a FFF7FEFF 		bl	HAL_GPIO_Init
 444              	.LVL17:
 835:main.c        **** 
 836:main.c        ****   /*Configure GPIO pins : LCD_B1_Pin LCD_B2_Pin LCD_B3_Pin LCD_G4_Pin 
 837:main.c        ****                            LCD_G1_Pin LCD_G3_Pin LCD_G0_Pin LCD_G2_Pin 
 838:main.c        ****                            LCD_R7_Pin LCD_R5_Pin LCD_R6_Pin LCD_R4_Pin 
 839:main.c        ****                            LCD_R3_Pin LCD_R1_Pin LCD_R2_Pin */
 840:main.c        ****   GPIO_InitStruct.Pin = LCD_B1_Pin|LCD_B2_Pin|LCD_B3_Pin|LCD_G4_Pin 
 445              		.loc 1 840 0
 446 023e 4EF6FF73 		movw	r3, #61439
 447 0242 0B93     		str	r3, [sp, #44]
 841:main.c        ****                           |LCD_G1_Pin|LCD_G3_Pin|LCD_G0_Pin|LCD_G2_Pin 
 842:main.c        ****                           |LCD_R7_Pin|LCD_R5_Pin|LCD_R6_Pin|LCD_R4_Pin 
 843:main.c        ****                           |LCD_R3_Pin|LCD_R1_Pin|LCD_R2_Pin;
 844:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 448              		.loc 1 844 0
 449 0244 0C95     		str	r5, [sp, #48]
 845:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 450              		.loc 1 845 0
 451 0246 0D94     		str	r4, [sp, #52]
 846:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 452              		.loc 1 846 0
 453 0248 0E94     		str	r4, [sp, #56]
 847:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 454              		.loc 1 847 0
 455 024a 0E23     		movs	r3, #14
 456 024c 0F93     		str	r3, [sp, #60]
 848:main.c        ****   HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 457              		.loc 1 848 0
 458 024e 0BA9     		add	r1, sp, #44
 459 0250 1F48     		ldr	r0, .L6+32
 460 0252 FFF7FEFF 		bl	HAL_GPIO_Init
 461              	.LVL18:
 849:main.c        **** 
 850:main.c        ****   /*Configure GPIO pin : OTG_FS_VBUS_Pin */
 851:main.c        ****   GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 462              		.loc 1 851 0
 463 0256 4FF4805A 		mov	r10, #4096
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 24


 464 025a CDF82CA0 		str	r10, [sp, #44]
 852:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 465              		.loc 1 852 0
 466 025e 0C94     		str	r4, [sp, #48]
 853:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 467              		.loc 1 853 0
 468 0260 0D94     		str	r4, [sp, #52]
 854:main.c        ****   HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 469              		.loc 1 854 0
 470 0262 0BA9     		add	r1, sp, #44
 471 0264 1A48     		ldr	r0, .L6+32
 472 0266 FFF7FEFF 		bl	HAL_GPIO_Init
 473              	.LVL19:
 855:main.c        **** 
 856:main.c        ****   /*Configure GPIO pin : Audio_INT_Pin */
 857:main.c        ****   GPIO_InitStruct.Pin = Audio_INT_Pin;
 474              		.loc 1 857 0
 475 026a 4023     		movs	r3, #64
 476 026c 0B93     		str	r3, [sp, #44]
 858:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 477              		.loc 1 858 0
 478 026e 194B     		ldr	r3, .L6+36
 479 0270 0C93     		str	r3, [sp, #48]
 859:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 480              		.loc 1 859 0
 481 0272 0D94     		str	r4, [sp, #52]
 860:main.c        ****   HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 482              		.loc 1 860 0
 483 0274 0BA9     		add	r1, sp, #44
 484 0276 0F48     		ldr	r0, .L6+4
 485 0278 FFF7FEFF 		bl	HAL_GPIO_Init
 486              	.LVL20:
 861:main.c        **** 
 862:main.c        ****   /*Configure GPIO pins : FMC_D2_Pin FMC_D3_Pin FMC_D1_Pin FMC_D15_Pin 
 863:main.c        ****                            FMC_D0_Pin FMC_D14_Pin FMC_D13_Pin */
 864:main.c        ****   GPIO_InitStruct.Pin = FMC_D2_Pin|FMC_D3_Pin|FMC_D1_Pin|FMC_D15_Pin 
 487              		.loc 1 864 0
 488 027c 4CF20373 		movw	r3, #50947
 489 0280 0B93     		str	r3, [sp, #44]
 865:main.c        ****                           |FMC_D0_Pin|FMC_D14_Pin|FMC_D13_Pin;
 866:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 490              		.loc 1 866 0
 491 0282 0C95     		str	r5, [sp, #48]
 867:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 492              		.loc 1 867 0
 493 0284 0D94     		str	r4, [sp, #52]
 868:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 494              		.loc 1 868 0
 495 0286 0E96     		str	r6, [sp, #56]
 869:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 496              		.loc 1 869 0
 497 0288 CDF83C90 		str	r9, [sp, #60]
 870:main.c        ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 498              		.loc 1 870 0
 499 028c 0BA9     		add	r1, sp, #44
 500 028e 0948     		ldr	r0, .L6+4
 501 0290 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 25


 502              	.LVL21:
 871:main.c        **** 
 872:main.c        ****   /*Configure GPIO pins : SAI2_MCLKA_Pin SAI2_SCKA_Pin SAI2_FSA_Pin SAI2_SDA_Pin */
 873:main.c        ****   GPIO_InitStruct.Pin = SAI2_MCLKA_Pin|SAI2_SCKA_Pin|SAI2_FSA_Pin|SAI2_SDA_Pin;
 503              		.loc 1 873 0
 504 0294 F023     		movs	r3, #240
 505 0296 0B93     		str	r3, [sp, #44]
 874:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 506              		.loc 1 874 0
 507 0298 0C95     		str	r5, [sp, #48]
 875:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 508              		.loc 1 875 0
 509 029a 0D94     		str	r4, [sp, #52]
 876:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 510              		.loc 1 876 0
 511 029c 0E94     		str	r4, [sp, #56]
 877:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF10_SAI2;
 512              		.loc 1 877 0
 513 029e CDF83C80 		str	r8, [sp, #60]
 878:main.c        ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 514              		.loc 1 878 0
 515 02a2 0BA9     		add	r1, sp, #44
 516 02a4 0448     		ldr	r0, .L6+8
 517 02a6 FFF7FEFF 		bl	HAL_GPIO_Init
 518              	.LVL22:
 879:main.c        **** 
 880:main.c        ****   /*Configure GPIO pins : LCD_DE_Pin LCD_B7_Pin LCD_B6_Pin LCD_B5_Pin 
 881:main.c        ****                            LCD_G6_Pin LCD_G7_Pin LCD_G5_Pin */
 882:main.c        ****   GPIO_InitStruct.Pin = LCD_DE_Pin|LCD_B7_Pin|LCD_B6_Pin|LCD_B5_Pin 
 519              		.loc 1 882 0
 520 02aa F723     		movs	r3, #247
 521 02ac 16E0     		b	.L7
 522              	.L8:
 523 02ae 00BF     		.align	2
 524              	.L6:
 525 02b0 00380240 		.word	1073887232
 526 02b4 000C0240 		.word	1073875968
 527 02b8 00200240 		.word	1073881088
 528 02bc 00280240 		.word	1073883136
 529 02c0 001C0240 		.word	1073880064
 530 02c4 00180240 		.word	1073879040
 531 02c8 00040240 		.word	1073873920
 532 02cc 00000240 		.word	1073872896
 533 02d0 00240240 		.word	1073882112
 534 02d4 00001210 		.word	269615104
 535 02d8 00100240 		.word	1073876992
 536              	.L7:
 537 02dc 0B93     		str	r3, [sp, #44]
 883:main.c        ****                           |LCD_G6_Pin|LCD_G7_Pin|LCD_G5_Pin;
 884:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 538              		.loc 1 884 0
 539 02de 0C95     		str	r5, [sp, #48]
 885:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 540              		.loc 1 885 0
 541 02e0 0D94     		str	r4, [sp, #52]
 886:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 542              		.loc 1 886 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 26


 543 02e2 0E94     		str	r4, [sp, #56]
 887:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 544              		.loc 1 887 0
 545 02e4 0E23     		movs	r3, #14
 546 02e6 0F93     		str	r3, [sp, #60]
 888:main.c        ****   HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 547              		.loc 1 888 0
 548 02e8 0BA9     		add	r1, sp, #44
 549 02ea A248     		ldr	r0, .L9
 550 02ec FFF7FEFF 		bl	HAL_GPIO_Init
 551              	.LVL23:
 889:main.c        **** 
 890:main.c        ****   /*Configure GPIO pin : LCD_B4_Pin */
 891:main.c        ****   GPIO_InitStruct.Pin = LCD_B4_Pin;
 552              		.loc 1 891 0
 553 02f0 CDF82CA0 		str	r10, [sp, #44]
 892:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 554              		.loc 1 892 0
 555 02f4 0C95     		str	r5, [sp, #48]
 893:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 556              		.loc 1 893 0
 557 02f6 0D94     		str	r4, [sp, #52]
 894:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 558              		.loc 1 894 0
 559 02f8 0E94     		str	r4, [sp, #56]
 895:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 560              		.loc 1 895 0
 561 02fa CDF83CB0 		str	fp, [sp, #60]
 896:main.c        ****   HAL_GPIO_Init(LCD_B4_GPIO_Port, &GPIO_InitStruct);
 562              		.loc 1 896 0
 563 02fe 0BA9     		add	r1, sp, #44
 564 0300 9D48     		ldr	r0, .L9+4
 565 0302 FFF7FEFF 		bl	HAL_GPIO_Init
 566              	.LVL24:
 897:main.c        **** 
 898:main.c        ****   /*Configure GPIO pin : SAI2_SDB_Pin */
 899:main.c        ****   GPIO_InitStruct.Pin = SAI2_SDB_Pin;
 567              		.loc 1 899 0
 568 0306 4FF48063 		mov	r3, #1024
 569 030a 0B93     		str	r3, [sp, #44]
 900:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 570              		.loc 1 900 0
 571 030c 0C95     		str	r5, [sp, #48]
 901:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 572              		.loc 1 901 0
 573 030e 0D94     		str	r4, [sp, #52]
 902:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 574              		.loc 1 902 0
 575 0310 0E94     		str	r4, [sp, #56]
 903:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF10_SAI2;
 576              		.loc 1 903 0
 577 0312 CDF83C80 		str	r8, [sp, #60]
 904:main.c        ****   HAL_GPIO_Init(SAI2_SDB_GPIO_Port, &GPIO_InitStruct);
 578              		.loc 1 904 0
 579 0316 0BA9     		add	r1, sp, #44
 580 0318 9748     		ldr	r0, .L9+4
 581 031a FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 27


 582              	.LVL25:
 905:main.c        **** 
 906:main.c        ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
 907:main.c        ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 583              		.loc 1 907 0
 584 031e 2023     		movs	r3, #32
 585 0320 0B93     		str	r3, [sp, #44]
 908:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 586              		.loc 1 908 0
 587 0322 0C97     		str	r7, [sp, #48]
 909:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 588              		.loc 1 909 0
 589 0324 0D94     		str	r4, [sp, #52]
 910:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 590              		.loc 1 910 0
 591 0326 0E94     		str	r4, [sp, #56]
 911:main.c        ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 592              		.loc 1 911 0
 593 0328 0BA9     		add	r1, sp, #44
 594 032a 9448     		ldr	r0, .L9+8
 595 032c FFF7FEFF 		bl	HAL_GPIO_Init
 596              	.LVL26:
 912:main.c        **** 
 913:main.c        ****   /*Configure GPIO pin : DCMI_D5_Pin */
 914:main.c        ****   GPIO_InitStruct.Pin = DCMI_D5_Pin;
 597              		.loc 1 914 0
 598 0330 0823     		movs	r3, #8
 599 0332 0B93     		str	r3, [sp, #44]
 915:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 600              		.loc 1 915 0
 601 0334 0C95     		str	r5, [sp, #48]
 916:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 602              		.loc 1 916 0
 603 0336 0D94     		str	r4, [sp, #52]
 917:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 604              		.loc 1 917 0
 605 0338 0E94     		str	r4, [sp, #56]
 918:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 606              		.loc 1 918 0
 607 033a 0D23     		movs	r3, #13
 608 033c 0F93     		str	r3, [sp, #60]
 919:main.c        ****   HAL_GPIO_Init(DCMI_D5_GPIO_Port, &GPIO_InitStruct);
 609              		.loc 1 919 0
 610 033e 0BA9     		add	r1, sp, #44
 611 0340 8E48     		ldr	r0, .L9+8
 612 0342 FFF7FEFF 		bl	HAL_GPIO_Init
 613              	.LVL27:
 920:main.c        **** 
 921:main.c        ****   /*Configure GPIO pins : ARDUINO_D7_Pin ARDUINO_D8_Pin LCD_DISP_Pin */
 922:main.c        ****   GPIO_InitStruct.Pin = ARDUINO_D7_Pin|ARDUINO_D8_Pin|LCD_DISP_Pin;
 614              		.loc 1 922 0
 615 0346 41F20C03 		movw	r3, #4108
 616 034a 0B93     		str	r3, [sp, #44]
 923:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 617              		.loc 1 923 0
 618 034c 0C97     		str	r7, [sp, #48]
 924:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 28


 619              		.loc 1 924 0
 620 034e 0D94     		str	r4, [sp, #52]
 925:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 621              		.loc 1 925 0
 622 0350 0E94     		str	r4, [sp, #56]
 926:main.c        ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 623              		.loc 1 926 0
 624 0352 0BA9     		add	r1, sp, #44
 625 0354 8A48     		ldr	r0, .L9+12
 626 0356 FFF7FEFF 		bl	HAL_GPIO_Init
 627              	.LVL28:
 927:main.c        **** 
 928:main.c        ****   /*Configure GPIO pin : uSD_Detect_Pin */
 929:main.c        ****   GPIO_InitStruct.Pin = uSD_Detect_Pin;
 628              		.loc 1 929 0
 629 035a 4FF4005A 		mov	r10, #8192
 630 035e CDF82CA0 		str	r10, [sp, #44]
 930:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 631              		.loc 1 930 0
 632 0362 0C94     		str	r4, [sp, #48]
 931:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 633              		.loc 1 931 0
 634 0364 0D94     		str	r4, [sp, #52]
 932:main.c        ****   HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 635              		.loc 1 932 0
 636 0366 0BA9     		add	r1, sp, #44
 637 0368 8648     		ldr	r0, .L9+16
 638 036a FFF7FEFF 		bl	HAL_GPIO_Init
 639              	.LVL29:
 933:main.c        **** 
 934:main.c        ****   /*Configure GPIO pins : FMC_A0_Pin FMC_A1_Pin FMC_A2_Pin FMC_A3_Pin 
 935:main.c        ****                            FMC_A4_Pin FMC_A5_Pin FMC_A6_Pin FMC_A9_Pin 
 936:main.c        ****                            FMC_A7_Pin FMC_A8_Pin FMC_SDNRAS_Pin */
 937:main.c        ****   GPIO_InitStruct.Pin = FMC_A0_Pin|FMC_A1_Pin|FMC_A2_Pin|FMC_A3_Pin 
 640              		.loc 1 937 0
 641 036e 4FF63F03 		movw	r3, #63551
 642 0372 0B93     		str	r3, [sp, #44]
 938:main.c        ****                           |FMC_A4_Pin|FMC_A5_Pin|FMC_A6_Pin|FMC_A9_Pin 
 939:main.c        ****                           |FMC_A7_Pin|FMC_A8_Pin|FMC_SDNRAS_Pin;
 940:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 643              		.loc 1 940 0
 644 0374 0C95     		str	r5, [sp, #48]
 941:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 645              		.loc 1 941 0
 646 0376 0D94     		str	r4, [sp, #52]
 942:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 647              		.loc 1 942 0
 648 0378 0E96     		str	r6, [sp, #56]
 943:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 649              		.loc 1 943 0
 650 037a CDF83C90 		str	r9, [sp, #60]
 944:main.c        ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 651              		.loc 1 944 0
 652 037e 0BA9     		add	r1, sp, #44
 653 0380 8148     		ldr	r0, .L9+20
 654 0382 FFF7FEFF 		bl	HAL_GPIO_Init
 655              	.LVL30:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 29


 945:main.c        **** 
 946:main.c        ****   /*Configure GPIO pins : LCD_HSYNC_Pin LCD_VSYNC_Pin LCD_R0_Pin LCD_CLK_Pin */
 947:main.c        ****   GPIO_InitStruct.Pin = LCD_HSYNC_Pin|LCD_VSYNC_Pin|LCD_R0_Pin|LCD_CLK_Pin;
 656              		.loc 1 947 0
 657 0386 4FF44643 		mov	r3, #50688
 658 038a 0B93     		str	r3, [sp, #44]
 948:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 659              		.loc 1 948 0
 660 038c 0C95     		str	r5, [sp, #48]
 949:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 661              		.loc 1 949 0
 662 038e 0D94     		str	r4, [sp, #52]
 950:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 663              		.loc 1 950 0
 664 0390 0E94     		str	r4, [sp, #56]
 951:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 665              		.loc 1 951 0
 666 0392 0E23     		movs	r3, #14
 667 0394 0F93     		str	r3, [sp, #60]
 952:main.c        ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 668              		.loc 1 952 0
 669 0396 0BA9     		add	r1, sp, #44
 670 0398 7948     		ldr	r0, .L9+12
 671 039a FFF7FEFF 		bl	HAL_GPIO_Init
 672              	.LVL31:
 953:main.c        **** 
 954:main.c        ****   /*Configure GPIO pin : LCD_BL_CTRL_Pin */
 955:main.c        ****   GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 673              		.loc 1 955 0
 674 039e 0823     		movs	r3, #8
 675 03a0 0B93     		str	r3, [sp, #44]
 956:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 676              		.loc 1 956 0
 677 03a2 0C97     		str	r7, [sp, #48]
 957:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 678              		.loc 1 957 0
 679 03a4 0D94     		str	r4, [sp, #52]
 958:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 680              		.loc 1 958 0
 681 03a6 0E94     		str	r4, [sp, #56]
 959:main.c        ****   HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 682              		.loc 1 959 0
 683 03a8 0BA9     		add	r1, sp, #44
 684 03aa 7248     		ldr	r0, .L9
 685 03ac FFF7FEFF 		bl	HAL_GPIO_Init
 686              	.LVL32:
 960:main.c        **** 
 961:main.c        ****   /*Configure GPIO pin : DCMI_VSYNC_Pin */
 962:main.c        ****   GPIO_InitStruct.Pin = DCMI_VSYNC_Pin;
 687              		.loc 1 962 0
 688 03b0 4FF40073 		mov	r3, #512
 689 03b4 0B93     		str	r3, [sp, #44]
 963:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 690              		.loc 1 963 0
 691 03b6 0C95     		str	r5, [sp, #48]
 964:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 692              		.loc 1 964 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 30


 693 03b8 0D94     		str	r4, [sp, #52]
 965:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 694              		.loc 1 965 0
 695 03ba 0E94     		str	r4, [sp, #56]
 966:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 696              		.loc 1 966 0
 697 03bc 0D23     		movs	r3, #13
 698 03be 0F93     		str	r3, [sp, #60]
 967:main.c        ****   HAL_GPIO_Init(DCMI_VSYNC_GPIO_Port, &GPIO_InitStruct);
 699              		.loc 1 967 0
 700 03c0 0BA9     		add	r1, sp, #44
 701 03c2 6D48     		ldr	r0, .L9+4
 702 03c4 FFF7FEFF 		bl	HAL_GPIO_Init
 703              	.LVL33:
 968:main.c        **** 
 969:main.c        ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
 970:main.c        ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 704              		.loc 1 970 0
 705 03c8 1023     		movs	r3, #16
 706 03ca 0B93     		str	r3, [sp, #44]
 971:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 707              		.loc 1 971 0
 708 03cc 0C94     		str	r4, [sp, #48]
 972:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 709              		.loc 1 972 0
 710 03ce 0D94     		str	r4, [sp, #52]
 973:main.c        ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 711              		.loc 1 973 0
 712 03d0 0BA9     		add	r1, sp, #44
 713 03d2 6A48     		ldr	r0, .L9+8
 714 03d4 FFF7FEFF 		bl	HAL_GPIO_Init
 715              	.LVL34:
 974:main.c        **** 
 975:main.c        ****   /*Configure GPIO pins : TP3_Pin NC2_Pin */
 976:main.c        ****   GPIO_InitStruct.Pin = TP3_Pin|NC2_Pin;
 716              		.loc 1 976 0
 717 03d8 48F20403 		movw	r3, #32772
 718 03dc 0B93     		str	r3, [sp, #44]
 977:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 719              		.loc 1 977 0
 720 03de 0C94     		str	r4, [sp, #48]
 978:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 721              		.loc 1 978 0
 722 03e0 0D94     		str	r4, [sp, #52]
 979:main.c        ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 723              		.loc 1 979 0
 724 03e2 0BA9     		add	r1, sp, #44
 725 03e4 6948     		ldr	r0, .L9+24
 726 03e6 FFF7FEFF 		bl	HAL_GPIO_Init
 727              	.LVL35:
 980:main.c        **** 
 981:main.c        ****   /*Configure GPIO pin : ARDUINO_SCK_D13_Pin */
 982:main.c        ****   GPIO_InitStruct.Pin = ARDUINO_SCK_D13_Pin;
 728              		.loc 1 982 0
 729 03ea 0B95     		str	r5, [sp, #44]
 983:main.c        ****   //GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 984:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 31


 730              		.loc 1 984 0
 731 03ec 0C97     		str	r7, [sp, #48]
 985:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 732              		.loc 1 985 0
 733 03ee 0D94     		str	r4, [sp, #52]
 986:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 734              		.loc 1 986 0
 735 03f0 0E94     		str	r4, [sp, #56]
 987:main.c        ****   //GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 988:main.c        ****   HAL_GPIO_Init(ARDUINO_SCK_D13_GPIO_Port, &GPIO_InitStruct);
 736              		.loc 1 988 0
 737 03f2 0BA9     		add	r1, sp, #44
 738 03f4 6248     		ldr	r0, .L9+12
 739 03f6 FFF7FEFF 		bl	HAL_GPIO_Init
 740              	.LVL36:
 989:main.c        **** 
 990:main.c        ****   /*Configure GPIO pin : DCMI_PWR_EN_Pin */
 991:main.c        ****   GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 741              		.loc 1 991 0
 742 03fa CDF82CA0 		str	r10, [sp, #44]
 992:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 743              		.loc 1 992 0
 744 03fe 0C97     		str	r7, [sp, #48]
 993:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 745              		.loc 1 993 0
 746 0400 0D94     		str	r4, [sp, #52]
 994:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 747              		.loc 1 994 0
 748 0402 0E94     		str	r4, [sp, #56]
 995:main.c        ****   HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 749              		.loc 1 995 0
 750 0404 0BA9     		add	r1, sp, #44
 751 0406 6148     		ldr	r0, .L9+24
 752 0408 FFF7FEFF 		bl	HAL_GPIO_Init
 753              	.LVL37:
 996:main.c        **** 
 997:main.c        ****   /*Configure GPIO pins : DCMI_D4_Pin DCMI_D3_Pin DCMI_D0_Pin DCMI_D2_Pin 
 998:main.c        ****                            DCMI_D1_Pin */
 999:main.c        ****   GPIO_InitStruct.Pin = DCMI_D4_Pin|DCMI_D3_Pin|DCMI_D0_Pin|DCMI_D2_Pin 
 754              		.loc 1 999 0
 755 040c 4FF4BC43 		mov	r3, #24064
 756 0410 0B93     		str	r3, [sp, #44]
1000:main.c        ****                           |DCMI_D1_Pin;
1001:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 757              		.loc 1 1001 0
 758 0412 0C95     		str	r5, [sp, #48]
1002:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 759              		.loc 1 1002 0
 760 0414 0D94     		str	r4, [sp, #52]
1003:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 761              		.loc 1 1003 0
 762 0416 0E94     		str	r4, [sp, #56]
1004:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 763              		.loc 1 1004 0
 764 0418 0D23     		movs	r3, #13
 765 041a 0F93     		str	r3, [sp, #60]
1005:main.c        ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 32


 766              		.loc 1 1005 0
 767 041c 0BA9     		add	r1, sp, #44
 768 041e 5B48     		ldr	r0, .L9+24
 769 0420 FFF7FEFF 		bl	HAL_GPIO_Init
 770              	.LVL38:
1006:main.c        **** 
1007:main.c        ****   /*Configure GPIO pin : ARDUINO_PWM_CS_D10_Pin */
1008:main.c        ****   GPIO_InitStruct.Pin = ARDUINO_PWM_CS_D10_Pin;
 771              		.loc 1 1008 0
 772 0424 0B97     		str	r7, [sp, #44]
1009:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 773              		.loc 1 1009 0
 774 0426 0C95     		str	r5, [sp, #48]
1010:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 775              		.loc 1 1010 0
 776 0428 0D94     		str	r4, [sp, #52]
1011:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 777              		.loc 1 1011 0
 778 042a 0E94     		str	r4, [sp, #56]
1012:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 779              		.loc 1 1012 0
 780 042c 0F95     		str	r5, [sp, #60]
1013:main.c        ****   HAL_GPIO_Init(ARDUINO_PWM_CS_D10_GPIO_Port, &GPIO_InitStruct);
 781              		.loc 1 1013 0
 782 042e 0BA9     		add	r1, sp, #44
 783 0430 5348     		ldr	r0, .L9+12
 784 0432 FFF7FEFF 		bl	HAL_GPIO_Init
 785              	.LVL39:
1014:main.c        **** 
1015:main.c        ****   /*Configure GPIO pin : ARDUINO_PWM_D5_Pin */
1016:main.c        ****   GPIO_InitStruct.Pin = ARDUINO_PWM_D5_Pin;
 786              		.loc 1 1016 0
 787 0436 4FF48073 		mov	r3, #256
 788 043a 0B93     		str	r3, [sp, #44]
1017:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 789              		.loc 1 1017 0
 790 043c 0C95     		str	r5, [sp, #48]
1018:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 791              		.loc 1 1018 0
 792 043e 0D94     		str	r4, [sp, #52]
1019:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 793              		.loc 1 1019 0
 794 0440 0E94     		str	r4, [sp, #56]
1020:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 795              		.loc 1 1020 0
 796 0442 0F97     		str	r7, [sp, #60]
1021:main.c        ****   HAL_GPIO_Init(ARDUINO_PWM_D5_GPIO_Port, &GPIO_InitStruct);
 797              		.loc 1 1021 0
 798 0444 0BA9     		add	r1, sp, #44
 799 0446 5248     		ldr	r0, .L9+28
 800 0448 FFF7FEFF 		bl	HAL_GPIO_Init
 801              	.LVL40:
1022:main.c        **** 
1023:main.c        ****   /*Configure GPIO pin : LCD_INT_Pin */
1024:main.c        ****   GPIO_InitStruct.Pin = LCD_INT_Pin;
 802              		.loc 1 1024 0
 803 044c CDF82CA0 		str	r10, [sp, #44]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 33


1025:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 804              		.loc 1 1025 0
 805 0450 504B     		ldr	r3, .L9+32
 806 0452 0C93     		str	r3, [sp, #48]
1026:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 807              		.loc 1 1026 0
 808 0454 0D94     		str	r4, [sp, #52]
1027:main.c        ****   HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 809              		.loc 1 1027 0
 810 0456 0BA9     		add	r1, sp, #44
 811 0458 4948     		ldr	r0, .L9+12
 812 045a FFF7FEFF 		bl	HAL_GPIO_Init
 813              	.LVL41:
1028:main.c        **** 
1029:main.c        ****   /*Configure GPIO pin : ULPI_NXT_Pin */
1030:main.c        ****   GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 814              		.loc 1 1030 0
 815 045e 1023     		movs	r3, #16
 816 0460 0B93     		str	r3, [sp, #44]
1031:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 817              		.loc 1 1031 0
 818 0462 0C95     		str	r5, [sp, #48]
1032:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 819              		.loc 1 1032 0
 820 0464 0D94     		str	r4, [sp, #52]
1033:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 821              		.loc 1 1033 0
 822 0466 0E96     		str	r6, [sp, #56]
1034:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 823              		.loc 1 1034 0
 824 0468 CDF83C80 		str	r8, [sp, #60]
1035:main.c        ****   HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 825              		.loc 1 1035 0
 826 046c 0BA9     		add	r1, sp, #44
 827 046e 4748     		ldr	r0, .L9+24
 828 0470 FFF7FEFF 		bl	HAL_GPIO_Init
 829              	.LVL42:
1036:main.c        **** 
1037:main.c        ****   /*Configure GPIO pins : FMC_SDNME_Pin FMC_SDNE0_Pin */
1038:main.c        ****   GPIO_InitStruct.Pin = FMC_SDNME_Pin|FMC_SDNE0_Pin;
 830              		.loc 1 1038 0
 831 0474 4FF0280A 		mov	r10, #40
 832 0478 CDF82CA0 		str	r10, [sp, #44]
1039:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 833              		.loc 1 1039 0
 834 047c 0C95     		str	r5, [sp, #48]
1040:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 835              		.loc 1 1040 0
 836 047e 0D94     		str	r4, [sp, #52]
1041:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 837              		.loc 1 1041 0
 838 0480 0E96     		str	r6, [sp, #56]
1042:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 839              		.loc 1 1042 0
 840 0482 CDF83C90 		str	r9, [sp, #60]
1043:main.c        ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 841              		.loc 1 1043 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 34


 842 0486 0BA9     		add	r1, sp, #44
 843 0488 4048     		ldr	r0, .L9+24
 844 048a FFF7FEFF 		bl	HAL_GPIO_Init
 845              	.LVL43:
1044:main.c        **** 
1045:main.c        ****   /*Configure GPIO pins : ARDUINO_D4_Pin ARDUINO_D2_Pin EXT_RST_Pin */
1046:main.c        ****   GPIO_InitStruct.Pin = ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin;
 846              		.loc 1 1046 0
 847 048e C823     		movs	r3, #200
 848 0490 0B93     		str	r3, [sp, #44]
1047:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 849              		.loc 1 1047 0
 850 0492 0C97     		str	r7, [sp, #48]
1048:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 851              		.loc 1 1048 0
 852 0494 0D94     		str	r4, [sp, #52]
1049:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 853              		.loc 1 1049 0
 854 0496 0E94     		str	r4, [sp, #56]
1050:main.c        ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 855              		.loc 1 1050 0
 856 0498 0BA9     		add	r1, sp, #44
 857 049a 3748     		ldr	r0, .L9+4
 858 049c FFF7FEFF 		bl	HAL_GPIO_Init
 859              	.LVL44:
1051:main.c        **** 
1052:main.c        ****   /*Configure GPIO pin : FMC_SDCKE0_Pin */
1053:main.c        ****   GPIO_InitStruct.Pin = FMC_SDCKE0_Pin;
 860              		.loc 1 1053 0
 861 04a0 0823     		movs	r3, #8
 862 04a2 0B93     		str	r3, [sp, #44]
1054:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 863              		.loc 1 1054 0
 864 04a4 0C95     		str	r5, [sp, #48]
1055:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 865              		.loc 1 1055 0
 866 04a6 0D94     		str	r4, [sp, #52]
1056:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 867              		.loc 1 1056 0
 868 04a8 0E96     		str	r6, [sp, #56]
1057:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 869              		.loc 1 1057 0
 870 04aa CDF83C90 		str	r9, [sp, #60]
1058:main.c        ****   HAL_GPIO_Init(FMC_SDCKE0_GPIO_Port, &GPIO_InitStruct);
 871              		.loc 1 1058 0
 872 04ae 0BA9     		add	r1, sp, #44
 873 04b0 3448     		ldr	r0, .L9+16
 874 04b2 FFF7FEFF 		bl	HAL_GPIO_Init
 875              	.LVL45:
1059:main.c        **** 
1060:main.c        ****   /*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
1061:main.c        ****   GPIO_InitStruct.Pin = ULPI_STP_Pin|ULPI_DIR_Pin;
 876              		.loc 1 1061 0
 877 04b6 4FF00509 		mov	r9, #5
 878 04ba CDF82C90 		str	r9, [sp, #44]
1062:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 879              		.loc 1 1062 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 35


 880 04be 0C95     		str	r5, [sp, #48]
1063:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 881              		.loc 1 1063 0
 882 04c0 0D94     		str	r4, [sp, #52]
1064:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 883              		.loc 1 1064 0
 884 04c2 0E96     		str	r6, [sp, #56]
1065:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 885              		.loc 1 1065 0
 886 04c4 CDF83C80 		str	r8, [sp, #60]
1066:main.c        ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 887              		.loc 1 1066 0
 888 04c8 0BA9     		add	r1, sp, #44
 889 04ca 2E48     		ldr	r0, .L9+16
 890 04cc FFF7FEFF 		bl	HAL_GPIO_Init
 891              	.LVL46:
1067:main.c        **** 
1068:main.c        ****   /*Configure GPIO pins : RMII_MDC_Pin RMII_RXD0_Pin RMII_RXD1_Pin */
1069:main.c        ****   GPIO_InitStruct.Pin = RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin;
 892              		.loc 1 1069 0
 893 04d0 3223     		movs	r3, #50
 894 04d2 0B93     		str	r3, [sp, #44]
1070:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 895              		.loc 1 1070 0
 896 04d4 0C95     		str	r5, [sp, #48]
1071:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 897              		.loc 1 1071 0
 898 04d6 0D94     		str	r4, [sp, #52]
1072:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 899              		.loc 1 1072 0
 900 04d8 0E96     		str	r6, [sp, #56]
1073:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 901              		.loc 1 1073 0
 902 04da 0B23     		movs	r3, #11
 903 04dc 0F93     		str	r3, [sp, #60]
1074:main.c        ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 904              		.loc 1 1074 0
 905 04de 0BA9     		add	r1, sp, #44
 906 04e0 2848     		ldr	r0, .L9+16
 907 04e2 FFF7FEFF 		bl	HAL_GPIO_Init
 908              	.LVL47:
1075:main.c        **** 
1076:main.c        ****   /*Configure GPIO pin : PB2 */
1077:main.c        ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 909              		.loc 1 1077 0
 910 04e6 0423     		movs	r3, #4
 911 04e8 0B93     		str	r3, [sp, #44]
1078:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 912              		.loc 1 1078 0
 913 04ea 0C95     		str	r5, [sp, #48]
1079:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 914              		.loc 1 1079 0
 915 04ec 0D94     		str	r4, [sp, #52]
1080:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 916              		.loc 1 1080 0
 917 04ee 0E96     		str	r6, [sp, #56]
1081:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 36


 918              		.loc 1 1081 0
 919 04f0 CDF83CB0 		str	fp, [sp, #60]
1082:main.c        ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 920              		.loc 1 1082 0
 921 04f4 0BA9     		add	r1, sp, #44
 922 04f6 2848     		ldr	r0, .L9+36
 923 04f8 FFF7FEFF 		bl	HAL_GPIO_Init
 924              	.LVL48:
1083:main.c        **** 
1084:main.c        ****   /*Configure GPIO pins : QSPI_D1_Pin QSPI_D3_Pin QSPI_D0_Pin */
1085:main.c        ****   GPIO_InitStruct.Pin = QSPI_D1_Pin|QSPI_D3_Pin|QSPI_D0_Pin;
 925              		.loc 1 1085 0
 926 04fc 4FF46053 		mov	r3, #14336
 927 0500 0B93     		str	r3, [sp, #44]
1086:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 928              		.loc 1 1086 0
 929 0502 0C95     		str	r5, [sp, #48]
1087:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 930              		.loc 1 1087 0
 931 0504 0D94     		str	r4, [sp, #52]
1088:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 932              		.loc 1 1088 0
 933 0506 0E96     		str	r6, [sp, #56]
1089:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 934              		.loc 1 1089 0
 935 0508 CDF83CB0 		str	fp, [sp, #60]
1090:main.c        ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 936              		.loc 1 1090 0
 937 050c 0BA9     		add	r1, sp, #44
 938 050e 1B48     		ldr	r0, .L9+8
 939 0510 FFF7FEFF 		bl	HAL_GPIO_Init
 940              	.LVL49:
1091:main.c        **** 
1092:main.c        ****   /*Configure GPIO pin : RMII_RXER_Pin */
1093:main.c        ****   GPIO_InitStruct.Pin = RMII_RXER_Pin;
 941              		.loc 1 1093 0
 942 0514 0423     		movs	r3, #4
 943 0516 0B93     		str	r3, [sp, #44]
1094:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 944              		.loc 1 1094 0
 945 0518 0C94     		str	r4, [sp, #48]
1095:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 946              		.loc 1 1095 0
 947 051a 0D94     		str	r4, [sp, #52]
1096:main.c        ****   HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 948              		.loc 1 1096 0
 949 051c 0BA9     		add	r1, sp, #44
 950 051e 1648     		ldr	r0, .L9+4
 951 0520 FFF7FEFF 		bl	HAL_GPIO_Init
 952              	.LVL50:
1097:main.c        **** 
1098:main.c        ****   /*Configure GPIO pins : RMII_REF_CLK_Pin RMII_MDIO_Pin RMII_CRS_DV_Pin */
1099:main.c        ****   GPIO_InitStruct.Pin = RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin;
 953              		.loc 1 1099 0
 954 0524 8623     		movs	r3, #134
 955 0526 0B93     		str	r3, [sp, #44]
1100:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 37


 956              		.loc 1 1100 0
 957 0528 0C95     		str	r5, [sp, #48]
1101:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 958              		.loc 1 1101 0
 959 052a 0D94     		str	r4, [sp, #52]
1102:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 960              		.loc 1 1102 0
 961 052c 0E96     		str	r6, [sp, #56]
1103:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 962              		.loc 1 1103 0
 963 052e 0B23     		movs	r3, #11
 964 0530 0F93     		str	r3, [sp, #60]
1104:main.c        ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 965              		.loc 1 1104 0
 966 0532 0BA9     		add	r1, sp, #44
 967 0534 1648     		ldr	r0, .L9+28
 968 0536 FFF7FEFF 		bl	HAL_GPIO_Init
 969              	.LVL51:
1105:main.c        **** 
1106:main.c        ****   /*Configure GPIO pin : PA0 */
1107:main.c        ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 970              		.loc 1 1107 0
 971 053a 0B97     		str	r7, [sp, #44]
1108:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 972              		.loc 1 1108 0
 973 053c 0C96     		str	r6, [sp, #48]
1109:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 974              		.loc 1 1109 0
 975 053e 0D94     		str	r4, [sp, #52]
1110:main.c        ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 976              		.loc 1 1110 0
 977 0540 0BA9     		add	r1, sp, #44
 978 0542 1348     		ldr	r0, .L9+28
 979 0544 FFF7FEFF 		bl	HAL_GPIO_Init
 980              	.LVL52:
1111:main.c        **** 
1112:main.c        ****   /*Configure GPIO pins : DCMI_HSYNC_Pin PA6 */
1113:main.c        ****   GPIO_InitStruct.Pin = DCMI_HSYNC_Pin|GPIO_PIN_6;
 981              		.loc 1 1113 0
 982 0548 5023     		movs	r3, #80
 983 054a 0B93     		str	r3, [sp, #44]
1114:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 984              		.loc 1 1114 0
 985 054c 0C95     		str	r5, [sp, #48]
1115:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 986              		.loc 1 1115 0
 987 054e 0D94     		str	r4, [sp, #52]
1116:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 988              		.loc 1 1116 0
 989 0550 0E94     		str	r4, [sp, #56]
1117:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 990              		.loc 1 1117 0
 991 0552 0D23     		movs	r3, #13
 992 0554 0F93     		str	r3, [sp, #60]
1118:main.c        ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 993              		.loc 1 1118 0
 994 0556 0BA9     		add	r1, sp, #44
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 38


 995 0558 0D48     		ldr	r0, .L9+28
 996 055a FFF7FEFF 		bl	HAL_GPIO_Init
 997              	.LVL53:
1119:main.c        **** 
1120:main.c        ****   /*Configure GPIO pins : LCD_SCL_Pin LCD_SDA_Pin */
1121:main.c        ****   GPIO_InitStruct.Pin = LCD_SCL_Pin|LCD_SDA_Pin;
 998              		.loc 1 1121 0
 999 055e 4FF4C073 		mov	r3, #384
 1000 0562 0B93     		str	r3, [sp, #44]
1122:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 1001              		.loc 1 1122 0
 1002 0564 1223     		movs	r3, #18
 1003 0566 0C93     		str	r3, [sp, #48]
1123:main.c        ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 1004              		.loc 1 1123 0
 1005 0568 0D97     		str	r7, [sp, #52]
1124:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1006              		.loc 1 1124 0
 1007 056a 0E96     		str	r6, [sp, #56]
1125:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 1008              		.loc 1 1125 0
 1009 056c 0423     		movs	r3, #4
 1010 056e 0F93     		str	r3, [sp, #60]
 1011 0570 14E0     		b	.L10
 1012              	.L11:
 1013 0572 00BF     		.align	2
 1014              	.L9:
 1015 0574 00280240 		.word	1073883136
 1016 0578 00180240 		.word	1073879040
 1017 057c 000C0240 		.word	1073875968
 1018 0580 00200240 		.word	1073881088
 1019 0584 00080240 		.word	1073874944
 1020 0588 00140240 		.word	1073878016
 1021 058c 001C0240 		.word	1073880064
 1022 0590 00000240 		.word	1073872896
 1023 0594 00001210 		.word	269615104
 1024 0598 00040240 		.word	1073873920
 1025              	.L10:
1126:main.c        ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 1026              		.loc 1 1126 0
 1027 059c 0BA9     		add	r1, sp, #44
 1028 059e 1448     		ldr	r0, .L12
 1029 05a0 FFF7FEFF 		bl	HAL_GPIO_Init
 1030              	.LVL54:
1127:main.c        **** 
1128:main.c        ****   /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
1129:main.c        ****   GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 1031              		.loc 1 1129 0
 1032 05a4 CDF82CA0 		str	r10, [sp, #44]
1130:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1033              		.loc 1 1130 0
 1034 05a8 0C95     		str	r5, [sp, #48]
1131:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1035              		.loc 1 1131 0
 1036 05aa 0D94     		str	r4, [sp, #52]
1132:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1037              		.loc 1 1132 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 39


 1038 05ac 0E96     		str	r6, [sp, #56]
1133:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 1039              		.loc 1 1133 0
 1040 05ae CDF83C80 		str	r8, [sp, #60]
1134:main.c        ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1041              		.loc 1 1134 0
 1042 05b2 0BA9     		add	r1, sp, #44
 1043 05b4 0F48     		ldr	r0, .L12+4
 1044 05b6 FFF7FEFF 		bl	HAL_GPIO_Init
 1045              	.LVL55:
1135:main.c        **** 
1136:main.c        ****   /*Configure GPIO pin : ARDUINO_PWM_D6_Pin */
1137:main.c        ****   GPIO_InitStruct.Pin = ARDUINO_PWM_D6_Pin;
 1046              		.loc 1 1137 0
 1047 05ba 4023     		movs	r3, #64
 1048 05bc 0B93     		str	r3, [sp, #44]
1138:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1049              		.loc 1 1138 0
 1050 05be 0C95     		str	r5, [sp, #48]
1139:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1051              		.loc 1 1139 0
 1052 05c0 0D94     		str	r4, [sp, #52]
1140:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1053              		.loc 1 1140 0
 1054 05c2 0E94     		str	r4, [sp, #56]
1141:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF9_TIM12;
 1055              		.loc 1 1141 0
 1056 05c4 CDF83CB0 		str	fp, [sp, #60]
1142:main.c        ****   HAL_GPIO_Init(ARDUINO_PWM_D6_GPIO_Port, &GPIO_InitStruct);
 1057              		.loc 1 1142 0
 1058 05c8 0BA9     		add	r1, sp, #44
 1059 05ca 0948     		ldr	r0, .L12
 1060 05cc FFF7FEFF 		bl	HAL_GPIO_Init
 1061              	.LVL56:
1143:main.c        **** 
1144:main.c        ****   /*Configure GPIO pins : ARDUINO_MISO_D12_Pin ARDUINO_MOSI_PWM_D11_Pin */
1145:main.c        ****   GPIO_InitStruct.Pin = ARDUINO_MISO_D12_Pin|ARDUINO_MOSI_PWM_D11_Pin;
 1062              		.loc 1 1145 0
 1063 05d0 4FF44043 		mov	r3, #49152
 1064 05d4 0B93     		str	r3, [sp, #44]
1146:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1065              		.loc 1 1146 0
 1066 05d6 0C95     		str	r5, [sp, #48]
1147:main.c        ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1067              		.loc 1 1147 0
 1068 05d8 0D94     		str	r4, [sp, #52]
1148:main.c        ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1069              		.loc 1 1148 0
 1070 05da 0E94     		str	r4, [sp, #56]
1149:main.c        ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 1071              		.loc 1 1149 0
 1072 05dc CDF83C90 		str	r9, [sp, #60]
1150:main.c        ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1073              		.loc 1 1150 0
 1074 05e0 0BA9     		add	r1, sp, #44
 1075 05e2 0548     		ldr	r0, .L12+8
 1076 05e4 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 40


 1077              	.LVL57:
1151:main.c        **** 
1152:main.c        **** }
 1078              		.loc 1 1152 0
 1079 05e8 11B0     		add	sp, sp, #68
 1080              	.LCFI2:
 1081              		.cfi_def_cfa_offset 36
 1082              		@ sp needed
 1083 05ea BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1084              	.L13:
 1085 05ee 00BF     		.align	2
 1086              	.L12:
 1087 05f0 001C0240 		.word	1073880064
 1088 05f4 00000240 		.word	1073872896
 1089 05f8 00040240 		.word	1073873920
 1090              		.cfi_endproc
 1091              	.LFE158:
 1093              		.section	.text.MX_DMA_Init,"ax",%progbits
 1094              		.align	1
 1095              		.syntax unified
 1096              		.thumb
 1097              		.thumb_func
 1098              		.fpu fpv5-sp-d16
 1100              	MX_DMA_Init:
 1101              	.LFB157:
 554:main.c        ****   /* DMA controller clock enable */
 1102              		.loc 1 554 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 8
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106 0000 00B5     		push	{lr}
 1107              	.LCFI3:
 1108              		.cfi_def_cfa_offset 4
 1109              		.cfi_offset 14, -4
 1110 0002 83B0     		sub	sp, sp, #12
 1111              	.LCFI4:
 1112              		.cfi_def_cfa_offset 16
 1113              	.LBB13:
 556:main.c        **** 
 1114              		.loc 1 556 0
 1115 0004 0E4B     		ldr	r3, .L16
 1116 0006 1A6B     		ldr	r2, [r3, #48]
 1117 0008 42F48002 		orr	r2, r2, #4194304
 1118 000c 1A63     		str	r2, [r3, #48]
 1119 000e 1B6B     		ldr	r3, [r3, #48]
 1120 0010 03F48003 		and	r3, r3, #4194304
 1121 0014 0193     		str	r3, [sp, #4]
 1122 0016 019B     		ldr	r3, [sp, #4]
 1123              	.LBE13:
 560:main.c        ****   HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 1124              		.loc 1 560 0
 1125 0018 0022     		movs	r2, #0
 1126 001a 0521     		movs	r1, #5
 1127 001c 3920     		movs	r0, #57
 1128 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1129              	.LVL58:
 561:main.c        ****   /* DMA2_Stream2_IRQn interrupt configuration */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 41


 1130              		.loc 1 561 0
 1131 0022 3920     		movs	r0, #57
 1132 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1133              	.LVL59:
 563:main.c        ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 1134              		.loc 1 563 0
 1135 0028 0022     		movs	r2, #0
 1136 002a 0521     		movs	r1, #5
 1137 002c 3A20     		movs	r0, #58
 1138 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1139              	.LVL60:
 564:main.c        **** 
 1140              		.loc 1 564 0
 1141 0032 3A20     		movs	r0, #58
 1142 0034 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1143              	.LVL61:
 566:main.c        **** 
 1144              		.loc 1 566 0
 1145 0038 03B0     		add	sp, sp, #12
 1146              	.LCFI5:
 1147              		.cfi_def_cfa_offset 4
 1148              		@ sp needed
 1149 003a 5DF804FB 		ldr	pc, [sp], #4
 1150              	.L17:
 1151 003e 00BF     		.align	2
 1152              	.L16:
 1153 0040 00380240 		.word	1073887232
 1154              		.cfi_endproc
 1155              	.LFE157:
 1157              		.section	.text._write,"ax",%progbits
 1158              		.align	1
 1159              		.global	_write
 1160              		.syntax unified
 1161              		.thumb
 1162              		.thumb_func
 1163              		.fpu fpv5-sp-d16
 1165              	_write:
 1166              	.LFB141:
 136:main.c        **** 	if ((file != STDOUT_FILENO) && (file != STDERR_FILENO))
 1167              		.loc 1 136 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              	.LVL62:
 1172 0000 10B5     		push	{r4, lr}
 1173              	.LCFI6:
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 4, -8
 1176              		.cfi_offset 14, -4
 137:main.c        **** 	{
 1177              		.loc 1 137 0
 1178 0002 0138     		subs	r0, r0, #1
 1179              	.LVL63:
 1180 0004 0128     		cmp	r0, #1
 1181 0006 01D8     		bhi	.L24
 1182 0008 1346     		mov	r3, r2
 1183 000a 10E0     		b	.L19
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 42


 1184              	.L24:
 139:main.c        **** 		return -1;
 1185              		.loc 1 139 0
 1186 000c FFF7FEFF 		bl	__errno
 1187              	.LVL64:
 1188 0010 0923     		movs	r3, #9
 1189 0012 0360     		str	r3, [r0]
 140:main.c        **** 	}
 1190              		.loc 1 140 0
 1191 0014 4FF0FF32 		mov	r2, #-1
 1192 0018 0CE0     		b	.L20
 1193              	.LVL65:
 1194              	.L21:
 154:main.c        **** 			huart1.Instance->TDR = (uint16_t)(*data++);
 1195              		.loc 1 154 0 discriminator 1
 1196 001a 074B     		ldr	r3, .L25
 1197 001c 1B68     		ldr	r3, [r3]
 1198 001e D869     		ldr	r0, [r3, #28]
 1199 0020 10F0800F 		tst	r0, #128
 1200 0024 F9D0     		beq	.L21
 1201              	.LVL66:
 155:main.c        **** 		}
 1202              		.loc 1 155 0
 1203 0026 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1204 0028 9862     		str	r0, [r3, #40]
 152:main.c        **** 		{
 1205              		.loc 1 152 0
 1206 002a 2346     		mov	r3, r4
 155:main.c        **** 		}
 1207              		.loc 1 155 0
 1208 002c 0131     		adds	r1, r1, #1
 1209              	.LVL67:
 1210              	.L19:
 152:main.c        **** 		{
 1211              		.loc 1 152 0
 1212 002e 5C1E     		subs	r4, r3, #1
 1213              	.LVL68:
 1214 0030 002B     		cmp	r3, #0
 1215 0032 F2D1     		bne	.L21
 1216              	.LVL69:
 1217              	.L20:
 159:main.c        **** 
 1218              		.loc 1 159 0
 1219 0034 1046     		mov	r0, r2
 1220 0036 10BD     		pop	{r4, pc}
 1221              	.L26:
 1222              		.align	2
 1223              	.L25:
 1224 0038 00000000 		.word	huart1
 1225              		.cfi_endproc
 1226              	.LFE141:
 1228              		.section	.text.inkey,"ax",%progbits
 1229              		.align	1
 1230              		.global	inkey
 1231              		.syntax unified
 1232              		.thumb
 1233              		.thumb_func
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 43


 1234              		.fpu fpv5-sp-d16
 1236              	inkey:
 1237              	.LFB142:
 162:main.c        **** 	uint32_t flags = huart1.Instance->ISR;
 1238              		.loc 1 162 0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242              		@ link register save eliminated.
 163:main.c        **** 	
 1243              		.loc 1 163 0
 1244 0000 064B     		ldr	r3, .L30
 1245 0002 1B68     		ldr	r3, [r3]
 1246 0004 DA69     		ldr	r2, [r3, #28]
 1247              	.LVL70:
 165:main.c        **** 	{
 1248              		.loc 1 165 0
 1249 0006 12F0280F 		tst	r2, #40
 1250 000a 04D0     		beq	.L29
 167:main.c        **** 		return (huart1.Instance->RDR);
 1251              		.loc 1 167 0
 1252 000c 0822     		movs	r2, #8
 1253              	.LVL71:
 1254 000e 1A62     		str	r2, [r3, #32]
 168:main.c        **** 	}
 1255              		.loc 1 168 0
 1256 0010 586A     		ldr	r0, [r3, #36]
 1257 0012 C0B2     		uxtb	r0, r0
 1258 0014 7047     		bx	lr
 1259              	.LVL72:
 1260              	.L29:
 171:main.c        **** }
 1261              		.loc 1 171 0
 1262 0016 0020     		movs	r0, #0
 172:main.c        **** 
 1263              		.loc 1 172 0
 1264 0018 7047     		bx	lr
 1265              	.L31:
 1266 001a 00BF     		.align	2
 1267              	.L30:
 1268 001c 00000000 		.word	huart1
 1269              		.cfi_endproc
 1270              	.LFE142:
 1272              		.section	.text.initialize_touchscreen,"ax",%progbits
 1273              		.align	1
 1274              		.global	initialize_touchscreen
 1275              		.syntax unified
 1276              		.thumb
 1277              		.thumb_func
 1278              		.fpu fpv5-sp-d16
 1280              	initialize_touchscreen:
 1281              	.LFB143:
 174:main.c        **** 	uint8_t  status = 0;
 1282              		.loc 1 174 0
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 0
 1285              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 44


 1286 0000 10B5     		push	{r4, lr}
 1287              	.LCFI7:
 1288              		.cfi_def_cfa_offset 8
 1289              		.cfi_offset 4, -8
 1290              		.cfi_offset 14, -4
 1291              	.LVL73:
 176:main.c        **** 	if (status != TS_OK)
 1292              		.loc 1 176 0
 1293 0002 FFF7FEFF 		bl	BSP_LCD_GetXSize
 1294              	.LVL74:
 1295 0006 84B2     		uxth	r4, r0
 1296 0008 FFF7FEFF 		bl	BSP_LCD_GetYSize
 1297              	.LVL75:
 1298 000c 81B2     		uxth	r1, r0
 1299 000e 2046     		mov	r0, r4
 1300 0010 FFF7FEFF 		bl	BSP_TS_Init
 1301              	.LVL76:
 177:main.c        **** 	{
 1302              		.loc 1 177 0
 1303 0014 00B9     		cbnz	r0, .L35
 1304              	.LVL77:
 1305              	.L32:
 1306 0016 10BD     		pop	{r4, pc}
 1307              	.LVL78:
 1308              	.L35:
 179:main.c        **** 		BSP_LCD_SetTextColor(LCD_COLOR_RED);
 1309              		.loc 1 179 0
 1310 0018 4FF0FF30 		mov	r0, #-1
 1311              	.LVL79:
 1312 001c FFF7FEFF 		bl	BSP_LCD_SetBackColor
 1313              	.LVL80:
 180:main.c        **** 		BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() - 95, (uint8_t *)"ERROR", CENTER_MODE);
 1314              		.loc 1 180 0
 1315 0020 0B48     		ldr	r0, .L36
 1316 0022 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1317              	.LVL81:
 181:main.c        **** 		BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() - 80, (uint8_t *)"Touchscreen cannot be initialized
 1318              		.loc 1 181 0
 1319 0026 FFF7FEFF 		bl	BSP_LCD_GetYSize
 1320              	.LVL82:
 1321 002a A0F15F01 		sub	r1, r0, #95
 1322 002e 0123     		movs	r3, #1
 1323 0030 084A     		ldr	r2, .L36+4
 1324 0032 89B2     		uxth	r1, r1
 1325 0034 0020     		movs	r0, #0
 1326 0036 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 1327              	.LVL83:
 182:main.c        **** 		return;
 1328              		.loc 1 182 0
 1329 003a FFF7FEFF 		bl	BSP_LCD_GetYSize
 1330              	.LVL84:
 1331 003e A0F15001 		sub	r1, r0, #80
 1332 0042 0123     		movs	r3, #1
 1333 0044 044A     		ldr	r2, .L36+8
 1334 0046 89B2     		uxth	r1, r1
 1335 0048 0020     		movs	r0, #0
 1336 004a FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 45


 1337              	.LVL85:
 183:main.c        **** 	}
 1338              		.loc 1 183 0
 1339 004e E2E7     		b	.L32
 1340              	.L37:
 1341              		.align	2
 1342              	.L36:
 1343 0050 0000FFFF 		.word	-65536
 1344 0054 00000000 		.word	.LC0
 1345 0058 08000000 		.word	.LC1
 1346              		.cfi_endproc
 1347              	.LFE143:
 1349              		.section	.text.lcd_start,"ax",%progbits
 1350              		.align	1
 1351              		.global	lcd_start
 1352              		.syntax unified
 1353              		.thumb
 1354              		.thumb_func
 1355              		.fpu fpv5-sp-d16
 1357              	lcd_start:
 1358              	.LFB144:
 187:main.c        **** 	BSP_LCD_Init();
 1359              		.loc 1 187 0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 0
 1362              		@ frame_needed = 0, uses_anonymous_args = 0
 1363 0000 08B5     		push	{r3, lr}
 1364              	.LCFI8:
 1365              		.cfi_def_cfa_offset 8
 1366              		.cfi_offset 3, -8
 1367              		.cfi_offset 14, -4
 188:main.c        **** 	BSP_LCD_LayerRgb565Init(1, (uint32_t)&lcd_image_fg);
 1368              		.loc 1 188 0
 1369 0002 FFF7FEFF 		bl	BSP_LCD_Init
 1370              	.LVL86:
 189:main.c        **** 	BSP_LCD_LayerRgb565Init(0, (uint32_t)&lcd_image_bg);
 1371              		.loc 1 189 0
 1372 0006 1049     		ldr	r1, .L40
 1373 0008 0120     		movs	r0, #1
 1374 000a FFF7FEFF 		bl	BSP_LCD_LayerRgb565Init
 1375              	.LVL87:
 190:main.c        **** 	
 1376              		.loc 1 190 0
 1377 000e 0F49     		ldr	r1, .L40+4
 1378 0010 0020     		movs	r0, #0
 1379 0012 FFF7FEFF 		bl	BSP_LCD_LayerRgb565Init
 1380              	.LVL88:
 192:main.c        **** 	
 1381              		.loc 1 192 0
 1382 0016 FFF7FEFF 		bl	BSP_LCD_DisplayOn
 1383              	.LVL89:
 194:main.c        **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 1384              		.loc 1 194 0
 1385 001a 0020     		movs	r0, #0
 1386 001c FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1387              	.LVL90:
 195:main.c        **** 	BSP_LCD_SelectLayer(1);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 46


 1388              		.loc 1 195 0
 1389 0020 4FF0FF30 		mov	r0, #-1
 1390 0024 FFF7FEFF 		bl	BSP_LCD_Clear
 1391              	.LVL91:
 196:main.c        **** 	BSP_LCD_Clear(LCD_COLOR_WHITE);
 1392              		.loc 1 196 0
 1393 0028 0120     		movs	r0, #1
 1394 002a FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1395              	.LVL92:
 197:main.c        **** 	
 1396              		.loc 1 197 0
 1397 002e 4FF0FF30 		mov	r0, #-1
 1398 0032 FFF7FEFF 		bl	BSP_LCD_Clear
 1399              	.LVL93:
 199:main.c        **** 	BSP_LCD_SetTransparency(1, 100);
 1400              		.loc 1 199 0
 1401 0036 FF21     		movs	r1, #255
 1402 0038 0020     		movs	r0, #0
 1403 003a FFF7FEFF 		bl	BSP_LCD_SetTransparency
 1404              	.LVL94:
 200:main.c        **** 	
 1405              		.loc 1 200 0
 1406 003e 6421     		movs	r1, #100
 1407 0040 0120     		movs	r0, #1
 1408 0042 FFF7FEFF 		bl	BSP_LCD_SetTransparency
 1409              	.LVL95:
 1410 0046 08BD     		pop	{r3, pc}
 1411              	.L41:
 1412              		.align	2
 1413              	.L40:
 1414 0048 00000000 		.word	.LANCHOR0
 1415 004c 00F80700 		.word	.LANCHOR1+960
 1416              		.cfi_endproc
 1417              	.LFE144:
 1419              		.section	.text.draw_background,"ax",%progbits
 1420              		.align	1
 1421              		.global	draw_background
 1422              		.syntax unified
 1423              		.thumb
 1424              		.thumb_func
 1425              		.fpu fpv5-sp-d16
 1427              	draw_background:
 1428              	.LFB145:
 204:main.c        **** 	BSP_LCD_SelectLayer(0);
 1429              		.loc 1 204 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433 0000 08B5     		push	{r3, lr}
 1434              	.LCFI9:
 1435              		.cfi_def_cfa_offset 8
 1436              		.cfi_offset 3, -8
 1437              		.cfi_offset 14, -4
 205:main.c        **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLUE);
 1438              		.loc 1 205 0
 1439 0002 0020     		movs	r0, #0
 1440 0004 FFF7FEFF 		bl	BSP_LCD_SelectLayer
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 47


 1441              	.LVL96:
 206:main.c        **** 	BSP_LCD_FillRect(0, 136, 480, 130);
 1442              		.loc 1 206 0
 1443 0008 0B48     		ldr	r0, .L44
 1444 000a FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1445              	.LVL97:
 207:main.c        **** 	BSP_LCD_SelectLayer(0);
 1446              		.loc 1 207 0
 1447 000e 8223     		movs	r3, #130
 1448 0010 4FF4F072 		mov	r2, #480
 1449 0014 8821     		movs	r1, #136
 1450 0016 0020     		movs	r0, #0
 1451 0018 FFF7FEFF 		bl	BSP_LCD_FillRect
 1452              	.LVL98:
 208:main.c        **** 	BSP_LCD_SetTextColor(LCD_COLOR_ORANGE);
 1453              		.loc 1 208 0
 1454 001c 0020     		movs	r0, #0
 1455 001e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1456              	.LVL99:
 209:main.c        **** 	BSP_LCD_FillEllipse(240, 130, 30, 30);
 1457              		.loc 1 209 0
 1458 0022 0648     		ldr	r0, .L44+4
 1459 0024 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1460              	.LVL100:
 210:main.c        **** }
 1461              		.loc 1 210 0
 1462 0028 1E23     		movs	r3, #30
 1463 002a 1A46     		mov	r2, r3
 1464 002c 8221     		movs	r1, #130
 1465 002e F020     		movs	r0, #240
 1466 0030 FFF7FEFF 		bl	BSP_LCD_FillEllipse
 1467              	.LVL101:
 1468 0034 08BD     		pop	{r3, pc}
 1469              	.L45:
 1470 0036 00BF     		.align	2
 1471              	.L44:
 1472 0038 FF0000FF 		.word	-16776961
 1473 003c 00A5FFFF 		.word	-23296
 1474              		.cfi_endproc
 1475              	.LFE145:
 1477              		.section	.text.show_number,"ax",%progbits
 1478              		.align	1
 1479              		.global	show_number
 1480              		.syntax unified
 1481              		.thumb
 1482              		.thumb_func
 1483              		.fpu fpv5-sp-d16
 1485              	show_number:
 1486              	.LFB159:
1153:main.c        **** 
1154:main.c        **** void show_number(int counter){
 1487              		.loc 1 1154 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 0
 1490              		@ frame_needed = 0, uses_anonymous_args = 0
 1491              	.LVL102:
 1492 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 48


 1493              	.LCFI10:
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 4, -8
 1496              		.cfi_offset 14, -4
1155:main.c        ****   counter=counter%10;
 1497              		.loc 1 1155 0
 1498 0002 4E4B     		ldr	r3, .L60
 1499 0004 83FB0023 		smull	r2, r3, r3, r0
 1500 0008 C417     		asrs	r4, r0, #31
 1501 000a C4EBA304 		rsb	r4, r4, r3, asr #2
 1502 000e 04EB8404 		add	r4, r4, r4, lsl #2
 1503 0012 6300     		lsls	r3, r4, #1
 1504 0014 C41A     		subs	r4, r0, r3
 1505              	.LVL103:
1156:main.c        ****   uint16_t PosX= 470;
1157:main.c        ****   uint16_t PosY= 7;
1158:main.c        ****   uint16_t Width = 3;
1159:main.c        ****   uint16_t Heigth= 5;
1160:main.c        **** 
1161:main.c        ****   BSP_LCD_SelectLayer(1);
 1506              		.loc 1 1161 0
 1507 0016 0120     		movs	r0, #1
 1508 0018 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1509              	.LVL104:
1162:main.c        **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLUE);
 1510              		.loc 1 1162 0
 1511 001c 4848     		ldr	r0, .L60+4
 1512 001e FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1513              	.LVL105:
1163:main.c        **** 
1164:main.c        ****   if(counter==0){
 1514              		.loc 1 1164 0
 1515 0022 54B1     		cbz	r4, .L54
1165:main.c        ****     BSP_LCD_FillRect(PosX, PosY, Width, Heigth);
1166:main.c        **** 	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
1167:main.c        ****     BSP_LCD_FillRect(PosX+1, PosY+1, 1, 3);
1168:main.c        ****   }
1169:main.c        ****   else if(counter==1){
 1516              		.loc 1 1169 0
 1517 0024 012C     		cmp	r4, #1
 1518 0026 1BD0     		beq	.L55
1170:main.c        ****     BSP_LCD_FillRect(PosX, PosY, Width, Heigth);
1171:main.c        ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
1172:main.c        ****     BSP_LCD_FillRect(PosX, PosY, Width-1, Heigth);
1173:main.c        ****   }
1174:main.c        ****   else if(counter==2){
 1519              		.loc 1 1174 0
 1520 0028 022C     		cmp	r4, #2
 1521 002a 2CD0     		beq	.L56
1175:main.c        ****     BSP_LCD_FillRect(PosX, PosY, Width, Heigth);
1176:main.c        ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
1177:main.c        ****     BSP_LCD_FillRect(PosX, PosY+1, 2, 1);
1178:main.c        ****     BSP_LCD_FillRect(PosX+1, PosY+3, 2, 1);
1179:main.c        ****   }
1180:main.c        ****   else if(counter==3){
 1522              		.loc 1 1180 0
 1523 002c 032C     		cmp	r4, #3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 49


 1524 002e 44D0     		beq	.L57
1181:main.c        ****     BSP_LCD_FillRect(PosX, PosY, Width, Heigth);
1182:main.c        ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
1183:main.c        ****     BSP_LCD_FillRect(PosX, PosY+1, 2, 1);
1184:main.c        ****     BSP_LCD_FillRect(PosX, PosY+3, 2, 1);
1185:main.c        ****   }
1186:main.c        ****   else if(counter==4){
 1525              		.loc 1 1186 0
 1526 0030 042C     		cmp	r4, #4
 1527 0032 5CD0     		beq	.L58
1187:main.c        ****     BSP_LCD_FillRect(PosX, PosY, Width, Heigth);
1188:main.c        ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
1189:main.c        ****     BSP_LCD_FillRect(PosX+1, PosY, 1, 2);
1190:main.c        ****     BSP_LCD_FillRect(PosX, PosY+3, 2, 2);
1191:main.c        ****   }
1192:main.c        ****   else if(counter==5){
 1528              		.loc 1 1192 0
 1529 0034 052C     		cmp	r4, #5
 1530 0036 74D0     		beq	.L59
 1531              	.L46:
 1532 0038 10BD     		pop	{r4, pc}
 1533              	.LVL106:
 1534              	.L54:
1165:main.c        **** 	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 1535              		.loc 1 1165 0
 1536 003a 0523     		movs	r3, #5
 1537 003c 0322     		movs	r2, #3
 1538 003e 0721     		movs	r1, #7
 1539 0040 4FF4EB70 		mov	r0, #470
 1540 0044 FFF7FEFF 		bl	BSP_LCD_FillRect
 1541              	.LVL107:
1166:main.c        ****     BSP_LCD_FillRect(PosX+1, PosY+1, 1, 3);
 1542              		.loc 1 1166 0
 1543 0048 4FF0FF30 		mov	r0, #-1
 1544 004c FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1545              	.LVL108:
1167:main.c        ****   }
 1546              		.loc 1 1167 0
 1547 0050 0323     		movs	r3, #3
 1548 0052 0122     		movs	r2, #1
 1549 0054 0821     		movs	r1, #8
 1550 0056 40F2D710 		movw	r0, #471
 1551 005a FFF7FEFF 		bl	BSP_LCD_FillRect
 1552              	.LVL109:
 1553 005e 10BD     		pop	{r4, pc}
 1554              	.LVL110:
 1555              	.L55:
1170:main.c        ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 1556              		.loc 1 1170 0
 1557 0060 0523     		movs	r3, #5
 1558 0062 0322     		movs	r2, #3
 1559 0064 0721     		movs	r1, #7
 1560 0066 4FF4EB70 		mov	r0, #470
 1561 006a FFF7FEFF 		bl	BSP_LCD_FillRect
 1562              	.LVL111:
1171:main.c        ****     BSP_LCD_FillRect(PosX, PosY, Width-1, Heigth);
 1563              		.loc 1 1171 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 50


 1564 006e 4FF0FF30 		mov	r0, #-1
 1565 0072 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1566              	.LVL112:
1172:main.c        ****   }
 1567              		.loc 1 1172 0
 1568 0076 0523     		movs	r3, #5
 1569 0078 0222     		movs	r2, #2
 1570 007a 0721     		movs	r1, #7
 1571 007c 4FF4EB70 		mov	r0, #470
 1572 0080 FFF7FEFF 		bl	BSP_LCD_FillRect
 1573              	.LVL113:
 1574 0084 10BD     		pop	{r4, pc}
 1575              	.LVL114:
 1576              	.L56:
1175:main.c        ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 1577              		.loc 1 1175 0
 1578 0086 0523     		movs	r3, #5
 1579 0088 0322     		movs	r2, #3
 1580 008a 0721     		movs	r1, #7
 1581 008c 4FF4EB70 		mov	r0, #470
 1582 0090 FFF7FEFF 		bl	BSP_LCD_FillRect
 1583              	.LVL115:
1176:main.c        ****     BSP_LCD_FillRect(PosX, PosY+1, 2, 1);
 1584              		.loc 1 1176 0
 1585 0094 4FF0FF30 		mov	r0, #-1
 1586 0098 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1587              	.LVL116:
1177:main.c        ****     BSP_LCD_FillRect(PosX+1, PosY+3, 2, 1);
 1588              		.loc 1 1177 0
 1589 009c 0123     		movs	r3, #1
 1590 009e 0222     		movs	r2, #2
 1591 00a0 0821     		movs	r1, #8
 1592 00a2 4FF4EB70 		mov	r0, #470
 1593 00a6 FFF7FEFF 		bl	BSP_LCD_FillRect
 1594              	.LVL117:
1178:main.c        ****   }
 1595              		.loc 1 1178 0
 1596 00aa 0123     		movs	r3, #1
 1597 00ac 0222     		movs	r2, #2
 1598 00ae 0A21     		movs	r1, #10
 1599 00b0 40F2D710 		movw	r0, #471
 1600 00b4 FFF7FEFF 		bl	BSP_LCD_FillRect
 1601              	.LVL118:
 1602 00b8 10BD     		pop	{r4, pc}
 1603              	.LVL119:
 1604              	.L57:
1181:main.c        ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 1605              		.loc 1 1181 0
 1606 00ba 0523     		movs	r3, #5
 1607 00bc 0322     		movs	r2, #3
 1608 00be 0721     		movs	r1, #7
 1609 00c0 4FF4EB70 		mov	r0, #470
 1610 00c4 FFF7FEFF 		bl	BSP_LCD_FillRect
 1611              	.LVL120:
1182:main.c        ****     BSP_LCD_FillRect(PosX, PosY+1, 2, 1);
 1612              		.loc 1 1182 0
 1613 00c8 4FF0FF30 		mov	r0, #-1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 51


 1614 00cc FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1615              	.LVL121:
1183:main.c        ****     BSP_LCD_FillRect(PosX, PosY+3, 2, 1);
 1616              		.loc 1 1183 0
 1617 00d0 0123     		movs	r3, #1
 1618 00d2 0222     		movs	r2, #2
 1619 00d4 0821     		movs	r1, #8
 1620 00d6 4FF4EB70 		mov	r0, #470
 1621 00da FFF7FEFF 		bl	BSP_LCD_FillRect
 1622              	.LVL122:
1184:main.c        ****   }
 1623              		.loc 1 1184 0
 1624 00de 0123     		movs	r3, #1
 1625 00e0 0222     		movs	r2, #2
 1626 00e2 0A21     		movs	r1, #10
 1627 00e4 4FF4EB70 		mov	r0, #470
 1628 00e8 FFF7FEFF 		bl	BSP_LCD_FillRect
 1629              	.LVL123:
 1630 00ec 10BD     		pop	{r4, pc}
 1631              	.LVL124:
 1632              	.L58:
1187:main.c        ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 1633              		.loc 1 1187 0
 1634 00ee 0523     		movs	r3, #5
 1635 00f0 0322     		movs	r2, #3
 1636 00f2 0721     		movs	r1, #7
 1637 00f4 4FF4EB70 		mov	r0, #470
 1638 00f8 FFF7FEFF 		bl	BSP_LCD_FillRect
 1639              	.LVL125:
1188:main.c        ****     BSP_LCD_FillRect(PosX+1, PosY, 1, 2);
 1640              		.loc 1 1188 0
 1641 00fc 4FF0FF30 		mov	r0, #-1
 1642 0100 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1643              	.LVL126:
1189:main.c        ****     BSP_LCD_FillRect(PosX, PosY+3, 2, 2);
 1644              		.loc 1 1189 0
 1645 0104 0223     		movs	r3, #2
 1646 0106 0122     		movs	r2, #1
 1647 0108 0721     		movs	r1, #7
 1648 010a 40F2D710 		movw	r0, #471
 1649 010e FFF7FEFF 		bl	BSP_LCD_FillRect
 1650              	.LVL127:
1190:main.c        ****   }
 1651              		.loc 1 1190 0
 1652 0112 0223     		movs	r3, #2
 1653 0114 1A46     		mov	r2, r3
 1654 0116 0A21     		movs	r1, #10
 1655 0118 4FF4EB70 		mov	r0, #470
 1656 011c FFF7FEFF 		bl	BSP_LCD_FillRect
 1657              	.LVL128:
 1658 0120 10BD     		pop	{r4, pc}
 1659              	.LVL129:
 1660              	.L59:
1193:main.c        **** 	BSP_LCD_FillRect(PosX, PosY, Width, Heigth);
 1661              		.loc 1 1193 0
 1662 0122 0523     		movs	r3, #5
 1663 0124 0322     		movs	r2, #3
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 52


 1664 0126 0721     		movs	r1, #7
 1665 0128 4FF4EB70 		mov	r0, #470
 1666 012c FFF7FEFF 		bl	BSP_LCD_FillRect
 1667              	.LVL130:
1194:main.c        ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 1668              		.loc 1 1194 0
 1669 0130 4FF0FF30 		mov	r0, #-1
 1670 0134 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1671              	.LVL131:
1195:main.c        **** 	
1196:main.c        ****   }
1197:main.c        ****   
1198:main.c        **** }
 1672              		.loc 1 1198 0
 1673 0138 7EE7     		b	.L46
 1674              	.L61:
 1675 013a 00BF     		.align	2
 1676              	.L60:
 1677 013c 67666666 		.word	1717986919
 1678 0140 FF0000FF 		.word	-16776961
 1679              		.cfi_endproc
 1680              	.LFE159:
 1682              		.section	.text.mainTask,"ax",%progbits
 1683              		.align	1
 1684              		.global	mainTask
 1685              		.syntax unified
 1686              		.thumb
 1687              		.thumb_func
 1688              		.fpu fpv5-sp-d16
 1690              	mainTask:
 1691              	.LFB160:
1199:main.c        **** 
1200:main.c        **** 
1201:main.c        **** void mainTask(void* p)
1202:main.c        **** {
 1692              		.loc 1 1202 0
 1693              		.cfi_startproc
 1694              		@ args = 0, pretend = 0, frame = 0
 1695              		@ frame_needed = 0, uses_anonymous_args = 0
 1696              	.LVL132:
 1697 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1698              	.LCFI11:
 1699              		.cfi_def_cfa_offset 40
 1700              		.cfi_offset 3, -40
 1701              		.cfi_offset 4, -36
 1702              		.cfi_offset 5, -32
 1703              		.cfi_offset 6, -28
 1704              		.cfi_offset 7, -24
 1705              		.cfi_offset 8, -20
 1706              		.cfi_offset 9, -16
 1707              		.cfi_offset 10, -12
 1708              		.cfi_offset 11, -8
 1709              		.cfi_offset 14, -4
1203:main.c        **** 
1204:main.c        **** 	lcd_start();
 1710              		.loc 1 1204 0
 1711 0004 FFF7FEFF 		bl	lcd_start
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 53


 1712              	.LVL133:
1205:main.c        **** 	
1206:main.c        **** 	//draw_background();
1207:main.c        **** 	initialize_touchscreen();
 1713              		.loc 1 1207 0
 1714 0008 FFF7FEFF 		bl	initialize_touchscreen
 1715              	.LVL134:
1208:main.c        **** 	
1209:main.c        **** 	/* init code for FATFS */
1210:main.c        **** 	MX_FATFS_Init();
 1716              		.loc 1 1210 0
 1717 000c FFF7FEFF 		bl	MX_FATFS_Init
 1718              	.LVL135:
1211:main.c        **** 
1212:main.c        **** 	/* init code for USB_HOST */
1213:main.c        **** 	MX_USB_HOST_Init();
 1719              		.loc 1 1213 0
 1720 0010 FFF7FEFF 		bl	MX_USB_HOST_Init
 1721              	.LVL136:
1214:main.c        **** 
1215:main.c        **** 	xprintf("LCD resolution X: %d, Y: %d\n",(int)LCD_X_SIZE,(int)LCD_Y_SIZE);
 1722              		.loc 1 1215 0
 1723 0014 4FF48872 		mov	r2, #272
 1724 0018 4FF4F071 		mov	r1, #480
 1725 001c 5048     		ldr	r0, .L85
 1726 001e FFF7FEFF 		bl	xprintf
 1727              	.LVL137:
1216:main.c        **** 	
1217:main.c        **** 	xprintf("entering mainTask loop...\n");
 1728              		.loc 1 1217 0
 1729 0022 5048     		ldr	r0, .L85+4
 1730 0024 FFF7FEFF 		bl	xprintf
 1731              	.LVL138:
1218:main.c        **** 	
1219:main.c        **** 
1220:main.c        ****   //Ball
1221:main.c        ****   uint16_t BallXPos=0, BallYPos=0;
1222:main.c        ****   int BallVecX=1, BallVecY=1;
1223:main.c        ****   uint16_t BallWidth=5;
1224:main.c        ****   
1225:main.c        ****   
1226:main.c        ****   /*BSP_LCD_SelectLayer(0);
1227:main.c        **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLUE);
1228:main.c        **** */  BSP_LCD_FillRect(BallXPos, BallYPos, 20, 20);
 1732              		.loc 1 1228 0
 1733 0028 1423     		movs	r3, #20
 1734 002a 1A46     		mov	r2, r3
 1735 002c 0021     		movs	r1, #0
 1736 002e 0846     		mov	r0, r1
 1737 0030 FFF7FEFF 		bl	BSP_LCD_FillRect
 1738              	.LVL139:
1229:main.c        ****   
1230:main.c        **** 
1231:main.c        **** 
1232:main.c        ****   //Racket
1233:main.c        ****   uint16_t RacketXPos=214, RacketYPos=261;
1234:main.c        ****   uint16_t RacketHeigth=10, RacketWidth=50;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 54


1235:main.c        ****   /*BSP_LCD_SelectLayer(0);
1236:main.c        **** 	BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
1237:main.c        ****   BSP_LCD_FillRect(RacketXPos, RacketYPos, RacketWidth, RacketHeigth);
1238:main.c        ****   */
1239:main.c        ****   int flag=0;
 1739              		.loc 1 1239 0
 1740 0034 4FF00008 		mov	r8, #0
1222:main.c        ****   uint16_t BallWidth=5;
 1741              		.loc 1 1222 0
 1742 0038 4FF0010A 		mov	r10, #1
 1743 003c D146     		mov	r9, r10
 1744              	.LVL140:
 1745              	.L75:
1240:main.c        ****   int counter=0;
1241:main.c        **** 
1242:main.c        **** 	while(1)
1243:main.c        **** 	{
1244:main.c        ****     BSP_LCD_SelectLayer(0);     //Czyszczenie tla i ustawianie koloru
 1746              		.loc 1 1244 0
 1747 003e 0020     		movs	r0, #0
 1748 0040 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1749              	.LVL141:
1245:main.c        **** 		BSP_LCD_Clear(LCD_COLOR_WHITE);
 1750              		.loc 1 1245 0
 1751 0044 4FF0FF30 		mov	r0, #-1
 1752 0048 FFF7FEFF 		bl	BSP_LCD_Clear
 1753              	.LVL142:
1246:main.c        **** 		BSP_LCD_SelectLayer(1);
 1754              		.loc 1 1246 0
 1755 004c 0120     		movs	r0, #1
 1756 004e FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1757              	.LVL143:
1247:main.c        **** 		BSP_LCD_Clear(LCD_COLOR_WHITE);
 1758              		.loc 1 1247 0
 1759 0052 4FF0FF30 		mov	r0, #-1
 1760 0056 FFF7FEFF 		bl	BSP_LCD_Clear
 1761              	.LVL144:
1248:main.c        **** 
1249:main.c        ****     BallXPos=0;
1250:main.c        ****     BallYPos=0;
1251:main.c        ****     RacketXPos=214;
1252:main.c        ****     RacketYPos=261;
1253:main.c        ****     counter=0;
1254:main.c        **** 
1255:main.c        ****     BSP_TS_GetState(&TS_State1);
 1762              		.loc 1 1255 0
 1763 005a 434C     		ldr	r4, .L85+8
 1764 005c 2046     		mov	r0, r4
 1765 005e FFF7FEFF 		bl	BSP_TS_GetState
 1766              	.LVL145:
1256:main.c        ****     if(TS_State1.touchDetected)
 1767              		.loc 1 1256 0
 1768 0062 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1769 0064 0BB1     		cbz	r3, .L63
1257:main.c        ****       flag=1;
 1770              		.loc 1 1257 0
 1771 0066 4FF00108 		mov	r8, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 55


 1772              	.LVL146:
 1773              	.L63:
1258:main.c        **** 
1259:main.c        ****     while(flag==1){
1260:main.c        ****       BSP_LCD_SelectLayer(0);     //Czyszczenie tla i ustawianie koloru
1261:main.c        **** 		  BSP_LCD_Clear(LCD_COLOR_WHITE);
1262:main.c        **** 		  BSP_LCD_SelectLayer(1);
1263:main.c        **** 	  	BSP_LCD_Clear(LCD_COLOR_WHITE);
1264:main.c        **** 
1265:main.c        ****       //Odbicie
1266:main.c        ****       if(BallYPos+BallWidth==RacketYPos){
1267:main.c        ****         if(BallXPos>=RacketXPos && BallXPos < RacketXPos+RacketWidth){
1268:main.c        ****           BallVecY=-1;
1269:main.c        ****           counter++;
1270:main.c        ****         }
1271:main.c        ****       }
1272:main.c        **** 
1273:main.c        ****       //Ball Vectors
1274:main.c        ****       if(BallXPos+BallWidth==479)
1275:main.c        ****         BallVecX=-1;
1276:main.c        ****       else if(BallXPos==0)
1277:main.c        ****         BallVecX=1;
1278:main.c        **** 
1279:main.c        ****       if(BallYPos+BallWidth==271)
1280:main.c        ****         flag=0;
1281:main.c        ****       else if(BallYPos==0)
1282:main.c        ****         BallVecY=1;
 1774              		.loc 1 1282 0
 1775 006a 4FF0000B 		mov	fp, #0
 1776 006e D626     		movs	r6, #214
 1777 0070 5C46     		mov	r4, fp
 1778 0072 5D46     		mov	r5, fp
 1779 0074 3FE0     		b	.L64
 1780              	.LVL147:
 1781              	.L82:
1267:main.c        ****           BallVecY=-1;
 1782              		.loc 1 1267 0
 1783 0076 B542     		cmp	r5, r6
 1784 0078 51D3     		bcc	.L65
1267:main.c        ****           BallVecY=-1;
 1785              		.loc 1 1267 0 is_stmt 0 discriminator 1
 1786 007a 06F13203 		add	r3, r6, #50
 1787 007e 9D42     		cmp	r5, r3
 1788 0080 4DDA     		bge	.L65
 1789              	.LVL148:
1269:main.c        ****         }
 1790              		.loc 1 1269 0 is_stmt 1
 1791 0082 0BF1010B 		add	fp, fp, #1
 1792              	.LVL149:
1268:main.c        ****           counter++;
 1793              		.loc 1 1268 0
 1794 0086 4FF0FF3A 		mov	r10, #-1
 1795 008a 48E0     		b	.L65
 1796              	.LVL150:
 1797              	.L77:
1275:main.c        ****       else if(BallXPos==0)
 1798              		.loc 1 1275 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 56


 1799 008c 4FF0FF39 		mov	r9, #-1
 1800              	.LVL151:
 1801 0090 4AE0     		b	.L66
 1802              	.LVL152:
 1803              	.L78:
1277:main.c        **** 
 1804              		.loc 1 1277 0
 1805 0092 C146     		mov	r9, r8
 1806              	.LVL153:
 1807 0094 48E0     		b	.L66
 1808              	.LVL154:
 1809              	.L79:
1280:main.c        ****       else if(BallYPos==0)
 1810              		.loc 1 1280 0
 1811 0096 4FF00008 		mov	r8, #0
 1812              	.LVL155:
 1813 009a 4AE0     		b	.L67
 1814              	.LVL156:
 1815              	.L80:
 1816              		.loc 1 1282 0
 1817 009c C246     		mov	r10, r8
 1818              	.LVL157:
 1819 009e 48E0     		b	.L67
 1820              	.LVL158:
 1821              	.L83:
1283:main.c        **** 
1284:main.c        ****       //Calculating Position
1285:main.c        ****       if(BallVecX==1)
1286:main.c        ****           BallXPos+=1;
 1822              		.loc 1 1286 0
 1823 00a0 0135     		adds	r5, r5, #1
 1824              	.LVL159:
 1825 00a2 ADB2     		uxth	r5, r5
 1826              	.LVL160:
 1827 00a4 4AE0     		b	.L69
 1828              	.L84:
1287:main.c        ****       else
1288:main.c        ****         BallXPos+=-1;
1289:main.c        **** 
1290:main.c        ****       if(BallVecY==1)
1291:main.c        ****         BallYPos+=1;
 1829              		.loc 1 1291 0
 1830 00a6 0134     		adds	r4, r4, #1
 1831              	.LVL161:
 1832 00a8 A4B2     		uxth	r4, r4
 1833              	.LVL162:
 1834 00aa 4CE0     		b	.L71
 1835              	.L73:
1292:main.c        ****       else
1293:main.c        ****         BallYPos-=1;
1294:main.c        **** 
1295:main.c        **** 
1296:main.c        **** 
1297:main.c        **** 		  BSP_TS_GetState(&TS_State);
1298:main.c        **** 		  if(TS_State.touchDetected){
1299:main.c        ****         if(TS_State.touchX[0] < RacketXPos){
1300:main.c        ****           RacketXPos-=5;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 57


1301:main.c        ****         }
1302:main.c        ****         else if(TS_State.touchX[0] > RacketXPos+RacketWidth){
 1836              		.loc 1 1302 0
 1837 00ac 06F13202 		add	r2, r6, #50
 1838 00b0 9342     		cmp	r3, r2
 1839 00b2 01DD     		ble	.L72
1303:main.c        ****           RacketXPos+=5;
 1840              		.loc 1 1303 0
 1841 00b4 0536     		adds	r6, r6, #5
 1842              	.LVL163:
 1843 00b6 B6B2     		uxth	r6, r6
 1844              	.LVL164:
 1845              	.L72:
1304:main.c        ****         }
1305:main.c        **** 		  }
1306:main.c        **** 
1307:main.c        ****       //Drawing Ball
1308:main.c        ****       BSP_LCD_SelectLayer(0);
 1846              		.loc 1 1308 0
 1847 00b8 0020     		movs	r0, #0
 1848 00ba FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1849              	.LVL165:
1309:main.c        **** 	    BSP_LCD_SetTextColor(LCD_COLOR_ORANGE);
 1850              		.loc 1 1309 0
 1851 00be 2B48     		ldr	r0, .L85+12
 1852 00c0 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1853              	.LVL166:
1310:main.c        ****       BSP_LCD_FillRect(BallXPos, BallYPos, BallWidth, BallWidth);
 1854              		.loc 1 1310 0
 1855 00c4 0523     		movs	r3, #5
 1856 00c6 1A46     		mov	r2, r3
 1857 00c8 2146     		mov	r1, r4
 1858 00ca 2846     		mov	r0, r5
 1859 00cc FFF7FEFF 		bl	BSP_LCD_FillRect
 1860              	.LVL167:
1311:main.c        **** 
1312:main.c        ****       //Drawing Racket
1313:main.c        ****       BSP_LCD_SelectLayer(0);
 1861              		.loc 1 1313 0
 1862 00d0 0020     		movs	r0, #0
 1863 00d2 FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1864              	.LVL168:
1314:main.c        **** 	    BSP_LCD_SetTextColor(LCD_COLOR_RED);
 1865              		.loc 1 1314 0
 1866 00d6 2648     		ldr	r0, .L85+16
 1867 00d8 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1868              	.LVL169:
1315:main.c        ****       BSP_LCD_FillRect(RacketXPos, RacketYPos, RacketWidth, RacketHeigth);
 1869              		.loc 1 1315 0
 1870 00dc 0A23     		movs	r3, #10
 1871 00de 3222     		movs	r2, #50
 1872 00e0 40F20511 		movw	r1, #261
 1873 00e4 3046     		mov	r0, r6
 1874 00e6 FFF7FEFF 		bl	BSP_LCD_FillRect
 1875              	.LVL170:
1316:main.c        **** 		
1317:main.c        ****       show_number(counter);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 58


 1876              		.loc 1 1317 0
 1877 00ea 5846     		mov	r0, fp
 1878 00ec FFF7FEFF 		bl	show_number
 1879              	.LVL171:
1318:main.c        **** 
1319:main.c        **** 		  vTaskDelay(50);
 1880              		.loc 1 1319 0
 1881 00f0 3220     		movs	r0, #50
 1882 00f2 FFF7FEFF 		bl	vTaskDelay
 1883              	.LVL172:
 1884              	.L64:
1259:main.c        ****       BSP_LCD_SelectLayer(0);     //Czyszczenie tla i ustawianie koloru
 1885              		.loc 1 1259 0
 1886 00f6 B8F1000F 		cmp	r8, #0
 1887 00fa A0D0     		beq	.L75
1260:main.c        **** 		  BSP_LCD_Clear(LCD_COLOR_WHITE);
 1888              		.loc 1 1260 0
 1889 00fc 0020     		movs	r0, #0
 1890 00fe FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1891              	.LVL173:
1261:main.c        **** 		  BSP_LCD_SelectLayer(1);
 1892              		.loc 1 1261 0
 1893 0102 4FF0FF30 		mov	r0, #-1
 1894 0106 FFF7FEFF 		bl	BSP_LCD_Clear
 1895              	.LVL174:
1262:main.c        **** 	  	BSP_LCD_Clear(LCD_COLOR_WHITE);
 1896              		.loc 1 1262 0
 1897 010a 0120     		movs	r0, #1
 1898 010c FFF7FEFF 		bl	BSP_LCD_SelectLayer
 1899              	.LVL175:
1263:main.c        **** 
 1900              		.loc 1 1263 0
 1901 0110 4FF0FF30 		mov	r0, #-1
 1902 0114 FFF7FEFF 		bl	BSP_LCD_Clear
 1903              	.LVL176:
1266:main.c        ****         if(BallXPos>=RacketXPos && BallXPos < RacketXPos+RacketWidth){
 1904              		.loc 1 1266 0
 1905 0118 B4F5807F 		cmp	r4, #256
 1906 011c ABD0     		beq	.L82
 1907              	.LVL177:
 1908              	.L65:
1274:main.c        ****         BallVecX=-1;
 1909              		.loc 1 1274 0
 1910 011e B5F5ED7F 		cmp	r5, #474
 1911 0122 B3D0     		beq	.L77
1276:main.c        ****         BallVecX=1;
 1912              		.loc 1 1276 0
 1913 0124 002D     		cmp	r5, #0
 1914 0126 B4D0     		beq	.L78
 1915              	.LVL178:
 1916              	.L66:
1279:main.c        ****         flag=0;
 1917              		.loc 1 1279 0
 1918 0128 B4F5857F 		cmp	r4, #266
 1919 012c B3D0     		beq	.L79
1281:main.c        ****         BallVecY=1;
 1920              		.loc 1 1281 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 59


 1921 012e 002C     		cmp	r4, #0
 1922 0130 B4D0     		beq	.L80
 1923              	.LVL179:
 1924              	.L67:
1285:main.c        ****           BallXPos+=1;
 1925              		.loc 1 1285 0
 1926 0132 B9F1010F 		cmp	r9, #1
 1927 0136 B3D0     		beq	.L83
1288:main.c        **** 
 1928              		.loc 1 1288 0
 1929 0138 013D     		subs	r5, r5, #1
 1930              	.LVL180:
 1931 013a ADB2     		uxth	r5, r5
 1932              	.LVL181:
 1933              	.L69:
1290:main.c        ****         BallYPos+=1;
 1934              		.loc 1 1290 0
 1935 013c BAF1010F 		cmp	r10, #1
 1936 0140 B1D0     		beq	.L84
1293:main.c        **** 
 1937              		.loc 1 1293 0
 1938 0142 013C     		subs	r4, r4, #1
 1939              	.LVL182:
 1940 0144 A4B2     		uxth	r4, r4
 1941              	.LVL183:
 1942              	.L71:
1297:main.c        **** 		  if(TS_State.touchDetected){
 1943              		.loc 1 1297 0
 1944 0146 0B4F     		ldr	r7, .L85+20
 1945 0148 3846     		mov	r0, r7
 1946 014a FFF7FEFF 		bl	BSP_TS_GetState
 1947              	.LVL184:
1298:main.c        ****         if(TS_State.touchX[0] < RacketXPos){
 1948              		.loc 1 1298 0
 1949 014e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1950 0150 002B     		cmp	r3, #0
 1951 0152 B1D0     		beq	.L72
1299:main.c        ****           RacketXPos-=5;
 1952              		.loc 1 1299 0
 1953 0154 7B88     		ldrh	r3, [r7, #2]
 1954 0156 9E42     		cmp	r6, r3
 1955 0158 A8D9     		bls	.L73
1300:main.c        ****         }
 1956              		.loc 1 1300 0
 1957 015a 053E     		subs	r6, r6, #5
 1958              	.LVL185:
 1959 015c B6B2     		uxth	r6, r6
 1960              	.LVL186:
 1961 015e ABE7     		b	.L72
 1962              	.L86:
 1963              		.align	2
 1964              	.L85:
 1965 0160 00000000 		.word	.LC2
 1966 0164 20000000 		.word	.LC3
 1967 0168 00000000 		.word	.LANCHOR2
 1968 016c 00A5FFFF 		.word	-23296
 1969 0170 0000FFFF 		.word	-65536
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 60


 1970 0174 00000000 		.word	.LANCHOR3
 1971              		.cfi_endproc
 1972              	.LFE160:
 1974              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1975              		.align	1
 1976              		.global	HAL_TIM_PeriodElapsedCallback
 1977              		.syntax unified
 1978              		.thumb
 1979              		.thumb_func
 1980              		.fpu fpv5-sp-d16
 1982              	HAL_TIM_PeriodElapsedCallback:
 1983              	.LFB161:
1320:main.c        **** 
1321:main.c        ****     }
1322:main.c        ****     
1323:main.c        **** 	}
1324:main.c        **** }
1325:main.c        **** 
1326:main.c        **** 
1327:main.c        **** /**
1328:main.c        ****   * @brief  Period elapsed callback in non blocking mode
1329:main.c        ****   * @note   This function is called  when TIM7 interrupt took place, inside
1330:main.c        ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
1331:main.c        ****   * a global variable "uwTick" used as application time base.
1332:main.c        ****   * @param  htim : TIM handle
1333:main.c        ****   * @retval None
1334:main.c        ****   */
1335:main.c        **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1336:main.c        **** {
 1984              		.loc 1 1336 0
 1985              		.cfi_startproc
 1986              		@ args = 0, pretend = 0, frame = 0
 1987              		@ frame_needed = 0, uses_anonymous_args = 0
 1988              	.LVL187:
 1989 0000 08B5     		push	{r3, lr}
 1990              	.LCFI12:
 1991              		.cfi_def_cfa_offset 8
 1992              		.cfi_offset 3, -8
 1993              		.cfi_offset 14, -4
1337:main.c        ****   /* USER CODE BEGIN Callback 0 */
1338:main.c        **** 
1339:main.c        ****   /* USER CODE END Callback 0 */
1340:main.c        ****   if (htim->Instance == TIM7) {
 1994              		.loc 1 1340 0
 1995 0002 0268     		ldr	r2, [r0]
 1996 0004 034B     		ldr	r3, .L91
 1997 0006 9A42     		cmp	r2, r3
 1998 0008 00D0     		beq	.L90
 1999              	.LVL188:
 2000              	.L87:
 2001 000a 08BD     		pop	{r3, pc}
 2002              	.LVL189:
 2003              	.L90:
1341:main.c        ****     HAL_IncTick();
 2004              		.loc 1 1341 0
 2005 000c FFF7FEFF 		bl	HAL_IncTick
 2006              	.LVL190:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 61


1342:main.c        ****   }
1343:main.c        ****   /* USER CODE BEGIN Callback 1 */
1344:main.c        **** 
1345:main.c        ****   /* USER CODE END Callback 1 */
1346:main.c        **** }
 2007              		.loc 1 1346 0
 2008 0010 FBE7     		b	.L87
 2009              	.L92:
 2010 0012 00BF     		.align	2
 2011              	.L91:
 2012 0014 00140040 		.word	1073746944
 2013              		.cfi_endproc
 2014              	.LFE161:
 2016              		.section	.text._Error_Handler,"ax",%progbits
 2017              		.align	1
 2018              		.global	_Error_Handler
 2019              		.syntax unified
 2020              		.thumb
 2021              		.thumb_func
 2022              		.fpu fpv5-sp-d16
 2024              	_Error_Handler:
 2025              	.LFB162:
1347:main.c        **** 
1348:main.c        **** /**
1349:main.c        ****   * @brief  This function is executed in case of error occurrence.
1350:main.c        ****   * @param  file: The file name as string.
1351:main.c        ****   * @param  line: The line in file as a number.
1352:main.c        ****   * @retval None
1353:main.c        ****   */
1354:main.c        **** void _Error_Handler(char *file, int line)
1355:main.c        **** {
 2026              		.loc 1 1355 0
 2027              		.cfi_startproc
 2028              		@ Volatile: function does not return.
 2029              		@ args = 0, pretend = 0, frame = 0
 2030              		@ frame_needed = 0, uses_anonymous_args = 0
 2031              		@ link register save eliminated.
 2032              	.LVL191:
 2033              	.L94:
 2034 0000 FEE7     		b	.L94
 2035              		.cfi_endproc
 2036              	.LFE162:
 2038              		.section	.text.MX_ADC3_Init,"ax",%progbits
 2039              		.align	1
 2040              		.syntax unified
 2041              		.thumb
 2042              		.thumb_func
 2043              		.fpu fpv5-sp-d16
 2045              	MX_ADC3_Init:
 2046              	.LFB148:
 340:main.c        **** 
 2047              		.loc 1 340 0
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 16
 2050              		@ frame_needed = 0, uses_anonymous_args = 0
 340:main.c        **** 
 2051              		.loc 1 340 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 62


 2052 0000 00B5     		push	{lr}
 2053              	.LCFI13:
 2054              		.cfi_def_cfa_offset 4
 2055              		.cfi_offset 14, -4
 2056 0002 85B0     		sub	sp, sp, #20
 2057              	.LCFI14:
 2058              		.cfi_def_cfa_offset 24
 346:main.c        ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 2059              		.loc 1 346 0
 2060 0004 1648     		ldr	r0, .L101
 2061 0006 174B     		ldr	r3, .L101+4
 2062 0008 0360     		str	r3, [r0]
 347:main.c        ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 2063              		.loc 1 347 0
 2064 000a 4FF48033 		mov	r3, #65536
 2065 000e 4360     		str	r3, [r0, #4]
 348:main.c        ****   hadc3.Init.ScanConvMode = DISABLE;
 2066              		.loc 1 348 0
 2067 0010 0023     		movs	r3, #0
 2068 0012 8360     		str	r3, [r0, #8]
 349:main.c        ****   hadc3.Init.ContinuousConvMode = DISABLE;
 2069              		.loc 1 349 0
 2070 0014 0361     		str	r3, [r0, #16]
 350:main.c        ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 2071              		.loc 1 350 0
 2072 0016 8361     		str	r3, [r0, #24]
 351:main.c        ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2073              		.loc 1 351 0
 2074 0018 0362     		str	r3, [r0, #32]
 352:main.c        ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2075              		.loc 1 352 0
 2076 001a C362     		str	r3, [r0, #44]
 353:main.c        ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 2077              		.loc 1 353 0
 2078 001c 124A     		ldr	r2, .L101+8
 2079 001e 8262     		str	r2, [r0, #40]
 354:main.c        ****   hadc3.Init.NbrOfConversion = 1;
 2080              		.loc 1 354 0
 2081 0020 C360     		str	r3, [r0, #12]
 355:main.c        ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 2082              		.loc 1 355 0
 2083 0022 0122     		movs	r2, #1
 2084 0024 C261     		str	r2, [r0, #28]
 356:main.c        ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2085              		.loc 1 356 0
 2086 0026 0363     		str	r3, [r0, #48]
 357:main.c        ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 2087              		.loc 1 357 0
 2088 0028 4261     		str	r2, [r0, #20]
 358:main.c        ****   {
 2089              		.loc 1 358 0
 2090 002a FFF7FEFF 		bl	HAL_ADC_Init
 2091              	.LVL192:
 2092 002e 60B9     		cbnz	r0, .L99
 365:main.c        ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 2093              		.loc 1 365 0
 2094 0030 0023     		movs	r3, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 63


 2095 0032 0093     		str	r3, [sp]
 366:main.c        ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 2096              		.loc 1 366 0
 2097 0034 0122     		movs	r2, #1
 2098 0036 0192     		str	r2, [sp, #4]
 367:main.c        ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 2099              		.loc 1 367 0
 2100 0038 0293     		str	r3, [sp, #8]
 368:main.c        ****   {
 2101              		.loc 1 368 0
 2102 003a 6946     		mov	r1, sp
 2103 003c 0848     		ldr	r0, .L101
 2104 003e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 2105              	.LVL193:
 2106 0042 38B9     		cbnz	r0, .L100
 373:main.c        **** 
 2107              		.loc 1 373 0
 2108 0044 05B0     		add	sp, sp, #20
 2109              	.LCFI15:
 2110              		.cfi_remember_state
 2111              		.cfi_def_cfa_offset 4
 2112              		@ sp needed
 2113 0046 5DF804FB 		ldr	pc, [sp], #4
 2114              	.L99:
 2115              	.LCFI16:
 2116              		.cfi_restore_state
 360:main.c        ****   }
 2117              		.loc 1 360 0
 2118 004a 4FF4B471 		mov	r1, #360
 2119 004e 0748     		ldr	r0, .L101+12
 2120 0050 FFF7FEFF 		bl	_Error_Handler
 2121              	.LVL194:
 2122              	.L100:
 370:main.c        ****   }
 2123              		.loc 1 370 0
 2124 0054 4FF4B971 		mov	r1, #370
 2125 0058 0448     		ldr	r0, .L101+12
 2126 005a FFF7FEFF 		bl	_Error_Handler
 2127              	.LVL195:
 2128              	.L102:
 2129 005e 00BF     		.align	2
 2130              	.L101:
 2131 0060 00000000 		.word	hadc3
 2132 0064 00220140 		.word	1073816064
 2133 0068 0100000F 		.word	251658241
 2134 006c 00000000 		.word	.LC4
 2135              		.cfi_endproc
 2136              	.LFE148:
 2138              		.section	.text.MX_CRC_Init,"ax",%progbits
 2139              		.align	1
 2140              		.syntax unified
 2141              		.thumb
 2142              		.thumb_func
 2143              		.fpu fpv5-sp-d16
 2145              	MX_CRC_Init:
 2146              	.LFB149:
 377:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 64


 2147              		.loc 1 377 0
 2148              		.cfi_startproc
 2149              		@ args = 0, pretend = 0, frame = 0
 2150              		@ frame_needed = 0, uses_anonymous_args = 0
 2151 0000 08B5     		push	{r3, lr}
 2152              	.LCFI17:
 2153              		.cfi_def_cfa_offset 8
 2154              		.cfi_offset 3, -8
 2155              		.cfi_offset 14, -4
 379:main.c        ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 2156              		.loc 1 379 0
 2157 0002 0948     		ldr	r0, .L107
 2158 0004 094B     		ldr	r3, .L107+4
 2159 0006 0360     		str	r3, [r0]
 380:main.c        ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 2160              		.loc 1 380 0
 2161 0008 0023     		movs	r3, #0
 2162 000a 0371     		strb	r3, [r0, #4]
 381:main.c        ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 2163              		.loc 1 381 0
 2164 000c 4371     		strb	r3, [r0, #5]
 382:main.c        ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 2165              		.loc 1 382 0
 2166 000e 4361     		str	r3, [r0, #20]
 383:main.c        ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 2167              		.loc 1 383 0
 2168 0010 8361     		str	r3, [r0, #24]
 384:main.c        ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 2169              		.loc 1 384 0
 2170 0012 0123     		movs	r3, #1
 2171 0014 0362     		str	r3, [r0, #32]
 385:main.c        ****   {
 2172              		.loc 1 385 0
 2173 0016 FFF7FEFF 		bl	HAL_CRC_Init
 2174              	.LVL196:
 2175 001a 00B9     		cbnz	r0, .L106
 2176 001c 08BD     		pop	{r3, pc}
 2177              	.L106:
 387:main.c        ****   }
 2178              		.loc 1 387 0
 2179 001e 40F28311 		movw	r1, #387
 2180 0022 0348     		ldr	r0, .L107+8
 2181 0024 FFF7FEFF 		bl	_Error_Handler
 2182              	.LVL197:
 2183              	.L108:
 2184              		.align	2
 2185              	.L107:
 2186 0028 00000000 		.word	hcrc
 2187 002c 00300240 		.word	1073885184
 2188 0030 00000000 		.word	.LC4
 2189              		.cfi_endproc
 2190              	.LFE149:
 2192              		.section	.text.MX_DMA2D_Init,"ax",%progbits
 2193              		.align	1
 2194              		.syntax unified
 2195              		.thumb
 2196              		.thumb_func
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 65


 2197              		.fpu fpv5-sp-d16
 2199              	MX_DMA2D_Init:
 2200              	.LFB150:
 394:main.c        **** 
 2201              		.loc 1 394 0
 2202              		.cfi_startproc
 2203              		@ args = 0, pretend = 0, frame = 0
 2204              		@ frame_needed = 0, uses_anonymous_args = 0
 2205 0000 08B5     		push	{r3, lr}
 2206              	.LCFI18:
 2207              		.cfi_def_cfa_offset 8
 2208              		.cfi_offset 3, -8
 2209              		.cfi_offset 14, -4
 396:main.c        ****   hdma2d.Init.Mode = DMA2D_M2M;
 2210              		.loc 1 396 0
 2211 0002 0F48     		ldr	r0, .L115
 2212 0004 0F4B     		ldr	r3, .L115+4
 2213 0006 0360     		str	r3, [r0]
 397:main.c        ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 2214              		.loc 1 397 0
 2215 0008 0023     		movs	r3, #0
 2216 000a 4360     		str	r3, [r0, #4]
 398:main.c        ****   hdma2d.Init.OutputOffset = 0;
 2217              		.loc 1 398 0
 2218 000c 8360     		str	r3, [r0, #8]
 399:main.c        ****   hdma2d.LayerCfg[1].InputOffset = 0;
 2219              		.loc 1 399 0
 2220 000e C360     		str	r3, [r0, #12]
 400:main.c        ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 2221              		.loc 1 400 0
 2222 0010 8362     		str	r3, [r0, #40]
 401:main.c        ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 2223              		.loc 1 401 0
 2224 0012 C362     		str	r3, [r0, #44]
 402:main.c        ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 2225              		.loc 1 402 0
 2226 0014 0363     		str	r3, [r0, #48]
 403:main.c        ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 2227              		.loc 1 403 0
 2228 0016 4363     		str	r3, [r0, #52]
 404:main.c        ****   {
 2229              		.loc 1 404 0
 2230 0018 FFF7FEFF 		bl	HAL_DMA2D_Init
 2231              	.LVL198:
 2232 001c 28B9     		cbnz	r0, .L113
 409:main.c        ****   {
 2233              		.loc 1 409 0
 2234 001e 0121     		movs	r1, #1
 2235 0020 0748     		ldr	r0, .L115
 2236 0022 FFF7FEFF 		bl	HAL_DMA2D_ConfigLayer
 2237              	.LVL199:
 2238 0026 28B9     		cbnz	r0, .L114
 2239 0028 08BD     		pop	{r3, pc}
 2240              	.L113:
 406:main.c        ****   }
 2241              		.loc 1 406 0
 2242 002a 4FF4CB71 		mov	r1, #406
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 66


 2243 002e 0648     		ldr	r0, .L115+8
 2244 0030 FFF7FEFF 		bl	_Error_Handler
 2245              	.LVL200:
 2246              	.L114:
 411:main.c        ****   }
 2247              		.loc 1 411 0
 2248 0034 40F29B11 		movw	r1, #411
 2249 0038 0348     		ldr	r0, .L115+8
 2250 003a FFF7FEFF 		bl	_Error_Handler
 2251              	.LVL201:
 2252              	.L116:
 2253 003e 00BF     		.align	2
 2254              	.L115:
 2255 0040 00000000 		.word	hdma2d
 2256 0044 00B00240 		.word	1073917952
 2257 0048 00000000 		.word	.LC4
 2258              		.cfi_endproc
 2259              	.LFE150:
 2261              		.section	.text.MX_RNG_Init,"ax",%progbits
 2262              		.align	1
 2263              		.syntax unified
 2264              		.thumb
 2265              		.thumb_func
 2266              		.fpu fpv5-sp-d16
 2268              	MX_RNG_Init:
 2269              	.LFB151:
 418:main.c        **** 
 2270              		.loc 1 418 0
 2271              		.cfi_startproc
 2272              		@ args = 0, pretend = 0, frame = 0
 2273              		@ frame_needed = 0, uses_anonymous_args = 0
 2274 0000 08B5     		push	{r3, lr}
 2275              	.LCFI19:
 2276              		.cfi_def_cfa_offset 8
 2277              		.cfi_offset 3, -8
 2278              		.cfi_offset 14, -4
 420:main.c        ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 2279              		.loc 1 420 0
 2280 0002 0648     		ldr	r0, .L121
 2281 0004 064B     		ldr	r3, .L121+4
 2282 0006 0360     		str	r3, [r0]
 421:main.c        ****   {
 2283              		.loc 1 421 0
 2284 0008 FFF7FEFF 		bl	HAL_RNG_Init
 2285              	.LVL202:
 2286 000c 00B9     		cbnz	r0, .L120
 2287 000e 08BD     		pop	{r3, pc}
 2288              	.L120:
 423:main.c        ****   }
 2289              		.loc 1 423 0
 2290 0010 40F2A711 		movw	r1, #423
 2291 0014 0348     		ldr	r0, .L121+8
 2292 0016 FFF7FEFF 		bl	_Error_Handler
 2293              	.LVL203:
 2294              	.L122:
 2295 001a 00BF     		.align	2
 2296              	.L121:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 67


 2297 001c 00000000 		.word	hrng
 2298 0020 00080650 		.word	1342572544
 2299 0024 00000000 		.word	.LC4
 2300              		.cfi_endproc
 2301              	.LFE151:
 2303              		.section	.text.MX_RTC_Init,"ax",%progbits
 2304              		.align	1
 2305              		.syntax unified
 2306              		.thumb
 2307              		.thumb_func
 2308              		.fpu fpv5-sp-d16
 2310              	MX_RTC_Init:
 2311              	.LFB152:
 430:main.c        **** 
 2312              		.loc 1 430 0
 2313              		.cfi_startproc
 2314              		@ args = 0, pretend = 0, frame = 32
 2315              		@ frame_needed = 0, uses_anonymous_args = 0
 2316 0000 00B5     		push	{lr}
 2317              	.LCFI20:
 2318              		.cfi_def_cfa_offset 4
 2319              		.cfi_offset 14, -4
 2320 0002 89B0     		sub	sp, sp, #36
 2321              	.LCFI21:
 2322              		.cfi_def_cfa_offset 40
 437:main.c        **** if(HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR0) != 0x32F2){
 2323              		.loc 1 437 0
 2324 0004 2648     		ldr	r0, .L132
 2325 0006 274B     		ldr	r3, .L132+4
 2326 0008 0360     		str	r3, [r0]
 438:main.c        ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 2327              		.loc 1 438 0
 2328 000a 0021     		movs	r1, #0
 2329 000c FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 2330              	.LVL204:
 2331 0010 43F2F223 		movw	r3, #13042
 2332 0014 9842     		cmp	r0, r3
 2333 0016 30D0     		beq	.L123
 439:main.c        ****   hrtc.Init.AsynchPrediv = 127;
 2334              		.loc 1 439 0
 2335 0018 2148     		ldr	r0, .L132
 2336 001a 0023     		movs	r3, #0
 2337 001c 4360     		str	r3, [r0, #4]
 440:main.c        ****   hrtc.Init.SynchPrediv = 255;
 2338              		.loc 1 440 0
 2339 001e 7F22     		movs	r2, #127
 2340 0020 8260     		str	r2, [r0, #8]
 441:main.c        ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 2341              		.loc 1 441 0
 2342 0022 FF22     		movs	r2, #255
 2343 0024 C260     		str	r2, [r0, #12]
 442:main.c        ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 2344              		.loc 1 442 0
 2345 0026 0361     		str	r3, [r0, #16]
 443:main.c        ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 2346              		.loc 1 443 0
 2347 0028 4361     		str	r3, [r0, #20]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 68


 444:main.c        ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 2348              		.loc 1 444 0
 2349 002a 8361     		str	r3, [r0, #24]
 445:main.c        ****   {
 2350              		.loc 1 445 0
 2351 002c FFF7FEFF 		bl	HAL_RTC_Init
 2352              	.LVL205:
 2353 0030 30BB     		cbnz	r0, .L129
 452:main.c        ****   sTime.Minutes = 0x0;
 2354              		.loc 1 452 0
 2355 0032 0023     		movs	r3, #0
 2356 0034 8DF80830 		strb	r3, [sp, #8]
 453:main.c        ****   sTime.Seconds = 0x0;
 2357              		.loc 1 453 0
 2358 0038 8DF80930 		strb	r3, [sp, #9]
 454:main.c        ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 2359              		.loc 1 454 0
 2360 003c 8DF80A30 		strb	r3, [sp, #10]
 455:main.c        ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 2361              		.loc 1 455 0
 2362 0040 0693     		str	r3, [sp, #24]
 456:main.c        ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 2363              		.loc 1 456 0
 2364 0042 0793     		str	r3, [sp, #28]
 457:main.c        ****   {
 2365              		.loc 1 457 0
 2366 0044 0122     		movs	r2, #1
 2367 0046 02A9     		add	r1, sp, #8
 2368 0048 1548     		ldr	r0, .L132
 2369 004a FFF7FEFF 		bl	HAL_RTC_SetTime
 2370              	.LVL206:
 2371 004e E0B9     		cbnz	r0, .L130
 462:main.c        ****   sDate.Month = RTC_MONTH_JANUARY;
 2372              		.loc 1 462 0
 2373 0050 0122     		movs	r2, #1
 2374 0052 8DF80420 		strb	r2, [sp, #4]
 463:main.c        ****   sDate.Date = 0x1;
 2375              		.loc 1 463 0
 2376 0056 8DF80520 		strb	r2, [sp, #5]
 464:main.c        ****   sDate.Year = 0x0;
 2377              		.loc 1 464 0
 2378 005a 8DF80620 		strb	r2, [sp, #6]
 465:main.c        **** 
 2379              		.loc 1 465 0
 2380 005e 0023     		movs	r3, #0
 2381 0060 8DF80730 		strb	r3, [sp, #7]
 467:main.c        ****   {
 2382              		.loc 1 467 0
 2383 0064 01A9     		add	r1, sp, #4
 2384 0066 0E48     		ldr	r0, .L132
 2385 0068 FFF7FEFF 		bl	HAL_RTC_SetDate
 2386              	.LVL207:
 2387 006c 90B9     		cbnz	r0, .L131
 472:main.c        ****   }
 2388              		.loc 1 472 0
 2389 006e 43F2F222 		movw	r2, #13042
 2390 0072 0021     		movs	r1, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 69


 2391 0074 0A48     		ldr	r0, .L132
 2392 0076 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 2393              	.LVL208:
 2394              	.L123:
 475:main.c        **** 
 2395              		.loc 1 475 0
 2396 007a 09B0     		add	sp, sp, #36
 2397              	.LCFI22:
 2398              		.cfi_remember_state
 2399              		.cfi_def_cfa_offset 4
 2400              		@ sp needed
 2401 007c 5DF804FB 		ldr	pc, [sp], #4
 2402              	.L129:
 2403              	.LCFI23:
 2404              		.cfi_restore_state
 447:main.c        ****   }
 2405              		.loc 1 447 0
 2406 0080 40F2BF11 		movw	r1, #447
 2407 0084 0848     		ldr	r0, .L132+8
 2408 0086 FFF7FEFF 		bl	_Error_Handler
 2409              	.LVL209:
 2410              	.L130:
 459:main.c        ****   }
 2411              		.loc 1 459 0
 2412 008a 40F2CB11 		movw	r1, #459
 2413 008e 0648     		ldr	r0, .L132+8
 2414 0090 FFF7FEFF 		bl	_Error_Handler
 2415              	.LVL210:
 2416              	.L131:
 469:main.c        ****   }
 2417              		.loc 1 469 0
 2418 0094 40F2D511 		movw	r1, #469
 2419 0098 0348     		ldr	r0, .L132+8
 2420 009a FFF7FEFF 		bl	_Error_Handler
 2421              	.LVL211:
 2422              	.L133:
 2423 009e 00BF     		.align	2
 2424              	.L132:
 2425 00a0 00000000 		.word	hrtc
 2426 00a4 00280040 		.word	1073752064
 2427 00a8 00000000 		.word	.LC4
 2428              		.cfi_endproc
 2429              	.LFE152:
 2431              		.section	.text.MX_TIM10_Init,"ax",%progbits
 2432              		.align	1
 2433              		.syntax unified
 2434              		.thumb
 2435              		.thumb_func
 2436              		.fpu fpv5-sp-d16
 2438              	MX_TIM10_Init:
 2439              	.LFB154:
 493:main.c        **** 
 2440              		.loc 1 493 0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 0
 2443              		@ frame_needed = 0, uses_anonymous_args = 0
 2444 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 70


 2445              	.LCFI24:
 2446              		.cfi_def_cfa_offset 8
 2447              		.cfi_offset 3, -8
 2448              		.cfi_offset 14, -4
 495:main.c        ****   htim10.Init.Prescaler = 0;
 2449              		.loc 1 495 0
 2450 0002 0948     		ldr	r0, .L138
 2451 0004 094B     		ldr	r3, .L138+4
 2452 0006 0360     		str	r3, [r0]
 496:main.c        ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 2453              		.loc 1 496 0
 2454 0008 0023     		movs	r3, #0
 2455 000a 4360     		str	r3, [r0, #4]
 497:main.c        ****   htim10.Init.Period = 0;
 2456              		.loc 1 497 0
 2457 000c 8360     		str	r3, [r0, #8]
 498:main.c        ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2458              		.loc 1 498 0
 2459 000e C360     		str	r3, [r0, #12]
 499:main.c        ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2460              		.loc 1 499 0
 2461 0010 0361     		str	r3, [r0, #16]
 500:main.c        ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 2462              		.loc 1 500 0
 2463 0012 8361     		str	r3, [r0, #24]
 501:main.c        ****   {
 2464              		.loc 1 501 0
 2465 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2466              	.LVL212:
 2467 0018 00B9     		cbnz	r0, .L137
 2468 001a 08BD     		pop	{r3, pc}
 2469              	.L137:
 503:main.c        ****   }
 2470              		.loc 1 503 0
 2471 001c 40F2F711 		movw	r1, #503
 2472 0020 0348     		ldr	r0, .L138+8
 2473 0022 FFF7FEFF 		bl	_Error_Handler
 2474              	.LVL213:
 2475              	.L139:
 2476 0026 00BF     		.align	2
 2477              	.L138:
 2478 0028 00000000 		.word	htim10
 2479 002c 00440140 		.word	1073824768
 2480 0030 00000000 		.word	.LC4
 2481              		.cfi_endproc
 2482              	.LFE154:
 2484              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 2485              		.align	1
 2486              		.syntax unified
 2487              		.thumb
 2488              		.thumb_func
 2489              		.fpu fpv5-sp-d16
 2491              	MX_USART1_UART_Init:
 2492              	.LFB155:
 510:main.c        **** 
 2493              		.loc 1 510 0
 2494              		.cfi_startproc
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 71


 2495              		@ args = 0, pretend = 0, frame = 0
 2496              		@ frame_needed = 0, uses_anonymous_args = 0
 2497 0000 08B5     		push	{r3, lr}
 2498              	.LCFI25:
 2499              		.cfi_def_cfa_offset 8
 2500              		.cfi_offset 3, -8
 2501              		.cfi_offset 14, -4
 512:main.c        ****   huart1.Init.BaudRate = 115200;
 2502              		.loc 1 512 0
 2503 0002 0C48     		ldr	r0, .L144
 2504 0004 0C4B     		ldr	r3, .L144+4
 2505 0006 0360     		str	r3, [r0]
 513:main.c        ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 2506              		.loc 1 513 0
 2507 0008 4FF4E133 		mov	r3, #115200
 2508 000c 4360     		str	r3, [r0, #4]
 514:main.c        ****   huart1.Init.StopBits = UART_STOPBITS_1;
 2509              		.loc 1 514 0
 2510 000e 0023     		movs	r3, #0
 2511 0010 8360     		str	r3, [r0, #8]
 515:main.c        ****   huart1.Init.Parity = UART_PARITY_NONE;
 2512              		.loc 1 515 0
 2513 0012 C360     		str	r3, [r0, #12]
 516:main.c        ****   huart1.Init.Mode = UART_MODE_TX_RX;
 2514              		.loc 1 516 0
 2515 0014 0361     		str	r3, [r0, #16]
 517:main.c        ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2516              		.loc 1 517 0
 2517 0016 0C22     		movs	r2, #12
 2518 0018 4261     		str	r2, [r0, #20]
 518:main.c        ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 2519              		.loc 1 518 0
 2520 001a 8361     		str	r3, [r0, #24]
 519:main.c        ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2521              		.loc 1 519 0
 2522 001c C361     		str	r3, [r0, #28]
 520:main.c        ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2523              		.loc 1 520 0
 2524 001e 0362     		str	r3, [r0, #32]
 521:main.c        ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 2525              		.loc 1 521 0
 2526 0020 4362     		str	r3, [r0, #36]
 522:main.c        ****   {
 2527              		.loc 1 522 0
 2528 0022 FFF7FEFF 		bl	HAL_UART_Init
 2529              	.LVL214:
 2530 0026 00B9     		cbnz	r0, .L143
 2531 0028 08BD     		pop	{r3, pc}
 2532              	.L143:
 524:main.c        ****   }
 2533              		.loc 1 524 0
 2534 002a 4FF40371 		mov	r1, #524
 2535 002e 0348     		ldr	r0, .L144+8
 2536 0030 FFF7FEFF 		bl	_Error_Handler
 2537              	.LVL215:
 2538              	.L145:
 2539              		.align	2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 72


 2540              	.L144:
 2541 0034 00000000 		.word	huart1
 2542 0038 00100140 		.word	1073811456
 2543 003c 00000000 		.word	.LC4
 2544              		.cfi_endproc
 2545              	.LFE155:
 2547              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 2548              		.align	1
 2549              		.syntax unified
 2550              		.thumb
 2551              		.thumb_func
 2552              		.fpu fpv5-sp-d16
 2554              	MX_USART6_UART_Init:
 2555              	.LFB156:
 531:main.c        **** 
 2556              		.loc 1 531 0
 2557              		.cfi_startproc
 2558              		@ args = 0, pretend = 0, frame = 0
 2559              		@ frame_needed = 0, uses_anonymous_args = 0
 2560 0000 08B5     		push	{r3, lr}
 2561              	.LCFI26:
 2562              		.cfi_def_cfa_offset 8
 2563              		.cfi_offset 3, -8
 2564              		.cfi_offset 14, -4
 533:main.c        ****   huart6.Init.BaudRate = 115200;
 2565              		.loc 1 533 0
 2566 0002 0C48     		ldr	r0, .L150
 2567 0004 0C4B     		ldr	r3, .L150+4
 2568 0006 0360     		str	r3, [r0]
 534:main.c        ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 2569              		.loc 1 534 0
 2570 0008 4FF4E133 		mov	r3, #115200
 2571 000c 4360     		str	r3, [r0, #4]
 535:main.c        ****   huart6.Init.StopBits = UART_STOPBITS_1;
 2572              		.loc 1 535 0
 2573 000e 0023     		movs	r3, #0
 2574 0010 8360     		str	r3, [r0, #8]
 536:main.c        ****   huart6.Init.Parity = UART_PARITY_NONE;
 2575              		.loc 1 536 0
 2576 0012 C360     		str	r3, [r0, #12]
 537:main.c        ****   huart6.Init.Mode = UART_MODE_TX_RX;
 2577              		.loc 1 537 0
 2578 0014 0361     		str	r3, [r0, #16]
 538:main.c        ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2579              		.loc 1 538 0
 2580 0016 0C22     		movs	r2, #12
 2581 0018 4261     		str	r2, [r0, #20]
 539:main.c        ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 2582              		.loc 1 539 0
 2583 001a 8361     		str	r3, [r0, #24]
 540:main.c        ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2584              		.loc 1 540 0
 2585 001c C361     		str	r3, [r0, #28]
 541:main.c        ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2586              		.loc 1 541 0
 2587 001e 0362     		str	r3, [r0, #32]
 542:main.c        ****   if (HAL_UART_Init(&huart6) != HAL_OK)
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 73


 2588              		.loc 1 542 0
 2589 0020 4362     		str	r3, [r0, #36]
 543:main.c        ****   {
 2590              		.loc 1 543 0
 2591 0022 FFF7FEFF 		bl	HAL_UART_Init
 2592              	.LVL216:
 2593 0026 00B9     		cbnz	r0, .L149
 2594 0028 08BD     		pop	{r3, pc}
 2595              	.L149:
 545:main.c        ****   }
 2596              		.loc 1 545 0
 2597 002a 40F22121 		movw	r1, #545
 2598 002e 0348     		ldr	r0, .L150+8
 2599 0030 FFF7FEFF 		bl	_Error_Handler
 2600              	.LVL217:
 2601              	.L151:
 2602              		.align	2
 2603              	.L150:
 2604 0034 00000000 		.word	huart6
 2605 0038 00140140 		.word	1073812480
 2606 003c 00000000 		.word	.LC4
 2607              		.cfi_endproc
 2608              	.LFE156:
 2610              		.section	.text.SystemClock_Config,"ax",%progbits
 2611              		.align	1
 2612              		.global	SystemClock_Config
 2613              		.syntax unified
 2614              		.thumb
 2615              		.thumb_func
 2616              		.fpu fpv5-sp-d16
 2618              	SystemClock_Config:
 2619              	.LFB147:
 264:main.c        **** 
 2620              		.loc 1 264 0
 2621              		.cfi_startproc
 2622              		@ args = 0, pretend = 0, frame = 208
 2623              		@ frame_needed = 0, uses_anonymous_args = 0
 2624 0000 00B5     		push	{lr}
 2625              	.LCFI27:
 2626              		.cfi_def_cfa_offset 4
 2627              		.cfi_offset 14, -4
 2628 0002 B5B0     		sub	sp, sp, #212
 2629              	.LCFI28:
 2630              		.cfi_def_cfa_offset 216
 2631              	.LBB14:
 272:main.c        **** 
 2632              		.loc 1 272 0
 2633 0004 3B4B     		ldr	r3, .L162
 2634 0006 1A6C     		ldr	r2, [r3, #64]
 2635 0008 42F08052 		orr	r2, r2, #268435456
 2636 000c 1A64     		str	r2, [r3, #64]
 2637 000e 1B6C     		ldr	r3, [r3, #64]
 2638 0010 03F08053 		and	r3, r3, #268435456
 2639 0014 0093     		str	r3, [sp]
 2640 0016 009B     		ldr	r3, [sp]
 2641              	.LBE14:
 2642              	.LBB15:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 74


 274:main.c        **** 
 2643              		.loc 1 274 0
 2644 0018 374B     		ldr	r3, .L162+4
 2645 001a 1A68     		ldr	r2, [r3]
 2646 001c 42F44042 		orr	r2, r2, #49152
 2647 0020 1A60     		str	r2, [r3]
 2648 0022 1B68     		ldr	r3, [r3]
 2649 0024 03F44043 		and	r3, r3, #49152
 2650 0028 0193     		str	r3, [sp, #4]
 2651 002a 019B     		ldr	r3, [sp, #4]
 2652              	.LBE15:
 278:main.c        ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2653              		.loc 1 278 0
 2654 002c 0923     		movs	r3, #9
 2655 002e 2893     		str	r3, [sp, #160]
 279:main.c        ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 2656              		.loc 1 279 0
 2657 0030 4FF48032 		mov	r2, #65536
 2658 0034 2992     		str	r2, [sp, #164]
 280:main.c        ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2659              		.loc 1 280 0
 2660 0036 0122     		movs	r2, #1
 2661 0038 2D92     		str	r2, [sp, #180]
 281:main.c        ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2662              		.loc 1 281 0
 2663 003a 0222     		movs	r2, #2
 2664 003c 2E92     		str	r2, [sp, #184]
 282:main.c        ****   RCC_OscInitStruct.PLL.PLLM = 25;
 2665              		.loc 1 282 0
 2666 003e 4FF48001 		mov	r1, #4194304
 2667 0042 2F91     		str	r1, [sp, #188]
 283:main.c        ****   RCC_OscInitStruct.PLL.PLLN = 432;
 2668              		.loc 1 283 0
 2669 0044 1921     		movs	r1, #25
 2670 0046 3091     		str	r1, [sp, #192]
 284:main.c        ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2671              		.loc 1 284 0
 2672 0048 4FF4D871 		mov	r1, #432
 2673 004c 3191     		str	r1, [sp, #196]
 285:main.c        ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 2674              		.loc 1 285 0
 2675 004e 3292     		str	r2, [sp, #200]
 286:main.c        ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2676              		.loc 1 286 0
 2677 0050 3393     		str	r3, [sp, #204]
 287:main.c        ****   {
 2678              		.loc 1 287 0
 2679 0052 28A8     		add	r0, sp, #160
 2680 0054 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2681              	.LVL218:
 2682 0058 0028     		cmp	r0, #0
 2683 005a 36D1     		bne	.L158
 294:main.c        ****   {
 2684              		.loc 1 294 0
 2685 005c FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 2686              	.LVL219:
 2687 0060 0028     		cmp	r0, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 75


 2688 0062 37D1     		bne	.L159
 301:main.c        ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2689              		.loc 1 301 0
 2690 0064 0F23     		movs	r3, #15
 2691 0066 2393     		str	r3, [sp, #140]
 303:main.c        ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2692              		.loc 1 303 0
 2693 0068 0223     		movs	r3, #2
 2694 006a 2493     		str	r3, [sp, #144]
 304:main.c        ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 2695              		.loc 1 304 0
 2696 006c 0023     		movs	r3, #0
 2697 006e 2593     		str	r3, [sp, #148]
 305:main.c        ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 2698              		.loc 1 305 0
 2699 0070 4FF4A053 		mov	r3, #5120
 2700 0074 2693     		str	r3, [sp, #152]
 306:main.c        **** 
 2701              		.loc 1 306 0
 2702 0076 4FF48053 		mov	r3, #4096
 2703 007a 2793     		str	r3, [sp, #156]
 308:main.c        ****   {
 2704              		.loc 1 308 0
 2705 007c 0721     		movs	r1, #7
 2706 007e 23A8     		add	r0, sp, #140
 2707 0080 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2708              	.LVL220:
 2709 0084 58BB     		cbnz	r0, .L160
 313:main.c        ****                               |RCC_PERIPHCLK_USART6|RCC_PERIPHCLK_SDMMC1
 2710              		.loc 1 313 0
 2711 0086 1D4B     		ldr	r3, .L162+8
 2712 0088 0293     		str	r3, [sp, #8]
 316:main.c        ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 2713              		.loc 1 316 0
 2714 008a 4FF40073 		mov	r3, #512
 2715 008e 0E93     		str	r3, [sp, #56]
 317:main.c        ****   PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 2716              		.loc 1 317 0
 2717 0090 0023     		movs	r3, #0
 2718 0092 1393     		str	r3, [sp, #76]
 318:main.c        ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 2719              		.loc 1 318 0
 2720 0094 1893     		str	r3, [sp, #96]
 319:main.c        ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 2721              		.loc 1 319 0
 2722 0096 2193     		str	r3, [sp, #132]
 320:main.c        ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 2723              		.loc 1 320 0
 2724 0098 2293     		str	r3, [sp, #136]
 321:main.c        ****   {
 2725              		.loc 1 321 0
 2726 009a 02A8     		add	r0, sp, #8
 2727 009c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 2728              	.LVL221:
 2729 00a0 10BB     		cbnz	r0, .L161
 328:main.c        **** 
 2730              		.loc 1 328 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 76


 2731 00a2 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2732              	.LVL222:
 2733 00a6 164B     		ldr	r3, .L162+12
 2734 00a8 A3FB0030 		umull	r3, r0, r3, r0
 2735 00ac 8009     		lsrs	r0, r0, #6
 2736 00ae FFF7FEFF 		bl	HAL_SYSTICK_Config
 2737              	.LVL223:
 332:main.c        **** 
 2738              		.loc 1 332 0
 2739 00b2 0420     		movs	r0, #4
 2740 00b4 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 2741              	.LVL224:
 335:main.c        **** }
 2742              		.loc 1 335 0
 2743 00b8 0022     		movs	r2, #0
 2744 00ba 0F21     		movs	r1, #15
 2745 00bc 4FF0FF30 		mov	r0, #-1
 2746 00c0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 2747              	.LVL225:
 336:main.c        **** 
 2748              		.loc 1 336 0
 2749 00c4 35B0     		add	sp, sp, #212
 2750              	.LCFI29:
 2751              		.cfi_remember_state
 2752              		.cfi_def_cfa_offset 4
 2753              		@ sp needed
 2754 00c6 5DF804FB 		ldr	pc, [sp], #4
 2755              	.L158:
 2756              	.LCFI30:
 2757              		.cfi_restore_state
 289:main.c        ****   }
 2758              		.loc 1 289 0
 2759 00ca 40F22111 		movw	r1, #289
 2760 00ce 0D48     		ldr	r0, .L162+16
 2761 00d0 FFF7FEFF 		bl	_Error_Handler
 2762              	.LVL226:
 2763              	.L159:
 296:main.c        ****   }
 2764              		.loc 1 296 0
 2765 00d4 4FF49471 		mov	r1, #296
 2766 00d8 0A48     		ldr	r0, .L162+16
 2767 00da FFF7FEFF 		bl	_Error_Handler
 2768              	.LVL227:
 2769              	.L160:
 310:main.c        ****   }
 2770              		.loc 1 310 0
 2771 00de 4FF49B71 		mov	r1, #310
 2772 00e2 0848     		ldr	r0, .L162+16
 2773 00e4 FFF7FEFF 		bl	_Error_Handler
 2774              	.LVL228:
 2775              	.L161:
 323:main.c        ****   }
 2776              		.loc 1 323 0
 2777 00e8 40F24311 		movw	r1, #323
 2778 00ec 0548     		ldr	r0, .L162+16
 2779 00ee FFF7FEFF 		bl	_Error_Handler
 2780              	.LVL229:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 77


 2781              	.L163:
 2782 00f2 00BF     		.align	2
 2783              	.L162:
 2784 00f4 00380240 		.word	1073887232
 2785 00f8 00700040 		.word	1073770496
 2786 00fc 6008A000 		.word	10487904
 2787 0100 D34D6210 		.word	274877907
 2788 0104 00000000 		.word	.LC4
 2789              		.cfi_endproc
 2790              	.LFE147:
 2792              		.section	.text.main,"ax",%progbits
 2793              		.align	1
 2794              		.global	main
 2795              		.syntax unified
 2796              		.thumb
 2797              		.thumb_func
 2798              		.fpu fpv5-sp-d16
 2800              	main:
 2801              	.LFB146:
 218:main.c        ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 2802              		.loc 1 218 0
 2803              		.cfi_startproc
 2804              		@ Volatile: function does not return.
 2805              		@ args = 0, pretend = 0, frame = 0
 2806              		@ frame_needed = 0, uses_anonymous_args = 0
 2807 0000 00B5     		push	{lr}
 2808              	.LCFI31:
 2809              		.cfi_def_cfa_offset 4
 2810              		.cfi_offset 14, -4
 2811 0002 83B0     		sub	sp, sp, #12
 2812              	.LCFI32:
 2813              		.cfi_def_cfa_offset 16
 220:main.c        **** 
 2814              		.loc 1 220 0
 2815 0004 FFF7FEFF 		bl	HAL_Init
 2816              	.LVL230:
 223:main.c        **** 
 2817              		.loc 1 223 0
 2818 0008 FFF7FEFF 		bl	SystemClock_Config
 2819              	.LVL231:
 226:main.c        ****   MX_DMA_Init();
 2820              		.loc 1 226 0
 2821 000c FFF7FEFF 		bl	MX_GPIO_Init
 2822              	.LVL232:
 227:main.c        ****   MX_ADC3_Init();
 2823              		.loc 1 227 0
 2824 0010 FFF7FEFF 		bl	MX_DMA_Init
 2825              	.LVL233:
 228:main.c        ****   MX_CRC_Init();
 2826              		.loc 1 228 0
 2827 0014 FFF7FEFF 		bl	MX_ADC3_Init
 2828              	.LVL234:
 229:main.c        ****   MX_DMA2D_Init();
 2829              		.loc 1 229 0
 2830 0018 FFF7FEFF 		bl	MX_CRC_Init
 2831              	.LVL235:
 230:main.c        ****   MX_RNG_Init();
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 78


 2832              		.loc 1 230 0
 2833 001c FFF7FEFF 		bl	MX_DMA2D_Init
 2834              	.LVL236:
 231:main.c        ****   MX_RTC_Init();
 2835              		.loc 1 231 0
 2836 0020 FFF7FEFF 		bl	MX_RNG_Init
 2837              	.LVL237:
 232:main.c        ****   MX_SDMMC1_SD_Init();
 2838              		.loc 1 232 0
 2839 0024 FFF7FEFF 		bl	MX_RTC_Init
 2840              	.LVL238:
 233:main.c        ****   MX_TIM10_Init();
 2841              		.loc 1 233 0
 2842 0028 FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 2843              	.LVL239:
 234:main.c        ****   MX_USART1_UART_Init();
 2844              		.loc 1 234 0
 2845 002c FFF7FEFF 		bl	MX_TIM10_Init
 2846              	.LVL240:
 235:main.c        ****   MX_USART6_UART_Init();
 2847              		.loc 1 235 0
 2848 0030 FFF7FEFF 		bl	MX_USART1_UART_Init
 2849              	.LVL241:
 236:main.c        **** 
 2850              		.loc 1 236 0
 2851 0034 FFF7FEFF 		bl	MX_USART6_UART_Init
 2852              	.LVL242:
 238:main.c        **** 
 2853              		.loc 1 238 0
 2854 0038 0A48     		ldr	r0, .L167
 2855 003a FFF7FEFF 		bl	debug_init
 2856              	.LVL243:
 240:main.c        **** 
 2857              		.loc 1 240 0
 2858 003e 0A48     		ldr	r0, .L167+4
 2859 0040 FFF7FEFF 		bl	xprintf
 2860              	.LVL244:
 242:main.c        **** 
 2861              		.loc 1 242 0
 2862 0044 0948     		ldr	r0, .L167+8
 2863 0046 FFF7FEFF 		bl	puts
 2864              	.LVL245:
 244:main.c        **** 
 2865              		.loc 1 244 0
 2866 004a 0021     		movs	r1, #0
 2867 004c 0191     		str	r1, [sp, #4]
 2868 004e 0223     		movs	r3, #2
 2869 0050 0093     		str	r3, [sp]
 2870 0052 0B46     		mov	r3, r1
 2871 0054 4FF48062 		mov	r2, #1024
 2872 0058 0548     		ldr	r0, .L167+12
 2873 005a FFF7FEFF 		bl	xTaskCreate
 2874              	.LVL246:
 248:main.c        ****   
 2875              		.loc 1 248 0
 2876 005e FFF7FEFF 		bl	vTaskStartScheduler
 2877              	.LVL247:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 79


 2878              	.L165:
 2879 0062 FEE7     		b	.L165
 2880              	.L168:
 2881              		.align	2
 2882              	.L167:
 2883 0064 00000000 		.word	huart1
 2884 0068 00000000 		.word	.LC5
 2885 006c 20000000 		.word	.LC6
 2886 0070 00000000 		.word	mainTask
 2887              		.cfi_endproc
 2888              	.LFE146:
 2890              		.comm	hdma_usart6_rx,96,4
 2891              		.comm	hdma_usart1_rx,96,4
 2892              		.comm	huart6,112,4
 2893              		.comm	huart1,112,4
 2894              		.comm	htim10,64,4
 2895              		.comm	hsd1,132,4
 2896              		.comm	hrtc,32,4
 2897              		.comm	hrng,12,4
 2898              		.comm	hdma2d,64,4
 2899              		.comm	hcrc,36,4
 2900              		.comm	hadc3,72,4
 2901              		.section	.bss.TS_State,"aw",%nobits
 2902              		.align	2
 2903              		.set	.LANCHOR3,. + 0
 2906              	TS_State:
 2907 0000 00000000 		.space	44
 2907      00000000 
 2907      00000000 
 2907      00000000 
 2907      00000000 
 2908              		.section	.bss.TS_State1,"aw",%nobits
 2909              		.align	2
 2910              		.set	.LANCHOR2,. + 0
 2913              	TS_State1:
 2914 0000 00000000 		.space	44
 2914      00000000 
 2914      00000000 
 2914      00000000 
 2914      00000000 
 2915              		.section	.rodata.MX_ADC3_Init.str1.4,"aMS",%progbits,1
 2916              		.align	2
 2917              	.LC4:
 2918 0000 6D61696E 		.ascii	"main.c\000"
 2918      2E6300
 2919              		.section	.rodata.initialize_touchscreen.str1.4,"aMS",%progbits,1
 2920              		.align	2
 2921              	.LC0:
 2922 0000 4552524F 		.ascii	"ERROR\000"
 2922      5200
 2923 0006 0000     		.space	2
 2924              	.LC1:
 2925 0008 546F7563 		.ascii	"Touchscreen cannot be initialized\000"
 2925      68736372 
 2925      65656E20 
 2925      63616E6E 
 2925      6F742062 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 80


 2926              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2927              		.align	2
 2928              	.LC5:
 2929 0000 1B5B303B 		.ascii	"\033[0;32mF7_Base Project\033[0;39m\012\000"
 2929      33326D46 
 2929      375F4261 
 2929      73652050 
 2929      726F6A65 
 2930 001f 00       		.space	1
 2931              	.LC6:
 2932 0020 52656775 		.ascii	"Regular printf says hello!\000"
 2932      6C617220 
 2932      7072696E 
 2932      74662073 
 2932      61797320 
 2933              		.section	.rodata.mainTask.str1.4,"aMS",%progbits,1
 2934              		.align	2
 2935              	.LC2:
 2936 0000 4C434420 		.ascii	"LCD resolution X: %d, Y: %d\012\000"
 2936      7265736F 
 2936      6C757469 
 2936      6F6E2058 
 2936      3A202564 
 2937 001d 000000   		.space	3
 2938              	.LC3:
 2939 0020 656E7465 		.ascii	"entering mainTask loop...\012\000"
 2939      72696E67 
 2939      206D6169 
 2939      6E546173 
 2939      6B206C6F 
 2940              		.section	.sdram,"aw",%progbits
 2941              		.align	2
 2942              		.set	.LANCHOR0,. + 0
 2943              		.set	.LANCHOR1,. + 521280
 2946              	lcd_image_fg:
 2947 0000 00000000 		.space	522240
 2947      00000000 
 2947      00000000 
 2947      00000000 
 2947      00000000 
 2950              	lcd_image_bg:
 2951 7f800 00000000 		.space	522240
 2951      00000000 
 2951      00000000 
 2951      00000000 
 2951      00000000 
 2952              		.text
 2953              	.Letext0:
 2954              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 2955              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 2956              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 2957              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 2958              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 2959              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2960              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 2961              		.file 9 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 2962              		.file 10 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 81


 2963              		.file 11 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 2964              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2965              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 2966              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 2967              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 2968              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2969              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 2970              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_crc.h"
 2971              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d.h"
 2972              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rng.h"
 2973              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 2974              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 2975              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 2976              		.file 24 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 2977              		.file 25 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 2978              		.file 26 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 2979              		.file 27 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 2980              		.file 28 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 2981              		.file 29 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 2982              		.file 30 "Middlewares/Third_Party/FatFs/src/integer.h"
 2983              		.file 31 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 2984              		.file 32 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 2985              		.file 33 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 2986              		.file 34 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 2987              		.file 35 "Middlewares/Third_Party/FatFs/src/ff.h"
 2988              		.file 36 "Middlewares/Third_Party/FatFs/src/diskio.h"
 2989              		.file 37 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 2990              		.file 38 "Inc/sd_diskio.h"
 2991              		.file 39 "Inc/usbh_diskio.h"
 2992              		.file 40 "Inc/fatfs.h"
 2993              		.file 41 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\errno.h"
 2994              		.file 42 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\unistd.h"
 2995              		.file 43 "d:\\lab4janos\\f7_base\\utilities\\fonts\\fonts.h"
 2996              		.file 44 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_lcd.h"
 2997              		.file 45 "d:\\lab4janos\\f7_base\\drivers\\bsp\\components\\common\\ts.h"
 2998              		.file 46 "d:\\lab4janos\\f7_base\\drivers\\bsp\\components\\ft5336\\ft5336.h"
 2999              		.file 47 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 3000              		.file 48 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 3001              		.file 49 "Inc/usb_host.h"
 3002              		.file 50 "Inc/term_io.h"
 3003              		.file 51 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 3004              		.file 52 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
 3005              		.file 53 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 3006              		.file 54 "Inc/dbgu.h"
 3007              		.file 55 "<built-in>"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 82


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:18     .text.MX_SDMMC1_SD_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:24     .text.MX_SDMMC1_SD_Init:00000000 MX_SDMMC1_SD_Init
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:53     .text.MX_SDMMC1_SD_Init:00000018 $d
                            *COM*:00000084 hsd1
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:59     .text.MX_GPIO_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:65     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:525    .text.MX_GPIO_Init:000002b0 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:537    .text.MX_GPIO_Init:000002dc $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1015   .text.MX_GPIO_Init:00000574 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1027   .text.MX_GPIO_Init:0000059c $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1087   .text.MX_GPIO_Init:000005f0 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1094   .text.MX_DMA_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1100   .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1153   .text.MX_DMA_Init:00000040 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1158   .text._write:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1165   .text._write:00000000 _write
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1224   .text._write:00000038 $d
                            *COM*:00000070 huart1
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1229   .text.inkey:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1236   .text.inkey:00000000 inkey
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1268   .text.inkey:0000001c $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1273   .text.initialize_touchscreen:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1280   .text.initialize_touchscreen:00000000 initialize_touchscreen
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1343   .text.initialize_touchscreen:00000050 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1350   .text.lcd_start:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1357   .text.lcd_start:00000000 lcd_start
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1414   .text.lcd_start:00000048 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1420   .text.draw_background:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1427   .text.draw_background:00000000 draw_background
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1472   .text.draw_background:00000038 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1478   .text.show_number:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1485   .text.show_number:00000000 show_number
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1677   .text.show_number:0000013c $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1683   .text.mainTask:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1690   .text.mainTask:00000000 mainTask
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1965   .text.mainTask:00000160 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1975   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:1982   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2012   .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2017   .text._Error_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2024   .text._Error_Handler:00000000 _Error_Handler
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2039   .text.MX_ADC3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2045   .text.MX_ADC3_Init:00000000 MX_ADC3_Init
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2131   .text.MX_ADC3_Init:00000060 $d
                            *COM*:00000048 hadc3
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2139   .text.MX_CRC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2145   .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2186   .text.MX_CRC_Init:00000028 $d
                            *COM*:00000024 hcrc
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2193   .text.MX_DMA2D_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2199   .text.MX_DMA2D_Init:00000000 MX_DMA2D_Init
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2255   .text.MX_DMA2D_Init:00000040 $d
                            *COM*:00000040 hdma2d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2262   .text.MX_RNG_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2268   .text.MX_RNG_Init:00000000 MX_RNG_Init
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 83


C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2297   .text.MX_RNG_Init:0000001c $d
                            *COM*:0000000c hrng
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2304   .text.MX_RTC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2310   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2425   .text.MX_RTC_Init:000000a0 $d
                            *COM*:00000020 hrtc
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2432   .text.MX_TIM10_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2438   .text.MX_TIM10_Init:00000000 MX_TIM10_Init
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2478   .text.MX_TIM10_Init:00000028 $d
                            *COM*:00000040 htim10
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2485   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2491   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2541   .text.MX_USART1_UART_Init:00000034 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2548   .text.MX_USART6_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2554   .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2604   .text.MX_USART6_UART_Init:00000034 $d
                            *COM*:00000070 huart6
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2611   .text.SystemClock_Config:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2618   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2784   .text.SystemClock_Config:000000f4 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2793   .text.main:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2800   .text.main:00000000 main
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2883   .text.main:00000064 $d
                            *COM*:00000060 hdma_usart6_rx
                            *COM*:00000060 hdma_usart1_rx
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2902   .bss.TS_State:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2906   .bss.TS_State:00000000 TS_State
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2909   .bss.TS_State1:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2913   .bss.TS_State1:00000000 TS_State1
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2916   .rodata.MX_ADC3_Init.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2920   .rodata.initialize_touchscreen.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2927   .rodata.main.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2934   .rodata.mainTask.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2941   .sdram:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2946   .sdram:00000000 lcd_image_fg
C:\Users\Student\AppData\Local\Temp\ccFMav4b.s:2950   .sdram:0007f800 lcd_image_bg
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__errno
BSP_LCD_GetXSize
BSP_LCD_GetYSize
BSP_TS_Init
BSP_LCD_SetBackColor
BSP_LCD_SetTextColor
BSP_LCD_DisplayStringAt
BSP_LCD_Init
BSP_LCD_LayerRgb565Init
BSP_LCD_DisplayOn
BSP_LCD_SelectLayer
BSP_LCD_Clear
BSP_LCD_SetTransparency
BSP_LCD_FillRect
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccFMav4b.s 			page 84


BSP_LCD_FillEllipse
MX_FATFS_Init
MX_USB_HOST_Init
xprintf
BSP_TS_GetState
vTaskDelay
HAL_IncTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CRC_Init
HAL_DMA2D_Init
HAL_DMA2D_ConfigLayer
HAL_RNG_Init
HAL_RTCEx_BKUPRead
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTCEx_BKUPWrite
HAL_TIM_Base_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_Init
debug_init
puts
xTaskCreate
vTaskStartScheduler
