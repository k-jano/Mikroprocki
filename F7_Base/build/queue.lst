ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"queue.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvIsQueueFull,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	prvIsQueueFull:
  25              	.LFB25:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    Help yourself get started quickly while simultaneously helping     *
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** header files above, but not in this file, in order to generate the correct
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** privileged Vs unprivileged linkage and placement. */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** alternative implementation would be to use a union, but use of a union is
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** against the coding standard (although an exception to the standard has been
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** permitted where the dual use also significantly changes the type of the
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure member). */
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define pxMutexHolder					pcTail
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static void prvUnlockQueue( Queue_t * const pxQueue );
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue );
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static BaseType_t prvIsQueueFull( const Queue_t *pxQueue );
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvIt
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffe
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_FUNCTION static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, c
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** PRIVILEGED_FUNCTION static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBase
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_FUNCTION static void prvInitialiseMutex( Queue_t *pxNewQueue );
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible	that interrupts occurring now
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event	list again - but as the
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWa
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position in case the queue is only being
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				peeked. */
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xJustPeeking == pdFALSE )
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Actually removing data, not just peeking. */
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Record the information required to implement
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							priority inheritance should it become necessary. */
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The data is not being removed, so reset the read
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pointer. */
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The data is being left in the queue, so see if there are
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					any other tasks waiting for the data. */
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority than this task. */
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t *pxQueue;
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 32


1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 33


1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 34


1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 35


1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  27              		.loc 1 1954 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 0446     		mov	r4, r0
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  38              		.loc 1 1957 0
  39 0004 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 36


  40              	.LVL1:
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  41              		.loc 1 1959 0
  42 0008 A26B     		ldr	r2, [r4, #56]
  43 000a E36B     		ldr	r3, [r4, #60]
  44 000c 9A42     		cmp	r2, r3
  45 000e 04D0     		beq	.L5
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  46              		.loc 1 1965 0
  47 0010 0024     		movs	r4, #0
  48              	.LVL2:
  49              	.L2:
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  50              		.loc 1 1968 0
  51 0012 FFF7FEFF 		bl	vPortExitCritical
  52              	.LVL3:
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  53              		.loc 1 1971 0
  54 0016 2046     		mov	r0, r4
  55 0018 10BD     		pop	{r4, pc}
  56              	.LVL4:
  57              	.L5:
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  58              		.loc 1 1961 0
  59 001a 0124     		movs	r4, #1
  60              	.LVL5:
  61 001c F9E7     		b	.L2
  62              		.cfi_endproc
  63              	.LFE25:
  65              		.section	.text.prvIsQueueEmpty,"ax",%progbits
  66              		.align	1
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv5-sp-d16
  72              	prvIsQueueEmpty:
  73              	.LFB23:
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
  74              		.loc 1 1915 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL6:
  79 0000 10B5     		push	{r4, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 4, -8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 37


  83              		.cfi_offset 14, -4
  84 0002 0446     		mov	r4, r0
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  85              		.loc 1 1918 0
  86 0004 FFF7FEFF 		bl	vPortEnterCritical
  87              	.LVL7:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
  88              		.loc 1 1920 0
  89 0008 A36B     		ldr	r3, [r4, #56]
  90 000a 23B1     		cbz	r3, .L10
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  91              		.loc 1 1926 0
  92 000c 0024     		movs	r4, #0
  93              	.LVL8:
  94              	.L7:
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  95              		.loc 1 1929 0
  96 000e FFF7FEFF 		bl	vPortExitCritical
  97              	.LVL9:
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
  98              		.loc 1 1932 0
  99 0012 2046     		mov	r0, r4
 100 0014 10BD     		pop	{r4, pc}
 101              	.LVL10:
 102              	.L10:
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 103              		.loc 1 1922 0
 104 0016 0124     		movs	r4, #1
 105              	.LVL11:
 106 0018 F9E7     		b	.L7
 107              		.cfi_endproc
 108              	.LFE23:
 110              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 111              		.align	1
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv5-sp-d16
 117              	prvCopyDataToQueue:
 118              	.LFB20:
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 119              		.loc 1 1698 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              	.LVL12:
 124 0000 70B5     		push	{r4, r5, r6, lr}
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 16
 127              		.cfi_offset 4, -16
 128              		.cfi_offset 5, -12
 129              		.cfi_offset 6, -8
 130              		.cfi_offset 14, -4
 131 0002 0446     		mov	r4, r0
 132 0004 1646     		mov	r6, r2
 133              	.LVL13:
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 38


 134              		.loc 1 1704 0
 135 0006 856B     		ldr	r5, [r0, #56]
 136              	.LVL14:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 137              		.loc 1 1706 0
 138 0008 026C     		ldr	r2, [r0, #64]
 139              	.LVL15:
 140 000a 4AB9     		cbnz	r2, .L12
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 141              		.loc 1 1710 0
 142 000c 0368     		ldr	r3, [r0]
 143 000e 53BB     		cbnz	r3, .L16
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 144              		.loc 1 1713 0
 145 0010 4068     		ldr	r0, [r0, #4]
 146              	.LVL16:
 147 0012 FFF7FEFF 		bl	xTaskPriorityDisinherit
 148              	.LVL17:
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 149              		.loc 1 1714 0
 150 0016 0023     		movs	r3, #0
 151 0018 6360     		str	r3, [r4, #4]
 152              	.LVL18:
 153              	.L13:
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 154              		.loc 1 1770 0
 155 001a 0135     		adds	r5, r5, #1
 156              	.LVL19:
 157 001c A563     		str	r5, [r4, #56]
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 158              		.loc 1 1773 0
 159 001e 70BD     		pop	{r4, r5, r6, pc}
 160              	.LVL20:
 161              	.L12:
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 162              		.loc 1 1723 0
 163 0020 6EB9     		cbnz	r6, .L14
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 164              		.loc 1 1725 0
 165 0022 8068     		ldr	r0, [r0, #8]
 166              	.LVL21:
 167 0024 FFF7FEFF 		bl	memcpy
 168              	.LVL22:
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 169              		.loc 1 1726 0
 170 0028 226C     		ldr	r2, [r4, #64]
 171 002a A368     		ldr	r3, [r4, #8]
 172 002c 1344     		add	r3, r3, r2
 173 002e A360     		str	r3, [r4, #8]
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 174              		.loc 1 1727 0
 175 0030 6268     		ldr	r2, [r4, #4]
 176 0032 9342     		cmp	r3, r2
 177 0034 19D3     		bcc	.L17
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 178              		.loc 1 1729 0
 179 0036 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 39


 180 0038 A360     		str	r3, [r4, #8]
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 181              		.loc 1 1699 0
 182 003a 0020     		movs	r0, #0
 183 003c EDE7     		b	.L13
 184              	.LVL23:
 185              	.L14:
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 186              		.loc 1 1738 0
 187 003e C068     		ldr	r0, [r0, #12]
 188              	.LVL24:
 189 0040 FFF7FEFF 		bl	memcpy
 190              	.LVL25:
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 191              		.loc 1 1739 0
 192 0044 236C     		ldr	r3, [r4, #64]
 193 0046 5B42     		negs	r3, r3
 194 0048 E268     		ldr	r2, [r4, #12]
 195 004a 1A44     		add	r2, r2, r3
 196 004c E260     		str	r2, [r4, #12]
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 197              		.loc 1 1740 0
 198 004e 2168     		ldr	r1, [r4]
 199 0050 8A42     		cmp	r2, r1
 200 0052 02D2     		bcs	.L15
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 201              		.loc 1 1742 0
 202 0054 6268     		ldr	r2, [r4, #4]
 203 0056 1344     		add	r3, r3, r2
 204 0058 E360     		str	r3, [r4, #12]
 205              	.L15:
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 206              		.loc 1 1749 0
 207 005a 022E     		cmp	r6, #2
 208 005c 07D1     		bne	.L18
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 209              		.loc 1 1751 0
 210 005e 45B1     		cbz	r5, .L19
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 211              		.loc 1 1757 0
 212 0060 013D     		subs	r5, r5, #1
 213              	.LVL26:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 214              		.loc 1 1699 0
 215 0062 0020     		movs	r0, #0
 216 0064 D9E7     		b	.L13
 217              	.LVL27:
 218              	.L16:
 219 0066 0020     		movs	r0, #0
 220              	.LVL28:
 221 0068 D7E7     		b	.L13
 222              	.LVL29:
 223              	.L17:
 224 006a 0020     		movs	r0, #0
 225 006c D5E7     		b	.L13
 226              	.L18:
 227 006e 0020     		movs	r0, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 40


 228 0070 D3E7     		b	.L13
 229              	.L19:
 230 0072 0020     		movs	r0, #0
 231 0074 D1E7     		b	.L13
 232              		.cfi_endproc
 233              	.LFE20:
 235              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 236              		.align	1
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-sp-d16
 242              	prvCopyDataFromQueue:
 243              	.LFB21:
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 244              		.loc 1 1777 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL30:
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 249              		.loc 1 1778 0
 250 0000 026C     		ldr	r2, [r0, #64]
 251 0002 72B1     		cbz	r2, .L25
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 252              		.loc 1 1777 0
 253 0004 10B5     		push	{r4, lr}
 254              	.LCFI3:
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 4, -8
 257              		.cfi_offset 14, -4
 258 0006 0346     		mov	r3, r0
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 259              		.loc 1 1780 0
 260 0008 C468     		ldr	r4, [r0, #12]
 261 000a 1444     		add	r4, r4, r2
 262 000c C460     		str	r4, [r0, #12]
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 263              		.loc 1 1781 0
 264 000e 4068     		ldr	r0, [r0, #4]
 265              	.LVL31:
 266 0010 8442     		cmp	r4, r0
 267 0012 01D3     		bcc	.L23
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 268              		.loc 1 1783 0
 269 0014 1868     		ldr	r0, [r3]
 270 0016 D860     		str	r0, [r3, #12]
 271              	.L23:
 272 0018 0846     		mov	r0, r1
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 273              		.loc 1 1789 0
 274 001a D968     		ldr	r1, [r3, #12]
 275              	.LVL32:
 276 001c FFF7FEFF 		bl	memcpy
 277              	.LVL33:
 278 0020 10BD     		pop	{r4, pc}
 279              	.LVL34:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 41


 280              	.L25:
 281              	.LCFI4:
 282              		.cfi_def_cfa_offset 0
 283              		.cfi_restore 4
 284              		.cfi_restore 14
 285 0022 7047     		bx	lr
 286              		.cfi_endproc
 287              	.LFE21:
 289              		.section	.text.prvUnlockQueue,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv5-sp-d16
 296              	prvUnlockQueue:
 297              	.LFB22:
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 298              		.loc 1 1795 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              	.LVL35:
 303 0000 38B5     		push	{r3, r4, r5, lr}
 304              	.LCFI5:
 305              		.cfi_def_cfa_offset 16
 306              		.cfi_offset 3, -16
 307              		.cfi_offset 4, -12
 308              		.cfi_offset 5, -8
 309              		.cfi_offset 14, -4
 310 0002 0546     		mov	r5, r0
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 311              		.loc 1 1802 0
 312 0004 FFF7FEFF 		bl	vPortEnterCritical
 313              	.LVL36:
 314              	.LBB76:
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 315              		.loc 1 1804 0
 316 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 317 000c 64B2     		sxtb	r4, r4
 318              	.LVL37:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 319              		.loc 1 1807 0
 320 000e 01E0     		b	.L29
 321              	.L31:
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 322              		.loc 1 1875 0
 323 0010 013C     		subs	r4, r4, #1
 324              	.LVL38:
 325 0012 64B2     		sxtb	r4, r4
 326              	.LVL39:
 327              	.L29:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 328              		.loc 1 1807 0
 329 0014 002C     		cmp	r4, #0
 330 0016 0ADD     		ble	.L30
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 331              		.loc 1 1855 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 42


 332 0018 6B6A     		ldr	r3, [r5, #36]
 333 001a 43B1     		cbz	r3, .L30
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 334              		.loc 1 1857 0
 335 001c 05F12400 		add	r0, r5, #36
 336 0020 FFF7FEFF 		bl	xTaskRemoveFromEventList
 337              	.LVL40:
 338 0024 0028     		cmp	r0, #0
 339 0026 F3D0     		beq	.L31
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 340              		.loc 1 1861 0
 341 0028 FFF7FEFF 		bl	vTaskMissedYield
 342              	.LVL41:
 343 002c F0E7     		b	.L31
 344              	.L30:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 345              		.loc 1 1878 0
 346 002e FF23     		movs	r3, #255
 347 0030 85F84530 		strb	r3, [r5, #69]
 348              	.LBE76:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 349              		.loc 1 1880 0
 350 0034 FFF7FEFF 		bl	vPortExitCritical
 351              	.LVL42:
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 352              		.loc 1 1883 0
 353 0038 FFF7FEFF 		bl	vPortEnterCritical
 354              	.LVL43:
 355              	.LBB77:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 356              		.loc 1 1885 0
 357 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 358              	.LVL44:
 359 0040 64B2     		sxtb	r4, r4
 360              	.LVL45:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 361              		.loc 1 1887 0
 362 0042 01E0     		b	.L33
 363              	.L35:
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 364              		.loc 1 1900 0
 365 0044 013C     		subs	r4, r4, #1
 366              	.LVL46:
 367 0046 64B2     		sxtb	r4, r4
 368              	.LVL47:
 369              	.L33:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 370              		.loc 1 1887 0
 371 0048 002C     		cmp	r4, #0
 372 004a 0ADD     		ble	.L34
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 373              		.loc 1 1889 0
 374 004c 2B69     		ldr	r3, [r5, #16]
 375 004e 43B1     		cbz	r3, .L34
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 376              		.loc 1 1891 0
 377 0050 05F11000 		add	r0, r5, #16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 43


 378 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 379              	.LVL48:
 380 0058 0028     		cmp	r0, #0
 381 005a F3D0     		beq	.L35
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 382              		.loc 1 1893 0
 383 005c FFF7FEFF 		bl	vTaskMissedYield
 384              	.LVL49:
 385 0060 F0E7     		b	.L35
 386              	.L34:
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 387              		.loc 1 1908 0
 388 0062 FF23     		movs	r3, #255
 389 0064 85F84430 		strb	r3, [r5, #68]
 390              	.LBE77:
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 391              		.loc 1 1910 0
 392 0068 FFF7FEFF 		bl	vPortExitCritical
 393              	.LVL50:
 394 006c 38BD     		pop	{r3, r4, r5, pc}
 395              		.cfi_endproc
 396              	.LFE22:
 398              		.section	.text.xQueueGenericReset,"ax",%progbits
 399              		.align	1
 400              		.global	xQueueGenericReset
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.fpu fpv5-sp-d16
 406              	xQueueGenericReset:
 407              	.LFB5:
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 408              		.loc 1 280 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              	.LVL51:
 413 0000 38B5     		push	{r3, r4, r5, lr}
 414              	.LCFI6:
 415              		.cfi_def_cfa_offset 16
 416              		.cfi_offset 3, -16
 417              		.cfi_offset 4, -12
 418              		.cfi_offset 5, -8
 419              		.cfi_offset 14, -4
 420              	.LVL52:
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 421              		.loc 1 283 0
 422 0002 30B3     		cbz	r0, .L44
 423 0004 0446     		mov	r4, r0
 424 0006 0D46     		mov	r5, r1
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 425              		.loc 1 285 0
 426 0008 FFF7FEFF 		bl	vPortEnterCritical
 427              	.LVL53:
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 428              		.loc 1 287 0
 429 000c 2168     		ldr	r1, [r4]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 44


 430 000e E26B     		ldr	r2, [r4, #60]
 431 0010 236C     		ldr	r3, [r4, #64]
 432 0012 03FB0210 		mla	r0, r3, r2, r1
 433 0016 6060     		str	r0, [r4, #4]
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 434              		.loc 1 288 0
 435 0018 0020     		movs	r0, #0
 436 001a A063     		str	r0, [r4, #56]
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 437              		.loc 1 289 0
 438 001c A160     		str	r1, [r4, #8]
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 439              		.loc 1 290 0
 440 001e 013A     		subs	r2, r2, #1
 441 0020 02FB0313 		mla	r3, r2, r3, r1
 442 0024 E360     		str	r3, [r4, #12]
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 443              		.loc 1 291 0
 444 0026 FF23     		movs	r3, #255
 445 0028 84F84430 		strb	r3, [r4, #68]
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 446              		.loc 1 292 0
 447 002c 84F84530 		strb	r3, [r4, #69]
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 448              		.loc 1 294 0
 449 0030 D5B9     		cbnz	r5, .L41
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 450              		.loc 1 301 0
 451 0032 2369     		ldr	r3, [r4, #16]
 452 0034 03B3     		cbz	r3, .L42
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 453              		.loc 1 303 0
 454 0036 04F11000 		add	r0, r4, #16
 455 003a FFF7FEFF 		bl	xTaskRemoveFromEventList
 456              	.LVL54:
 457 003e D8B1     		cbz	r0, .L42
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 458              		.loc 1 305 0
 459 0040 4FF08052 		mov	r2, #268435456
 460 0044 0E4B     		ldr	r3, .L45
 461 0046 1A60     		str	r2, [r3]
 462              		.syntax unified
 463              	@ 305 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 464 0048 BFF34F8F 		dsb
 465              	@ 0 "" 2
 466              	@ 305 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 467 004c BFF36F8F 		isb
 468              	@ 0 "" 2
 469              		.thumb
 470              		.syntax unified
 471 0050 12E0     		b	.L42
 472              	.LVL55:
 473              	.L44:
 474              	.LBB78:
 475              	.LBB79:
 476              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 45


   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 46


  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef PORTMACRO_H
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define PORTMACRO_H
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef __cplusplus
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern "C" {
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Port specific definitions.
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * given hardware and compiler.
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * These settings should not be altered.
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *-----------------------------------------------------------
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Type definitions. */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCHAR		char
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portFLOAT		float
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDOUBLE		double
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portLONG		long
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSHORT		short
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBASE_TYPE	long
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef long BaseType_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint16_t TickType_t;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #else
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint32_t TickType_t;
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	not need to be guarded with a critical section. */
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specifics. */
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_GROWTH			( -1 )
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 47


 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Scheduler utilities. */
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD() 															\
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {																				\
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 																				\
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "isb" );													\
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Critical section management. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortEnterCritical( void );
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortExitCritical( void );
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** (which build with all the ports) will build. */
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Tickless idle/low power functionality. */
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specific optimisations. */
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Generic helper function. */
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 48


 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	uint8_t ucReturn;
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		return ucReturn;
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Check the configuration. */
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#endif
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef configASSERT
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* portNOP() is not required by this port. */
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNOP()
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portINLINE	__inline
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portFORCE_INLINE
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** BaseType_t xReturn;
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdFALSE;
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	else
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdTRUE;
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	return xReturn;
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 49


 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulNewBASEPRI;
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 477              		.loc 2 237 0
 478              		.syntax unified
 479              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 480 0052 4FF05003 			mov r3, #80												
 481 0056 72B6     		cpsid i													
 482 0058 83F31188 		msr basepri, r3											
 483 005c BFF36F8F 		isb														
 484 0060 BFF34F8F 		dsb														
 485 0064 62B6     		cpsie i													
 486              	
 487              	@ 0 "" 2
 488              	.LVL56:
 489              		.thumb
 490              		.syntax unified
 491              	.L40:
 492 0066 FEE7     		b	.L40
 493              	.LVL57:
 494              	.L41:
 495              	.LBE79:
 496              	.LBE78:
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 497              		.loc 1 320 0
 498 0068 04F11000 		add	r0, r4, #16
 499 006c FFF7FEFF 		bl	vListInitialise
 500              	.LVL58:
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 501              		.loc 1 321 0
 502 0070 04F12400 		add	r0, r4, #36
 503 0074 FFF7FEFF 		bl	vListInitialise
 504              	.LVL59:
 505              	.L42:
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 506              		.loc 1 324 0
 507 0078 FFF7FEFF 		bl	vPortExitCritical
 508              	.LVL60:
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 509              		.loc 1 329 0
 510 007c 0120     		movs	r0, #1
 511 007e 38BD     		pop	{r3, r4, r5, pc}
 512              	.LVL61:
 513              	.L46:
 514              		.align	2
 515              	.L45:
 516 0080 04ED00E0 		.word	-536810236
 517              		.cfi_endproc
 518              	.LFE5:
 520              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 521              		.align	1
 522              		.syntax unified
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 50


 523              		.thumb
 524              		.thumb_func
 525              		.fpu fpv5-sp-d16
 527              	prvInitialiseNewQueue:
 528              	.LFB7:
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 529              		.loc 1 433 0
 530              		.cfi_startproc
 531              		@ args = 4, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              	.LVL62:
 534 0000 10B5     		push	{r4, lr}
 535              	.LCFI7:
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 4, -8
 538              		.cfi_offset 14, -4
 539 0002 029B     		ldr	r3, [sp, #8]
 540              	.LVL63:
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 541              		.loc 1 438 0
 542 0004 0C46     		mov	r4, r1
 543 0006 39B1     		cbz	r1, .L51
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 544              		.loc 1 449 0
 545 0008 1A60     		str	r2, [r3]
 546              	.L49:
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 547              		.loc 1 454 0
 548 000a D863     		str	r0, [r3, #60]
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 549              		.loc 1 455 0
 550 000c 1C64     		str	r4, [r3, #64]
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 551              		.loc 1 456 0
 552 000e 0121     		movs	r1, #1
 553              	.LVL64:
 554 0010 1846     		mov	r0, r3
 555              	.LVL65:
 556 0012 FFF7FEFF 		bl	xQueueGenericReset
 557              	.LVL66:
 558 0016 10BD     		pop	{r4, pc}
 559              	.LVL67:
 560              	.L51:
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 561              		.loc 1 444 0
 562 0018 1B60     		str	r3, [r3]
 563 001a F6E7     		b	.L49
 564              		.cfi_endproc
 565              	.LFE7:
 567              		.section	.text.xQueueGenericCreate,"ax",%progbits
 568              		.align	1
 569              		.global	xQueueGenericCreate
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu fpv5-sp-d16
 575              	xQueueGenericCreate:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 51


 576              	.LFB6:
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 577              		.loc 1 387 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              	.LVL68:
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 582              		.loc 1 392 0
 583 0000 50B9     		cbnz	r0, .L53
 584              	.LBB80:
 585              	.LBB81:
 586              		.loc 2 237 0
 587              		.syntax unified
 588              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 589 0002 4FF05003 			mov r3, #80												
 590 0006 72B6     		cpsid i													
 591 0008 83F31188 		msr basepri, r3											
 592 000c BFF36F8F 		isb														
 593 0010 BFF34F8F 		dsb														
 594 0014 62B6     		cpsie i													
 595              	
 596              	@ 0 "" 2
 597              	.LVL69:
 598              		.thumb
 599              		.syntax unified
 600              	.L54:
 601 0016 FEE7     		b	.L54
 602              	.L53:
 603              	.LBE81:
 604              	.LBE80:
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 605              		.loc 1 387 0
 606 0018 F0B5     		push	{r4, r5, r6, r7, lr}
 607              	.LCFI8:
 608              		.cfi_def_cfa_offset 20
 609              		.cfi_offset 4, -20
 610              		.cfi_offset 5, -16
 611              		.cfi_offset 6, -12
 612              		.cfi_offset 7, -8
 613              		.cfi_offset 14, -4
 614 001a 83B0     		sub	sp, sp, #12
 615              	.LCFI9:
 616              		.cfi_def_cfa_offset 32
 617 001c 0546     		mov	r5, r0
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 618              		.loc 1 394 0
 619 001e 11B1     		cbz	r1, .L57
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 620              		.loc 1 403 0
 621 0020 01FB00F0 		mul	r0, r1, r0
 622              	.LVL70:
 623 0024 00E0     		b	.L55
 624              	.LVL71:
 625              	.L57:
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 626              		.loc 1 397 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 52


 627 0026 0020     		movs	r0, #0
 628              	.LVL72:
 629              	.L55:
 630 0028 1746     		mov	r7, r2
 631 002a 0C46     		mov	r4, r1
 632              	.LVL73:
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 633              		.loc 1 406 0
 634 002c 4830     		adds	r0, r0, #72
 635              	.LVL74:
 636 002e FFF7FEFF 		bl	pvPortMalloc
 637              	.LVL75:
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 638              		.loc 1 408 0
 639 0032 0646     		mov	r6, r0
 640 0034 38B1     		cbz	r0, .L56
 641              	.LVL76:
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 642              		.loc 1 423 0
 643 0036 0090     		str	r0, [sp]
 644 0038 3B46     		mov	r3, r7
 645 003a 00F14802 		add	r2, r0, #72
 646              	.LVL77:
 647 003e 2146     		mov	r1, r4
 648 0040 2846     		mov	r0, r5
 649              	.LVL78:
 650 0042 FFF7FEFF 		bl	prvInitialiseNewQueue
 651              	.LVL79:
 652              	.L56:
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 653              		.loc 1 427 0
 654 0046 3046     		mov	r0, r6
 655 0048 03B0     		add	sp, sp, #12
 656              	.LCFI10:
 657              		.cfi_def_cfa_offset 20
 658              		@ sp needed
 659 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 660              		.cfi_endproc
 661              	.LFE6:
 663              		.section	.text.xQueueGenericSend,"ax",%progbits
 664              		.align	1
 665              		.global	xQueueGenericSend
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 669              		.fpu fpv5-sp-d16
 671              	xQueueGenericSend:
 672              	.LFB10:
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 673              		.loc 1 724 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 16
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              	.LVL80:
 678 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 679              	.LCFI11:
 680              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 53


 681              		.cfi_offset 4, -20
 682              		.cfi_offset 5, -16
 683              		.cfi_offset 6, -12
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 85B0     		sub	sp, sp, #20
 687              	.LCFI12:
 688              		.cfi_def_cfa_offset 40
 689 0004 0192     		str	r2, [sp, #4]
 690              	.LVL81:
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 691              		.loc 1 729 0
 692 0006 70B1     		cbz	r0, .L90
 693 0008 0446     		mov	r4, r0
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 694              		.loc 1 730 0
 695 000a B9B1     		cbz	r1, .L91
 696 000c 0125     		movs	r5, #1
 697              	.LVL82:
 698              	.L63:
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 699              		.loc 1 730 0 is_stmt 0 discriminator 6
 700 000e DDB9     		cbnz	r5, .L64
 701              	.LBB82:
 702              	.LBB83:
 703              		.loc 2 237 0 is_stmt 1
 704              		.syntax unified
 705              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 706 0010 4FF05003 			mov r3, #80												
 707 0014 72B6     		cpsid i													
 708 0016 83F31188 		msr basepri, r3											
 709 001a BFF36F8F 		isb														
 710 001e BFF34F8F 		dsb														
 711 0022 62B6     		cpsie i													
 712              	
 713              	@ 0 "" 2
 714              	.LVL83:
 715              		.thumb
 716              		.syntax unified
 717              	.L65:
 718 0024 FEE7     		b	.L65
 719              	.LVL84:
 720              	.L90:
 721              	.LBE83:
 722              	.LBE82:
 723              	.LBB84:
 724              	.LBB85:
 725              		.syntax unified
 726              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 727 0026 4FF05003 			mov r3, #80												
 728 002a 72B6     		cpsid i													
 729 002c 83F31188 		msr basepri, r3											
 730 0030 BFF36F8F 		isb														
 731 0034 BFF34F8F 		dsb														
 732 0038 62B6     		cpsie i													
 733              	
 734              	@ 0 "" 2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 54


 735              	.LVL85:
 736              		.thumb
 737              		.syntax unified
 738              	.L62:
 739 003a FEE7     		b	.L62
 740              	.LVL86:
 741              	.L91:
 742              	.LBE85:
 743              	.LBE84:
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 744              		.loc 1 730 0 discriminator 2
 745 003c 026C     		ldr	r2, [r0, #64]
 746              	.LVL87:
 747 003e 0AB9     		cbnz	r2, .L85
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 748              		.loc 1 730 0 is_stmt 0
 749 0040 0125     		movs	r5, #1
 750 0042 E4E7     		b	.L63
 751              	.L85:
 752 0044 0025     		movs	r5, #0
 753 0046 E2E7     		b	.L63
 754              	.L64:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 755              		.loc 1 731 0 is_stmt 1
 756 0048 022B     		cmp	r3, #2
 757 004a 0BD0     		beq	.L92
 758              	.L66:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 759              		.loc 1 731 0 is_stmt 0 discriminator 6
 760 004c 7DB9     		cbnz	r5, .L67
 761              	.LBB86:
 762              	.LBB87:
 763              		.loc 2 237 0 is_stmt 1
 764              		.syntax unified
 765              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 766 004e 4FF05003 			mov r3, #80												
 767 0052 72B6     		cpsid i													
 768 0054 83F31188 		msr basepri, r3											
 769 0058 BFF36F8F 		isb														
 770 005c BFF34F8F 		dsb														
 771 0060 62B6     		cpsie i													
 772              	
 773              	@ 0 "" 2
 774              	.LVL88:
 775              		.thumb
 776              		.syntax unified
 777              	.L68:
 778 0062 FEE7     		b	.L68
 779              	.LVL89:
 780              	.L92:
 781              	.LBE87:
 782              	.LBE86:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 783              		.loc 1 731 0 discriminator 2
 784 0064 E26B     		ldr	r2, [r4, #60]
 785 0066 012A     		cmp	r2, #1
 786 0068 F0D0     		beq	.L66
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 55


 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 787              		.loc 1 731 0 is_stmt 0
 788 006a 0025     		movs	r5, #0
 789 006c EEE7     		b	.L66
 790              	.L67:
 791 006e 1E46     		mov	r6, r3
 792 0070 0F46     		mov	r7, r1
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 793              		.loc 1 734 0 is_stmt 1
 794 0072 FFF7FEFF 		bl	xTaskGetSchedulerState
 795              	.LVL90:
 796 0076 10B9     		cbnz	r0, .L69
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 797              		.loc 1 734 0 is_stmt 0 discriminator 2
 798 0078 019B     		ldr	r3, [sp, #4]
 799 007a 03B1     		cbz	r3, .L69
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 800              		.loc 1 734 0
 801 007c 0025     		movs	r5, #0
 802              	.L69:
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 803              		.loc 1 734 0 discriminator 6
 804 007e 55B9     		cbnz	r5, .L88
 805              	.LBB88:
 806              	.LBB89:
 807              		.loc 2 237 0 is_stmt 1
 808              		.syntax unified
 809              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 810 0080 4FF05003 			mov r3, #80												
 811 0084 72B6     		cpsid i													
 812 0086 83F31188 		msr basepri, r3											
 813 008a BFF36F8F 		isb														
 814 008e BFF34F8F 		dsb														
 815 0092 62B6     		cpsie i													
 816              	
 817              	@ 0 "" 2
 818              	.LVL91:
 819              		.thumb
 820              		.syntax unified
 821              	.L71:
 822 0094 FEE7     		b	.L71
 823              	.L88:
 824              	.LBE89:
 825              	.LBE88:
 826 0096 0025     		movs	r5, #0
 827 0098 2CE0     		b	.L70
 828              	.LVL92:
 829              	.L72:
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 830              		.loc 1 753 0
 831 009a 3246     		mov	r2, r6
 832 009c 3946     		mov	r1, r7
 833 009e 2046     		mov	r0, r4
 834 00a0 FFF7FEFF 		bl	prvCopyDataToQueue
 835              	.LVL93:
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 836              		.loc 1 808 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 56


 837 00a4 636A     		ldr	r3, [r4, #36]
 838 00a6 8BB1     		cbz	r3, .L74
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 839              		.loc 1 810 0
 840 00a8 04F12400 		add	r0, r4, #36
 841              	.LVL94:
 842 00ac FFF7FEFF 		bl	xTaskRemoveFromEventList
 843              	.LVL95:
 844 00b0 38B1     		cbz	r0, .L75
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 845              		.loc 1 816 0
 846 00b2 4FF08052 		mov	r2, #268435456
 847 00b6 374B     		ldr	r3, .L94
 848 00b8 1A60     		str	r2, [r3]
 849              		.syntax unified
 850              	@ 816 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 851 00ba BFF34F8F 		dsb
 852              	@ 0 "" 2
 853              	@ 816 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 854 00be BFF36F8F 		isb
 855              	@ 0 "" 2
 856              		.thumb
 857              		.syntax unified
 858              	.L75:
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 859              		.loc 1 838 0
 860 00c2 FFF7FEFF 		bl	vPortExitCritical
 861              	.LVL96:
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 862              		.loc 1 839 0
 863 00c6 0120     		movs	r0, #1
 864              	.L60:
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 865              		.loc 1 918 0
 866 00c8 05B0     		add	sp, sp, #20
 867              	.LCFI13:
 868              		.cfi_remember_state
 869              		.cfi_def_cfa_offset 20
 870              		@ sp needed
 871 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 872              	.LVL97:
 873              	.L74:
 874              	.LCFI14:
 875              		.cfi_restore_state
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 876              		.loc 1 823 0
 877 00cc 0028     		cmp	r0, #0
 878 00ce F8D0     		beq	.L75
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 879              		.loc 1 829 0
 880 00d0 4FF08052 		mov	r2, #268435456
 881 00d4 2F4B     		ldr	r3, .L94
 882 00d6 1A60     		str	r2, [r3]
 883              		.syntax unified
 884              	@ 829 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 885 00d8 BFF34F8F 		dsb
 886              	@ 0 "" 2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 57


 887              	@ 829 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 888 00dc BFF36F8F 		isb
 889              	@ 0 "" 2
 890              		.thumb
 891              		.syntax unified
 892 00e0 EFE7     		b	.L75
 893              	.LVL98:
 894              	.L93:
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 895              		.loc 1 847 0
 896 00e2 FFF7FEFF 		bl	vPortExitCritical
 897              	.LVL99:
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 898              		.loc 1 852 0
 899 00e6 0020     		movs	r0, #0
 900 00e8 EEE7     		b	.L60
 901              	.L82:
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 902              		.loc 1 904 0
 903 00ea 2046     		mov	r0, r4
 904 00ec FFF7FEFF 		bl	prvUnlockQueue
 905              	.LVL100:
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 906              		.loc 1 905 0
 907 00f0 FFF7FEFF 		bl	xTaskResumeAll
 908              	.LVL101:
 909              	.L70:
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 910              		.loc 1 744 0
 911 00f4 FFF7FEFF 		bl	vPortEnterCritical
 912              	.LVL102:
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 913              		.loc 1 750 0
 914 00f8 A26B     		ldr	r2, [r4, #56]
 915 00fa E36B     		ldr	r3, [r4, #60]
 916 00fc 9A42     		cmp	r2, r3
 917 00fe CCD3     		bcc	.L72
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 918              		.loc 1 750 0 is_stmt 0 discriminator 1
 919 0100 022E     		cmp	r6, #2
 920 0102 CAD0     		beq	.L72
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 921              		.loc 1 843 0 is_stmt 1
 922 0104 019B     		ldr	r3, [sp, #4]
 923 0106 002B     		cmp	r3, #0
 924 0108 EBD0     		beq	.L93
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 925              		.loc 1 854 0
 926 010a 1DB9     		cbnz	r5, .L78
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 927              		.loc 1 858 0
 928 010c 02A8     		add	r0, sp, #8
 929 010e FFF7FEFF 		bl	vTaskSetTimeOutState
 930              	.LVL103:
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 931              		.loc 1 859 0
 932 0112 0125     		movs	r5, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 58


 933              	.LVL104:
 934              	.L78:
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 935              		.loc 1 868 0
 936 0114 FFF7FEFF 		bl	vPortExitCritical
 937              	.LVL105:
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 938              		.loc 1 873 0
 939 0118 FFF7FEFF 		bl	vTaskSuspendAll
 940              	.LVL106:
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 941              		.loc 1 874 0
 942 011c FFF7FEFF 		bl	vPortEnterCritical
 943              	.LVL107:
 944 0120 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 945 0124 5BB2     		sxtb	r3, r3
 946 0126 B3F1FF3F 		cmp	r3, #-1
 947 012a 02D1     		bne	.L79
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 948              		.loc 1 874 0 is_stmt 0 discriminator 1
 949 012c 0023     		movs	r3, #0
 950 012e 84F84430 		strb	r3, [r4, #68]
 951              	.L79:
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 952              		.loc 1 874 0 discriminator 3
 953 0132 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 954 0136 5BB2     		sxtb	r3, r3
 955 0138 B3F1FF3F 		cmp	r3, #-1
 956 013c 02D1     		bne	.L80
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 957              		.loc 1 874 0 discriminator 4
 958 013e 0023     		movs	r3, #0
 959 0140 84F84530 		strb	r3, [r4, #69]
 960              	.L80:
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 961              		.loc 1 874 0 discriminator 6
 962 0144 FFF7FEFF 		bl	vPortExitCritical
 963              	.LVL108:
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 964              		.loc 1 877 0 is_stmt 1 discriminator 6
 965 0148 01A9     		add	r1, sp, #4
 966 014a 02A8     		add	r0, sp, #8
 967 014c FFF7FEFF 		bl	xTaskCheckForTimeOut
 968              	.LVL109:
 969 0150 C8B9     		cbnz	r0, .L81
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 970              		.loc 1 879 0
 971 0152 2046     		mov	r0, r4
 972 0154 FFF7FEFF 		bl	prvIsQueueFull
 973              	.LVL110:
 974 0158 0028     		cmp	r0, #0
 975 015a C6D0     		beq	.L82
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 976              		.loc 1 882 0
 977 015c 0199     		ldr	r1, [sp, #4]
 978 015e 04F11000 		add	r0, r4, #16
 979 0162 FFF7FEFF 		bl	vTaskPlaceOnEventList
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 59


 980              	.LVL111:
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 981              		.loc 1 889 0
 982 0166 2046     		mov	r0, r4
 983 0168 FFF7FEFF 		bl	prvUnlockQueue
 984              	.LVL112:
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 985              		.loc 1 896 0
 986 016c FFF7FEFF 		bl	xTaskResumeAll
 987              	.LVL113:
 988 0170 0028     		cmp	r0, #0
 989 0172 BFD1     		bne	.L70
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 990              		.loc 1 898 0
 991 0174 4FF08052 		mov	r2, #268435456
 992 0178 064B     		ldr	r3, .L94
 993 017a 1A60     		str	r2, [r3]
 994              		.syntax unified
 995              	@ 898 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 996 017c BFF34F8F 		dsb
 997              	@ 0 "" 2
 998              	@ 898 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 999 0180 BFF36F8F 		isb
 1000              	@ 0 "" 2
 1001              		.thumb
 1002              		.syntax unified
 1003 0184 B6E7     		b	.L70
 1004              	.L81:
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1005              		.loc 1 911 0
 1006 0186 2046     		mov	r0, r4
 1007 0188 FFF7FEFF 		bl	prvUnlockQueue
 1008              	.LVL114:
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1009              		.loc 1 912 0
 1010 018c FFF7FEFF 		bl	xTaskResumeAll
 1011              	.LVL115:
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1012              		.loc 1 915 0
 1013 0190 0020     		movs	r0, #0
 1014 0192 99E7     		b	.L60
 1015              	.L95:
 1016              		.align	2
 1017              	.L94:
 1018 0194 04ED00E0 		.word	-536810236
 1019              		.cfi_endproc
 1020              	.LFE10:
 1022              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1023              		.align	1
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
 1027              		.fpu fpv5-sp-d16
 1029              	prvInitialiseMutex:
 1030              	.LFB8:
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1031              		.loc 1 477 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 60


 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035              	.LVL116:
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1036              		.loc 1 478 0
 1037 0000 48B1     		cbz	r0, .L99
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1038              		.loc 1 477 0
 1039 0002 08B5     		push	{r3, lr}
 1040              	.LCFI15:
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 3, -8
 1043              		.cfi_offset 14, -4
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1044              		.loc 1 484 0
 1045 0004 0021     		movs	r1, #0
 1046 0006 4160     		str	r1, [r0, #4]
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1047              		.loc 1 485 0
 1048 0008 0160     		str	r1, [r0]
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1049              		.loc 1 488 0
 1050 000a C160     		str	r1, [r0, #12]
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1051              		.loc 1 493 0
 1052 000c 0B46     		mov	r3, r1
 1053 000e 0A46     		mov	r2, r1
 1054 0010 FFF7FEFF 		bl	xQueueGenericSend
 1055              	.LVL117:
 1056 0014 08BD     		pop	{r3, pc}
 1057              	.LVL118:
 1058              	.L99:
 1059              	.LCFI16:
 1060              		.cfi_def_cfa_offset 0
 1061              		.cfi_restore 3
 1062              		.cfi_restore 14
 1063 0016 7047     		bx	lr
 1064              		.cfi_endproc
 1065              	.LFE8:
 1067              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1068              		.align	1
 1069              		.global	xQueueCreateMutex
 1070              		.syntax unified
 1071              		.thumb
 1072              		.thumb_func
 1073              		.fpu fpv5-sp-d16
 1075              	xQueueCreateMutex:
 1076              	.LFB9:
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1077              		.loc 1 507 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081              	.LVL119:
 1082 0000 10B5     		push	{r4, lr}
 1083              	.LCFI17:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 61


 1084              		.cfi_def_cfa_offset 8
 1085              		.cfi_offset 4, -8
 1086              		.cfi_offset 14, -4
 1087              	.LVL120:
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1088              		.loc 1 511 0
 1089 0002 0246     		mov	r2, r0
 1090 0004 0021     		movs	r1, #0
 1091 0006 0120     		movs	r0, #1
 1092              	.LVL121:
 1093 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1094              	.LVL122:
 1095 000c 0446     		mov	r4, r0
 1096              	.LVL123:
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1097              		.loc 1 512 0
 1098 000e FFF7FEFF 		bl	prvInitialiseMutex
 1099              	.LVL124:
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1100              		.loc 1 515 0
 1101 0012 2046     		mov	r0, r4
 1102 0014 10BD     		pop	{r4, pc}
 1103              		.cfi_endproc
 1104              	.LFE9:
 1106              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1107              		.align	1
 1108              		.global	xQueueGenericSendFromISR
 1109              		.syntax unified
 1110              		.thumb
 1111              		.thumb_func
 1112              		.fpu fpv5-sp-d16
 1114              	xQueueGenericSendFromISR:
 1115              	.LFB11:
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1116              		.loc 1 922 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              	.LVL125:
 1121 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1122              	.LCFI18:
 1123              		.cfi_def_cfa_offset 32
 1124              		.cfi_offset 3, -32
 1125              		.cfi_offset 4, -28
 1126              		.cfi_offset 5, -24
 1127              		.cfi_offset 6, -20
 1128              		.cfi_offset 7, -16
 1129              		.cfi_offset 8, -12
 1130              		.cfi_offset 9, -8
 1131              		.cfi_offset 14, -4
 1132              	.LVL126:
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1133              		.loc 1 927 0
 1134 0004 70B1     		cbz	r0, .L124
 1135 0006 0446     		mov	r4, r0
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1136              		.loc 1 928 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 62


 1137 0008 B9B1     		cbz	r1, .L125
 1138 000a 0120     		movs	r0, #1
 1139              	.LVL127:
 1140              	.L107:
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1141              		.loc 1 928 0 is_stmt 0 discriminator 6
 1142 000c D8B9     		cbnz	r0, .L108
 1143              	.LBB90:
 1144              	.LBB91:
 1145              		.loc 2 237 0 is_stmt 1
 1146              		.syntax unified
 1147              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1148 000e 4FF05003 			mov r3, #80												
 1149 0012 72B6     		cpsid i													
 1150 0014 83F31188 		msr basepri, r3											
 1151 0018 BFF36F8F 		isb														
 1152 001c BFF34F8F 		dsb														
 1153 0020 62B6     		cpsie i													
 1154              	
 1155              	@ 0 "" 2
 1156              	.LVL128:
 1157              		.thumb
 1158              		.syntax unified
 1159              	.L109:
 1160 0022 FEE7     		b	.L109
 1161              	.LVL129:
 1162              	.L124:
 1163              	.LBE91:
 1164              	.LBE90:
 1165              	.LBB92:
 1166              	.LBB93:
 1167              		.syntax unified
 1168              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1169 0024 4FF05003 			mov r3, #80												
 1170 0028 72B6     		cpsid i													
 1171 002a 83F31188 		msr basepri, r3											
 1172 002e BFF36F8F 		isb														
 1173 0032 BFF34F8F 		dsb														
 1174 0036 62B6     		cpsie i													
 1175              	
 1176              	@ 0 "" 2
 1177              	.LVL130:
 1178              		.thumb
 1179              		.syntax unified
 1180              	.L106:
 1181 0038 FEE7     		b	.L106
 1182              	.LVL131:
 1183              	.L125:
 1184              	.LBE93:
 1185              	.LBE92:
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1186              		.loc 1 928 0 discriminator 2
 1187 003a 006C     		ldr	r0, [r0, #64]
 1188              	.LVL132:
 1189 003c 08B9     		cbnz	r0, .L117
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1190              		.loc 1 928 0 is_stmt 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 63


 1191 003e 0120     		movs	r0, #1
 1192 0040 E4E7     		b	.L107
 1193              	.L117:
 1194 0042 0020     		movs	r0, #0
 1195 0044 E2E7     		b	.L107
 1196              	.L108:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1197              		.loc 1 929 0 is_stmt 1
 1198 0046 022B     		cmp	r3, #2
 1199 0048 0BD0     		beq	.L126
 1200              	.L110:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1201              		.loc 1 929 0 is_stmt 0 discriminator 6
 1202 004a 78B9     		cbnz	r0, .L111
 1203              	.LBB94:
 1204              	.LBB95:
 1205              		.loc 2 237 0 is_stmt 1
 1206              		.syntax unified
 1207              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1208 004c 4FF05003 			mov r3, #80												
 1209 0050 72B6     		cpsid i													
 1210 0052 83F31188 		msr basepri, r3											
 1211 0056 BFF36F8F 		isb														
 1212 005a BFF34F8F 		dsb														
 1213 005e 62B6     		cpsie i													
 1214              	
 1215              	@ 0 "" 2
 1216              	.LVL133:
 1217              		.thumb
 1218              		.syntax unified
 1219              	.L112:
 1220 0060 FEE7     		b	.L112
 1221              	.LVL134:
 1222              	.L126:
 1223              	.LBE95:
 1224              	.LBE94:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1225              		.loc 1 929 0 discriminator 2
 1226 0062 E56B     		ldr	r5, [r4, #60]
 1227 0064 012D     		cmp	r5, #1
 1228 0066 F0D0     		beq	.L110
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1229              		.loc 1 929 0 is_stmt 0
 1230 0068 0020     		movs	r0, #0
 1231 006a EEE7     		b	.L110
 1232              	.L111:
 1233 006c 1F46     		mov	r7, r3
 1234 006e 9046     		mov	r8, r2
 1235 0070 8946     		mov	r9, r1
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1236              		.loc 1 945 0 is_stmt 1
 1237 0072 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1238              	.LVL135:
 1239              	.LBB96:
 1240              	.LBB97:
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mov %0, %1												\n"	\
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 64


 240:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsid i													\n" \
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %0											\n" \
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	isb														\n" \
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	dsb														\n" \
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsie i													\n" \
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 1241              		.loc 2 255 0
 1242              		.syntax unified
 1243              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1244 0076 EFF31186 			mrs r6, basepri											
 1245 007a 4FF05003 		mov r3, #80												
 1246 007e 72B6     		cpsid i													
 1247 0080 83F31188 		msr basepri, r3											
 1248 0084 BFF36F8F 		isb														
 1249 0088 BFF34F8F 		dsb														
 1250 008c 62B6     		cpsie i													
 1251              	
 1252              	@ 0 "" 2
 1253              		.thumb
 1254              		.syntax unified
 1255              	.LBE97:
 1256              	.LBE96:
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1257              		.loc 1 954 0
 1258 008e A26B     		ldr	r2, [r4, #56]
 1259 0090 E36B     		ldr	r3, [r4, #60]
 1260 0092 9A42     		cmp	r2, r3
 1261 0094 01D3     		bcc	.L113
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1262              		.loc 1 954 0 is_stmt 0 discriminator 1
 1263 0096 022F     		cmp	r7, #2
 1264 0098 21D1     		bne	.L119
 1265              	.L113:
 1266              	.LBB98:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1267              		.loc 1 956 0 is_stmt 1
 1268 009a 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1269 009e 6DB2     		sxtb	r5, r5
 1270              	.LVL136:
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1271              		.loc 1 965 0
 1272 00a0 3A46     		mov	r2, r7
 1273 00a2 4946     		mov	r1, r9
 1274 00a4 2046     		mov	r0, r4
 1275 00a6 FFF7FEFF 		bl	prvCopyDataToQueue
 1276              	.LVL137:
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 65


 1277              		.loc 1 969 0
 1278 00aa B5F1FF3F 		cmp	r5, #-1
 1279 00ae 10D1     		bne	.L115
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1280              		.loc 1 1024 0
 1281 00b0 636A     		ldr	r3, [r4, #36]
 1282 00b2 B3B1     		cbz	r3, .L120
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1283              		.loc 1 1026 0
 1284 00b4 04F12400 		add	r0, r4, #36
 1285 00b8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1286              	.LVL138:
 1287 00bc 98B1     		cbz	r0, .L121
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1288              		.loc 1 1030 0
 1289 00be B8F1000F 		cmp	r8, #0
 1290 00c2 12D0     		beq	.L122
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1291              		.loc 1 1032 0
 1292 00c4 0120     		movs	r0, #1
 1293 00c6 C8F80000 		str	r0, [r8]
 1294              	.LVL139:
 1295              	.L114:
 1296              	.LBE98:
 1297              	.LBB99:
 1298              	.LBB100:
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mrs %0, basepri											\n" \
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mov %1, %2												\n"	\
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsid i													\n" \
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %1											\n" \
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	isb														\n" \
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	dsb														\n" \
 263:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsie i													\n" \
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 266:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	warnings. */
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	return ulOriginalBASEPRI;
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 272:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 273:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 274:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 275:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 1299              		.loc 2 275 0
 1300              		.syntax unified
 1301              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1302 00ca 86F31188 			msr basepri, r6	
 1303              	@ 0 "" 2
 1304              	.LVL140:
 1305              		.thumb
 1306              		.syntax unified
 1307              	.LBE100:
 1308              	.LBE99:
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 66


 1309              		.loc 1 1069 0
 1310 00ce BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1311              	.LVL141:
 1312              	.L115:
 1313              	.LBB101:
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1314              		.loc 1 1055 0
 1315 00d2 6B1C     		adds	r3, r5, #1
 1316 00d4 5BB2     		sxtb	r3, r3
 1317 00d6 84F84530 		strb	r3, [r4, #69]
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1318              		.loc 1 1058 0
 1319 00da 0120     		movs	r0, #1
 1320 00dc F5E7     		b	.L114
 1321              	.LVL142:
 1322              	.L119:
 1323              	.LBE101:
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1324              		.loc 1 1063 0
 1325 00de 0020     		movs	r0, #0
 1326 00e0 F3E7     		b	.L114
 1327              	.LVL143:
 1328              	.L120:
 1329              	.LBB102:
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1330              		.loc 1 1058 0
 1331 00e2 0120     		movs	r0, #1
 1332 00e4 F1E7     		b	.L114
 1333              	.L121:
 1334 00e6 0120     		movs	r0, #1
 1335 00e8 EFE7     		b	.L114
 1336              	.L122:
 1337 00ea 0120     		movs	r0, #1
 1338 00ec EDE7     		b	.L114
 1339              	.LBE102:
 1340              		.cfi_endproc
 1341              	.LFE11:
 1343              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1344              		.align	1
 1345              		.global	xQueueGiveFromISR
 1346              		.syntax unified
 1347              		.thumb
 1348              		.thumb_func
 1349              		.fpu fpv5-sp-d16
 1351              	xQueueGiveFromISR:
 1352              	.LFB12:
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1353              		.loc 1 1073 0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 0, uses_anonymous_args = 0
 1357              	.LVL144:
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1358              		.loc 1 1084 0
 1359 0000 70B1     		cbz	r0, .L145
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1360              		.loc 1 1073 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 67


 1361 0002 70B5     		push	{r4, r5, r6, lr}
 1362              	.LCFI19:
 1363              		.cfi_def_cfa_offset 16
 1364              		.cfi_offset 4, -16
 1365              		.cfi_offset 5, -12
 1366              		.cfi_offset 6, -8
 1367              		.cfi_offset 14, -4
 1368 0004 0446     		mov	r4, r0
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1369              		.loc 1 1088 0
 1370 0006 036C     		ldr	r3, [r0, #64]
 1371 0008 ABB1     		cbz	r3, .L130
 1372              	.LBB103:
 1373              	.LBB104:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1374              		.loc 2 237 0
 1375              		.syntax unified
 1376              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1377 000a 4FF05003 			mov r3, #80												
 1378 000e 72B6     		cpsid i													
 1379 0010 83F31188 		msr basepri, r3											
 1380 0014 BFF36F8F 		isb														
 1381 0018 BFF34F8F 		dsb														
 1382 001c 62B6     		cpsie i													
 1383              	
 1384              	@ 0 "" 2
 1385              	.LVL145:
 1386              		.thumb
 1387              		.syntax unified
 1388              	.L131:
 1389 001e FEE7     		b	.L131
 1390              	.L145:
 1391              	.LCFI20:
 1392              		.cfi_def_cfa_offset 0
 1393              		.cfi_restore 4
 1394              		.cfi_restore 5
 1395              		.cfi_restore 6
 1396              		.cfi_restore 14
 1397              	.LBE104:
 1398              	.LBE103:
 1399              	.LBB105:
 1400              	.LBB106:
 1401              		.syntax unified
 1402              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1403 0020 4FF05003 			mov r3, #80												
 1404 0024 72B6     		cpsid i													
 1405 0026 83F31188 		msr basepri, r3											
 1406 002a BFF36F8F 		isb														
 1407 002e BFF34F8F 		dsb														
 1408 0032 62B6     		cpsie i													
 1409              	
 1410              	@ 0 "" 2
 1411              	.LVL146:
 1412              		.thumb
 1413              		.syntax unified
 1414              	.L129:
 1415 0034 FEE7     		b	.L129
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 68


 1416              	.L130:
 1417              	.LCFI21:
 1418              		.cfi_def_cfa_offset 16
 1419              		.cfi_offset 4, -16
 1420              		.cfi_offset 5, -12
 1421              		.cfi_offset 6, -8
 1422              		.cfi_offset 14, -4
 1423              	.LBE106:
 1424              	.LBE105:
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1425              		.loc 1 1093 0
 1426 0036 0368     		ldr	r3, [r0]
 1427 0038 63B1     		cbz	r3, .L146
 1428 003a 0123     		movs	r3, #1
 1429              	.L132:
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1430              		.loc 1 1093 0 is_stmt 0 discriminator 6
 1431 003c 83B9     		cbnz	r3, .L133
 1432              	.LBB107:
 1433              	.LBB108:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1434              		.loc 2 237 0 is_stmt 1
 1435              		.syntax unified
 1436              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1437 003e 4FF05003 			mov r3, #80												
 1438 0042 72B6     		cpsid i													
 1439 0044 83F31188 		msr basepri, r3											
 1440 0048 BFF36F8F 		isb														
 1441 004c BFF34F8F 		dsb														
 1442 0050 62B6     		cpsie i													
 1443              	
 1444              	@ 0 "" 2
 1445              	.LVL147:
 1446              		.thumb
 1447              		.syntax unified
 1448              	.L134:
 1449 0052 FEE7     		b	.L134
 1450              	.L146:
 1451              	.LBE108:
 1452              	.LBE107:
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1453              		.loc 1 1093 0 discriminator 2
 1454 0054 4368     		ldr	r3, [r0, #4]
 1455 0056 0BB9     		cbnz	r3, .L138
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1456              		.loc 1 1093 0 is_stmt 0
 1457 0058 0123     		movs	r3, #1
 1458 005a EFE7     		b	.L132
 1459              	.L138:
 1460 005c 0023     		movs	r3, #0
 1461 005e EDE7     		b	.L132
 1462              	.L133:
 1463 0060 0E46     		mov	r6, r1
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1464              		.loc 1 1109 0 is_stmt 1
 1465 0062 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1466              	.LVL148:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 69


 1467              	.LBB109:
 1468              	.LBB110:
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1469              		.loc 2 255 0
 1470              		.syntax unified
 1471              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1472 0066 EFF31185 			mrs r5, basepri											
 1473 006a 4FF05003 		mov r3, #80												
 1474 006e 72B6     		cpsid i													
 1475 0070 83F31188 		msr basepri, r3											
 1476 0074 BFF36F8F 		isb														
 1477 0078 BFF34F8F 		dsb														
 1478 007c 62B6     		cpsie i													
 1479              	
 1480              	@ 0 "" 2
 1481              		.thumb
 1482              		.syntax unified
 1483              	.LBE110:
 1484              	.LBE109:
 1485              	.LBB111:
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1486              		.loc 1 1113 0
 1487 007e A26B     		ldr	r2, [r4, #56]
 1488              	.LVL149:
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1489              		.loc 1 1118 0
 1490 0080 E36B     		ldr	r3, [r4, #60]
 1491 0082 9A42     		cmp	r2, r3
 1492 0084 1AD2     		bcs	.L139
 1493              	.LBB112:
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1494              		.loc 1 1120 0
 1495 0086 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1496 008a 5BB2     		sxtb	r3, r3
 1497              	.LVL150:
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1498              		.loc 1 1130 0
 1499 008c 0132     		adds	r2, r2, #1
 1500              	.LVL151:
 1501 008e A263     		str	r2, [r4, #56]
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1502              		.loc 1 1134 0
 1503 0090 B3F1FF3F 		cmp	r3, #-1
 1504 0094 0CD1     		bne	.L136
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1505              		.loc 1 1189 0
 1506 0096 636A     		ldr	r3, [r4, #36]
 1507              	.LVL152:
 1508 0098 93B1     		cbz	r3, .L140
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1509              		.loc 1 1191 0
 1510 009a 04F12400 		add	r0, r4, #36
 1511 009e FFF7FEFF 		bl	xTaskRemoveFromEventList
 1512              	.LVL153:
 1513 00a2 78B1     		cbz	r0, .L141
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1514              		.loc 1 1195 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 70


 1515 00a4 86B1     		cbz	r6, .L142
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1516              		.loc 1 1197 0
 1517 00a6 0120     		movs	r0, #1
 1518 00a8 3060     		str	r0, [r6]
 1519              	.L135:
 1520              	.LVL154:
 1521              	.LBE112:
 1522              	.LBE111:
 1523              	.LBB115:
 1524              	.LBB116:
 1525              		.loc 2 275 0
 1526              		.syntax unified
 1527              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1528 00aa 85F31188 			msr basepri, r5	
 1529              	@ 0 "" 2
 1530              	.LVL155:
 1531              		.thumb
 1532              		.syntax unified
 1533              	.LBE116:
 1534              	.LBE115:
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1535              		.loc 1 1234 0
 1536 00ae 70BD     		pop	{r4, r5, r6, pc}
 1537              	.LVL156:
 1538              	.L136:
 1539              	.LBB117:
 1540              	.LBB113:
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1541              		.loc 1 1220 0
 1542 00b0 0133     		adds	r3, r3, #1
 1543              	.LVL157:
 1544 00b2 5BB2     		sxtb	r3, r3
 1545              	.LVL158:
 1546 00b4 84F84530 		strb	r3, [r4, #69]
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1547              		.loc 1 1223 0
 1548 00b8 0120     		movs	r0, #1
 1549 00ba F6E7     		b	.L135
 1550              	.LVL159:
 1551              	.L139:
 1552              	.LBE113:
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1553              		.loc 1 1228 0
 1554 00bc 0020     		movs	r0, #0
 1555 00be F4E7     		b	.L135
 1556              	.LVL160:
 1557              	.L140:
 1558              	.LBB114:
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1559              		.loc 1 1223 0
 1560 00c0 0120     		movs	r0, #1
 1561 00c2 F2E7     		b	.L135
 1562              	.LVL161:
 1563              	.L141:
 1564 00c4 0120     		movs	r0, #1
 1565 00c6 F0E7     		b	.L135
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 71


 1566              	.L142:
 1567 00c8 0120     		movs	r0, #1
 1568 00ca EEE7     		b	.L135
 1569              	.LBE114:
 1570              	.LBE117:
 1571              		.cfi_endproc
 1572              	.LFE12:
 1574              		.section	.text.xQueueGenericReceive,"ax",%progbits
 1575              		.align	1
 1576              		.global	xQueueGenericReceive
 1577              		.syntax unified
 1578              		.thumb
 1579              		.thumb_func
 1580              		.fpu fpv5-sp-d16
 1582              	xQueueGenericReceive:
 1583              	.LFB13:
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1584              		.loc 1 1238 0
 1585              		.cfi_startproc
 1586              		@ args = 0, pretend = 0, frame = 16
 1587              		@ frame_needed = 0, uses_anonymous_args = 0
 1588              	.LVL162:
 1589 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1590              	.LCFI22:
 1591              		.cfi_def_cfa_offset 24
 1592              		.cfi_offset 4, -24
 1593              		.cfi_offset 5, -20
 1594              		.cfi_offset 6, -16
 1595              		.cfi_offset 7, -12
 1596              		.cfi_offset 8, -8
 1597              		.cfi_offset 14, -4
 1598 0004 84B0     		sub	sp, sp, #16
 1599              	.LCFI23:
 1600              		.cfi_def_cfa_offset 40
 1601 0006 0192     		str	r2, [sp, #4]
 1602              	.LVL163:
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1603              		.loc 1 1244 0
 1604 0008 70B1     		cbz	r0, .L174
 1605 000a 0446     		mov	r4, r0
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1606              		.loc 1 1245 0
 1607 000c B9B1     		cbz	r1, .L175
 1608 000e 0125     		movs	r5, #1
 1609              	.LVL164:
 1610              	.L150:
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1611              		.loc 1 1245 0 is_stmt 0 discriminator 6
 1612 0010 DDB9     		cbnz	r5, .L151
 1613              	.LBB118:
 1614              	.LBB119:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1615              		.loc 2 237 0 is_stmt 1
 1616              		.syntax unified
 1617              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1618 0012 4FF05003 			mov r3, #80												
 1619 0016 72B6     		cpsid i													
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 72


 1620 0018 83F31188 		msr basepri, r3											
 1621 001c BFF36F8F 		isb														
 1622 0020 BFF34F8F 		dsb														
 1623 0024 62B6     		cpsie i													
 1624              	
 1625              	@ 0 "" 2
 1626              	.LVL165:
 1627              		.thumb
 1628              		.syntax unified
 1629              	.L152:
 1630 0026 FEE7     		b	.L152
 1631              	.LVL166:
 1632              	.L174:
 1633              	.LBE119:
 1634              	.LBE118:
 1635              	.LBB120:
 1636              	.LBB121:
 1637              		.syntax unified
 1638              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1639 0028 4FF05003 			mov r3, #80												
 1640 002c 72B6     		cpsid i													
 1641 002e 83F31188 		msr basepri, r3											
 1642 0032 BFF36F8F 		isb														
 1643 0036 BFF34F8F 		dsb														
 1644 003a 62B6     		cpsie i													
 1645              	
 1646              	@ 0 "" 2
 1647              	.LVL167:
 1648              		.thumb
 1649              		.syntax unified
 1650              	.L149:
 1651 003c FEE7     		b	.L149
 1652              	.LVL168:
 1653              	.L175:
 1654              	.LBE121:
 1655              	.LBE120:
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1656              		.loc 1 1245 0 discriminator 2
 1657 003e 026C     		ldr	r2, [r0, #64]
 1658              	.LVL169:
 1659 0040 0AB9     		cbnz	r2, .L170
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1660              		.loc 1 1245 0 is_stmt 0
 1661 0042 0125     		movs	r5, #1
 1662 0044 E4E7     		b	.L150
 1663              	.L170:
 1664 0046 0025     		movs	r5, #0
 1665 0048 E2E7     		b	.L150
 1666              	.L151:
 1667 004a 1F46     		mov	r7, r3
 1668 004c 8846     		mov	r8, r1
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1669              		.loc 1 1248 0 is_stmt 1
 1670 004e FFF7FEFF 		bl	xTaskGetSchedulerState
 1671              	.LVL170:
 1672 0052 10B9     		cbnz	r0, .L153
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 73


 1673              		.loc 1 1248 0 is_stmt 0 discriminator 2
 1674 0054 019B     		ldr	r3, [sp, #4]
 1675 0056 03B1     		cbz	r3, .L153
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1676              		.loc 1 1248 0
 1677 0058 0025     		movs	r5, #0
 1678              	.L153:
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1679              		.loc 1 1248 0 discriminator 6
 1680 005a 55B9     		cbnz	r5, .L172
 1681              	.LBB122:
 1682              	.LBB123:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 1683              		.loc 2 237 0 is_stmt 1
 1684              		.syntax unified
 1685              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 1686 005c 4FF05003 			mov r3, #80												
 1687 0060 72B6     		cpsid i													
 1688 0062 83F31188 		msr basepri, r3											
 1689 0066 BFF36F8F 		isb														
 1690 006a BFF34F8F 		dsb														
 1691 006e 62B6     		cpsie i													
 1692              	
 1693              	@ 0 "" 2
 1694              	.LVL171:
 1695              		.thumb
 1696              		.syntax unified
 1697              	.L155:
 1698 0070 FEE7     		b	.L155
 1699              	.L172:
 1700              	.LBE123:
 1701              	.LBE122:
 1702 0072 0026     		movs	r6, #0
 1703 0074 5DE0     		b	.L154
 1704              	.LVL172:
 1705              	.L177:
 1706              	.LBB124:
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1707              		.loc 1 1268 0
 1708 0076 E668     		ldr	r6, [r4, #12]
 1709              	.LVL173:
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1710              		.loc 1 1270 0
 1711 0078 4146     		mov	r1, r8
 1712 007a 2046     		mov	r0, r4
 1713 007c FFF7FEFF 		bl	prvCopyDataFromQueue
 1714              	.LVL174:
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1715              		.loc 1 1272 0
 1716 0080 DFB9     		cbnz	r7, .L157
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1717              		.loc 1 1277 0
 1718 0082 013D     		subs	r5, r5, #1
 1719              	.LVL175:
 1720 0084 A563     		str	r5, [r4, #56]
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1721              		.loc 1 1281 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 74


 1722 0086 2368     		ldr	r3, [r4]
 1723 0088 13B9     		cbnz	r3, .L158
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1724              		.loc 1 1285 0
 1725 008a FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 1726              	.LVL176:
 1727 008e 6060     		str	r0, [r4, #4]
 1728              	.L158:
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1729              		.loc 1 1294 0
 1730 0090 2369     		ldr	r3, [r4, #16]
 1731 0092 63B1     		cbz	r3, .L159
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1732              		.loc 1 1296 0
 1733 0094 04F11000 		add	r0, r4, #16
 1734 0098 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1735              	.LVL177:
 1736 009c 38B1     		cbz	r0, .L159
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1737              		.loc 1 1298 0
 1738 009e 4FF08052 		mov	r2, #268435456
 1739 00a2 454B     		ldr	r3, .L183
 1740 00a4 1A60     		str	r2, [r3]
 1741              		.syntax unified
 1742              	@ 1298 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1743 00a6 BFF34F8F 		dsb
 1744              	@ 0 "" 2
 1745              	@ 1298 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1746 00aa BFF36F8F 		isb
 1747              	@ 0 "" 2
 1748              	.LVL178:
 1749              		.thumb
 1750              		.syntax unified
 1751              	.L159:
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1752              		.loc 1 1338 0
 1753 00ae FFF7FEFF 		bl	vPortExitCritical
 1754              	.LVL179:
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1755              		.loc 1 1339 0
 1756 00b2 0120     		movs	r0, #1
 1757              	.LVL180:
 1758              	.L147:
 1759              	.LBE124:
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1760              		.loc 1 1431 0
 1761 00b4 04B0     		add	sp, sp, #16
 1762              	.LCFI24:
 1763              		.cfi_remember_state
 1764              		.cfi_def_cfa_offset 24
 1765              		@ sp needed
 1766 00b6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1767              	.LVL181:
 1768              	.L157:
 1769              	.LCFI25:
 1770              		.cfi_restore_state
 1771              	.LBB125:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 75


1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1772              		.loc 1 1316 0
 1773 00ba E660     		str	r6, [r4, #12]
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1774              		.loc 1 1320 0
 1775 00bc 636A     		ldr	r3, [r4, #36]
 1776 00be 002B     		cmp	r3, #0
 1777 00c0 F5D0     		beq	.L159
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1778              		.loc 1 1322 0
 1779 00c2 04F12400 		add	r0, r4, #36
 1780 00c6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1781              	.LVL182:
 1782 00ca 0028     		cmp	r0, #0
 1783 00cc EFD0     		beq	.L159
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1784              		.loc 1 1325 0
 1785 00ce 4FF08052 		mov	r2, #268435456
 1786 00d2 394B     		ldr	r3, .L183
 1787 00d4 1A60     		str	r2, [r3]
 1788              		.syntax unified
 1789              	@ 1325 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1790 00d6 BFF34F8F 		dsb
 1791              	@ 0 "" 2
 1792              	@ 1325 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1793 00da BFF36F8F 		isb
 1794              	@ 0 "" 2
 1795              		.thumb
 1796              		.syntax unified
 1797 00de E6E7     		b	.L159
 1798              	.LVL183:
 1799              	.L178:
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1800              		.loc 1 1347 0
 1801 00e0 FFF7FEFF 		bl	vPortExitCritical
 1802              	.LVL184:
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1803              		.loc 1 1349 0
 1804 00e4 0020     		movs	r0, #0
 1805 00e6 E5E7     		b	.L147
 1806              	.L179:
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1807              		.loc 1 1355 0
 1808 00e8 02A8     		add	r0, sp, #8
 1809 00ea FFF7FEFF 		bl	vTaskSetTimeOutState
 1810              	.LVL185:
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1811              		.loc 1 1356 0
 1812 00ee 0126     		movs	r6, #1
 1813 00f0 29E0     		b	.L162
 1814              	.LVL186:
 1815              	.L180:
 1816              	.LBE125:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1817              		.loc 1 1371 0 discriminator 1
 1818 00f2 0023     		movs	r3, #0
 1819 00f4 84F84430 		strb	r3, [r4, #68]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 76


 1820 00f8 31E0     		b	.L163
 1821              	.L181:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1822              		.loc 1 1371 0 is_stmt 0 discriminator 4
 1823 00fa 0023     		movs	r3, #0
 1824 00fc 84F84530 		strb	r3, [r4, #69]
 1825 0100 33E0     		b	.L164
 1826              	.L182:
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1827              		.loc 1 1384 0 is_stmt 1
 1828 0102 FFF7FEFF 		bl	vPortEnterCritical
 1829              	.LVL187:
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1830              		.loc 1 1386 0
 1831 0106 6068     		ldr	r0, [r4, #4]
 1832 0108 FFF7FEFF 		bl	vTaskPriorityInherit
 1833              	.LVL188:
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1834              		.loc 1 1388 0
 1835 010c FFF7FEFF 		bl	vPortExitCritical
 1836              	.LVL189:
 1837 0110 3BE0     		b	.L167
 1838              	.L166:
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1839              		.loc 1 1411 0
 1840 0112 2046     		mov	r0, r4
 1841 0114 FFF7FEFF 		bl	prvUnlockQueue
 1842              	.LVL190:
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1843              		.loc 1 1412 0
 1844 0118 FFF7FEFF 		bl	xTaskResumeAll
 1845              	.LVL191:
 1846 011c 09E0     		b	.L154
 1847              	.L165:
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1848              		.loc 1 1417 0
 1849 011e 2046     		mov	r0, r4
 1850 0120 FFF7FEFF 		bl	prvUnlockQueue
 1851              	.LVL192:
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1852              		.loc 1 1418 0
 1853 0124 FFF7FEFF 		bl	xTaskResumeAll
 1854              	.LVL193:
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1855              		.loc 1 1420 0
 1856 0128 2046     		mov	r0, r4
 1857 012a FFF7FEFF 		bl	prvIsQueueEmpty
 1858              	.LVL194:
 1859 012e 0028     		cmp	r0, #0
 1860 0130 40D1     		bne	.L176
 1861              	.LVL195:
 1862              	.L154:
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1863              		.loc 1 1258 0
 1864 0132 FFF7FEFF 		bl	vPortEnterCritical
 1865              	.LVL196:
 1866              	.LBB126:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 77


1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1867              		.loc 1 1260 0
 1868 0136 A56B     		ldr	r5, [r4, #56]
 1869              	.LVL197:
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1870              		.loc 1 1264 0
 1871 0138 002D     		cmp	r5, #0
 1872 013a 9CD1     		bne	.L177
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1873              		.loc 1 1343 0
 1874 013c 019B     		ldr	r3, [sp, #4]
 1875 013e 002B     		cmp	r3, #0
 1876 0140 CED0     		beq	.L178
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1877              		.loc 1 1351 0
 1878 0142 002E     		cmp	r6, #0
 1879 0144 D0D0     		beq	.L179
 1880              	.LVL198:
 1881              	.L162:
 1882              	.LBE126:
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1883              		.loc 1 1365 0
 1884 0146 FFF7FEFF 		bl	vPortExitCritical
 1885              	.LVL199:
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1886              		.loc 1 1370 0
 1887 014a FFF7FEFF 		bl	vTaskSuspendAll
 1888              	.LVL200:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1889              		.loc 1 1371 0
 1890 014e FFF7FEFF 		bl	vPortEnterCritical
 1891              	.LVL201:
 1892 0152 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1893 0156 5BB2     		sxtb	r3, r3
 1894 0158 B3F1FF3F 		cmp	r3, #-1
 1895 015c C9D0     		beq	.L180
 1896              	.L163:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1897              		.loc 1 1371 0 is_stmt 0 discriminator 3
 1898 015e 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1899 0162 5BB2     		sxtb	r3, r3
 1900 0164 B3F1FF3F 		cmp	r3, #-1
 1901 0168 C7D0     		beq	.L181
 1902              	.L164:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1903              		.loc 1 1371 0 discriminator 6
 1904 016a FFF7FEFF 		bl	vPortExitCritical
 1905              	.LVL202:
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1906              		.loc 1 1374 0 is_stmt 1 discriminator 6
 1907 016e 01A9     		add	r1, sp, #4
 1908 0170 02A8     		add	r0, sp, #8
 1909 0172 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1910              	.LVL203:
 1911 0176 0028     		cmp	r0, #0
 1912 0178 D1D1     		bne	.L165
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 78


 1913              		.loc 1 1376 0
 1914 017a 2046     		mov	r0, r4
 1915 017c FFF7FEFF 		bl	prvIsQueueEmpty
 1916              	.LVL204:
 1917 0180 0028     		cmp	r0, #0
 1918 0182 C6D0     		beq	.L166
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1919              		.loc 1 1382 0
 1920 0184 2368     		ldr	r3, [r4]
 1921 0186 002B     		cmp	r3, #0
 1922 0188 BBD0     		beq	.L182
 1923              	.L167:
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1924              		.loc 1 1397 0
 1925 018a 0199     		ldr	r1, [sp, #4]
 1926 018c 04F12400 		add	r0, r4, #36
 1927 0190 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1928              	.LVL205:
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1929              		.loc 1 1398 0
 1930 0194 2046     		mov	r0, r4
 1931 0196 FFF7FEFF 		bl	prvUnlockQueue
 1932              	.LVL206:
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1933              		.loc 1 1399 0
 1934 019a FFF7FEFF 		bl	xTaskResumeAll
 1935              	.LVL207:
 1936 019e 0028     		cmp	r0, #0
 1937 01a0 C7D1     		bne	.L154
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1938              		.loc 1 1401 0
 1939 01a2 4FF08052 		mov	r2, #268435456
 1940 01a6 044B     		ldr	r3, .L183
 1941 01a8 1A60     		str	r2, [r3]
 1942              		.syntax unified
 1943              	@ 1401 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1944 01aa BFF34F8F 		dsb
 1945              	@ 0 "" 2
 1946              	@ 1401 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1947 01ae BFF36F8F 		isb
 1948              	@ 0 "" 2
 1949              		.thumb
 1950              		.syntax unified
 1951 01b2 BEE7     		b	.L154
 1952              	.L176:
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1953              		.loc 1 1423 0
 1954 01b4 0020     		movs	r0, #0
 1955 01b6 7DE7     		b	.L147
 1956              	.L184:
 1957              		.align	2
 1958              	.L183:
 1959 01b8 04ED00E0 		.word	-536810236
 1960              		.cfi_endproc
 1961              	.LFE13:
 1963              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1964              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 79


 1965              		.global	xQueueReceiveFromISR
 1966              		.syntax unified
 1967              		.thumb
 1968              		.thumb_func
 1969              		.fpu fpv5-sp-d16
 1971              	xQueueReceiveFromISR:
 1972              	.LFB14:
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1973              		.loc 1 1435 0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 0
 1976              		@ frame_needed = 0, uses_anonymous_args = 0
 1977              	.LVL208:
 1978 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1979              	.LCFI26:
 1980              		.cfi_def_cfa_offset 32
 1981              		.cfi_offset 3, -32
 1982              		.cfi_offset 4, -28
 1983              		.cfi_offset 5, -24
 1984              		.cfi_offset 6, -20
 1985              		.cfi_offset 7, -16
 1986              		.cfi_offset 8, -12
 1987              		.cfi_offset 9, -8
 1988              		.cfi_offset 14, -4
 1989              	.LVL209:
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1990              		.loc 1 1440 0
 1991 0004 70B1     		cbz	r0, .L200
 1992 0006 0446     		mov	r4, r0
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1993              		.loc 1 1441 0
 1994 0008 B9B1     		cbz	r1, .L201
 1995 000a 0123     		movs	r3, #1
 1996              	.L188:
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1997              		.loc 1 1441 0 is_stmt 0 discriminator 6
 1998 000c DBB9     		cbnz	r3, .L189
 1999              	.LBB127:
 2000              	.LBB128:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2001              		.loc 2 237 0 is_stmt 1
 2002              		.syntax unified
 2003              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2004 000e 4FF05003 			mov r3, #80												
 2005 0012 72B6     		cpsid i													
 2006 0014 83F31188 		msr basepri, r3											
 2007 0018 BFF36F8F 		isb														
 2008 001c BFF34F8F 		dsb														
 2009 0020 62B6     		cpsie i													
 2010              	
 2011              	@ 0 "" 2
 2012              	.LVL210:
 2013              		.thumb
 2014              		.syntax unified
 2015              	.L190:
 2016 0022 FEE7     		b	.L190
 2017              	.L200:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 80


 2018              	.LBE128:
 2019              	.LBE127:
 2020              	.LBB129:
 2021              	.LBB130:
 2022              		.syntax unified
 2023              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2024 0024 4FF05003 			mov r3, #80												
 2025 0028 72B6     		cpsid i													
 2026 002a 83F31188 		msr basepri, r3											
 2027 002e BFF36F8F 		isb														
 2028 0032 BFF34F8F 		dsb														
 2029 0036 62B6     		cpsie i													
 2030              	
 2031              	@ 0 "" 2
 2032              	.LVL211:
 2033              		.thumb
 2034              		.syntax unified
 2035              	.L187:
 2036 0038 FEE7     		b	.L187
 2037              	.L201:
 2038              	.LBE130:
 2039              	.LBE129:
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2040              		.loc 1 1441 0 discriminator 2
 2041 003a 036C     		ldr	r3, [r0, #64]
 2042 003c 0BB9     		cbnz	r3, .L194
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2043              		.loc 1 1441 0 is_stmt 0
 2044 003e 0123     		movs	r3, #1
 2045 0040 E4E7     		b	.L188
 2046              	.L194:
 2047 0042 0023     		movs	r3, #0
 2048 0044 E2E7     		b	.L188
 2049              	.L189:
 2050 0046 1746     		mov	r7, r2
 2051 0048 8946     		mov	r9, r1
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2052              		.loc 1 1457 0 is_stmt 1
 2053 004a FFF7FEFF 		bl	vPortValidateInterruptPriority
 2054              	.LVL212:
 2055              	.LBB131:
 2056              	.LBB132:
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2057              		.loc 2 255 0
 2058              		.syntax unified
 2059              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2060 004e EFF31186 			mrs r6, basepri											
 2061 0052 4FF05003 		mov r3, #80												
 2062 0056 72B6     		cpsid i													
 2063 0058 83F31188 		msr basepri, r3											
 2064 005c BFF36F8F 		isb														
 2065 0060 BFF34F8F 		dsb														
 2066 0064 62B6     		cpsie i													
 2067              	
 2068              	@ 0 "" 2
 2069              		.thumb
 2070              		.syntax unified
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 81


 2071              	.LBE132:
 2072              	.LBE131:
 2073              	.LBB133:
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2074              		.loc 1 1461 0
 2075 0066 D4F83880 		ldr	r8, [r4, #56]
 2076              	.LVL213:
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2077              		.loc 1 1464 0
 2078 006a B8F1000F 		cmp	r8, #0
 2079 006e 20D0     		beq	.L195
 2080              	.LBB134:
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2081              		.loc 1 1466 0
 2082 0070 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 2083 0074 6DB2     		sxtb	r5, r5
 2084              	.LVL214:
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
 2085              		.loc 1 1470 0
 2086 0076 4946     		mov	r1, r9
 2087 0078 2046     		mov	r0, r4
 2088 007a FFF7FEFF 		bl	prvCopyDataFromQueue
 2089              	.LVL215:
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2090              		.loc 1 1471 0
 2091 007e 08F1FF33 		add	r3, r8, #-1
 2092 0082 A363     		str	r3, [r4, #56]
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2093              		.loc 1 1477 0
 2094 0084 B5F1FF3F 		cmp	r5, #-1
 2095 0088 0DD1     		bne	.L192
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2096              		.loc 1 1479 0
 2097 008a 2369     		ldr	r3, [r4, #16]
 2098 008c 9BB1     		cbz	r3, .L196
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2099              		.loc 1 1481 0
 2100 008e 04F11000 		add	r0, r4, #16
 2101 0092 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2102              	.LVL216:
 2103 0096 80B1     		cbz	r0, .L197
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2104              		.loc 1 1485 0
 2105 0098 8FB1     		cbz	r7, .L198
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2106              		.loc 1 1487 0
 2107 009a 0120     		movs	r0, #1
 2108 009c 3860     		str	r0, [r7]
 2109              	.LVL217:
 2110              	.L191:
 2111              	.LBE134:
 2112              	.LBE133:
 2113              	.LBB137:
 2114              	.LBB138:
 2115              		.loc 2 275 0
 2116              		.syntax unified
 2117              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 82


 2118 009e 86F31188 			msr basepri, r6	
 2119              	@ 0 "" 2
 2120              	.LVL218:
 2121              		.thumb
 2122              		.syntax unified
 2123              	.LBE138:
 2124              	.LBE137:
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2125              		.loc 1 1522 0
 2126 00a2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2127              	.LVL219:
 2128              	.L192:
 2129              	.LBB139:
 2130              	.LBB135:
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2131              		.loc 1 1508 0
 2132 00a6 6B1C     		adds	r3, r5, #1
 2133 00a8 5BB2     		sxtb	r3, r3
 2134 00aa 84F84430 		strb	r3, [r4, #68]
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2135              		.loc 1 1511 0
 2136 00ae 0120     		movs	r0, #1
 2137 00b0 F5E7     		b	.L191
 2138              	.LVL220:
 2139              	.L195:
 2140              	.LBE135:
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 2141              		.loc 1 1515 0
 2142 00b2 0020     		movs	r0, #0
 2143 00b4 F3E7     		b	.L191
 2144              	.LVL221:
 2145              	.L196:
 2146              	.LBB136:
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2147              		.loc 1 1511 0
 2148 00b6 0120     		movs	r0, #1
 2149 00b8 F1E7     		b	.L191
 2150              	.L197:
 2151 00ba 0120     		movs	r0, #1
 2152 00bc EFE7     		b	.L191
 2153              	.L198:
 2154 00be 0120     		movs	r0, #1
 2155 00c0 EDE7     		b	.L191
 2156              	.LBE136:
 2157              	.LBE139:
 2158              		.cfi_endproc
 2159              	.LFE14:
 2161              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2162              		.align	1
 2163              		.global	xQueuePeekFromISR
 2164              		.syntax unified
 2165              		.thumb
 2166              		.thumb_func
 2167              		.fpu fpv5-sp-d16
 2169              	xQueuePeekFromISR:
 2170              	.LFB15:
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 83


 2171              		.loc 1 1526 0
 2172              		.cfi_startproc
 2173              		@ args = 0, pretend = 0, frame = 0
 2174              		@ frame_needed = 0, uses_anonymous_args = 0
 2175              	.LVL222:
 2176 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2177              	.LCFI27:
 2178              		.cfi_def_cfa_offset 24
 2179              		.cfi_offset 3, -24
 2180              		.cfi_offset 4, -20
 2181              		.cfi_offset 5, -16
 2182              		.cfi_offset 6, -12
 2183              		.cfi_offset 7, -8
 2184              		.cfi_offset 14, -4
 2185              	.LVL223:
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2186              		.loc 1 1532 0
 2187 0002 70B1     		cbz	r0, .L215
 2188 0004 0446     		mov	r4, r0
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2189              		.loc 1 1533 0
 2190 0006 B9B1     		cbz	r1, .L216
 2191 0008 0123     		movs	r3, #1
 2192              	.L205:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2193              		.loc 1 1533 0 is_stmt 0 discriminator 6
 2194 000a DBB9     		cbnz	r3, .L206
 2195              	.LBB140:
 2196              	.LBB141:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2197              		.loc 2 237 0 is_stmt 1
 2198              		.syntax unified
 2199              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2200 000c 4FF05003 			mov r3, #80												
 2201 0010 72B6     		cpsid i													
 2202 0012 83F31188 		msr basepri, r3											
 2203 0016 BFF36F8F 		isb														
 2204 001a BFF34F8F 		dsb														
 2205 001e 62B6     		cpsie i													
 2206              	
 2207              	@ 0 "" 2
 2208              	.LVL224:
 2209              		.thumb
 2210              		.syntax unified
 2211              	.L207:
 2212 0020 FEE7     		b	.L207
 2213              	.L215:
 2214              	.LBE141:
 2215              	.LBE140:
 2216              	.LBB142:
 2217              	.LBB143:
 2218              		.syntax unified
 2219              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2220 0022 4FF05003 			mov r3, #80												
 2221 0026 72B6     		cpsid i													
 2222 0028 83F31188 		msr basepri, r3											
 2223 002c BFF36F8F 		isb														
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 84


 2224 0030 BFF34F8F 		dsb														
 2225 0034 62B6     		cpsie i													
 2226              	
 2227              	@ 0 "" 2
 2228              	.LVL225:
 2229              		.thumb
 2230              		.syntax unified
 2231              	.L204:
 2232 0036 FEE7     		b	.L204
 2233              	.L216:
 2234              	.LBE143:
 2235              	.LBE142:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2236              		.loc 1 1533 0 discriminator 2
 2237 0038 036C     		ldr	r3, [r0, #64]
 2238 003a 0BB9     		cbnz	r3, .L212
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2239              		.loc 1 1533 0 is_stmt 0
 2240 003c 0123     		movs	r3, #1
 2241 003e E4E7     		b	.L205
 2242              	.L212:
 2243 0040 0023     		movs	r3, #0
 2244 0042 E2E7     		b	.L205
 2245              	.L206:
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2246              		.loc 1 1534 0 is_stmt 1
 2247 0044 236C     		ldr	r3, [r4, #64]
 2248 0046 53B9     		cbnz	r3, .L208
 2249              	.LBB144:
 2250              	.LBB145:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2251              		.loc 2 237 0
 2252              		.syntax unified
 2253              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2254 0048 4FF05003 			mov r3, #80												
 2255 004c 72B6     		cpsid i													
 2256 004e 83F31188 		msr basepri, r3											
 2257 0052 BFF36F8F 		isb														
 2258 0056 BFF34F8F 		dsb														
 2259 005a 62B6     		cpsie i													
 2260              	
 2261              	@ 0 "" 2
 2262              	.LVL226:
 2263              		.thumb
 2264              		.syntax unified
 2265              	.L209:
 2266 005c FEE7     		b	.L209
 2267              	.L208:
 2268 005e 0D46     		mov	r5, r1
 2269              	.LBE145:
 2270              	.LBE144:
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2271              		.loc 1 1550 0
 2272 0060 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2273              	.LVL227:
 2274              	.LBB146:
 2275              	.LBB147:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 85


 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2276              		.loc 2 255 0
 2277              		.syntax unified
 2278              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2279 0064 EFF31186 			mrs r6, basepri											
 2280 0068 4FF05003 		mov r3, #80												
 2281 006c 72B6     		cpsid i													
 2282 006e 83F31188 		msr basepri, r3											
 2283 0072 BFF36F8F 		isb														
 2284 0076 BFF34F8F 		dsb														
 2285 007a 62B6     		cpsie i													
 2286              	
 2287              	@ 0 "" 2
 2288              		.thumb
 2289              		.syntax unified
 2290              	.LBE147:
 2291              	.LBE146:
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2292              		.loc 1 1555 0
 2293 007c A36B     		ldr	r3, [r4, #56]
 2294 007e 4BB1     		cbz	r3, .L213
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2295              		.loc 1 1561 0
 2296 0080 E768     		ldr	r7, [r4, #12]
 2297              	.LVL228:
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 2298              		.loc 1 1562 0
 2299 0082 2946     		mov	r1, r5
 2300 0084 2046     		mov	r0, r4
 2301 0086 FFF7FEFF 		bl	prvCopyDataFromQueue
 2302              	.LVL229:
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2303              		.loc 1 1563 0
 2304 008a E760     		str	r7, [r4, #12]
 2305              	.LVL230:
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2306              		.loc 1 1565 0
 2307 008c 0120     		movs	r0, #1
 2308              	.LVL231:
 2309              	.L210:
 2310              	.LBB148:
 2311              	.LBB149:
 2312              		.loc 2 275 0
 2313              		.syntax unified
 2314              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2315 008e 86F31188 			msr basepri, r6	
 2316              	@ 0 "" 2
 2317              	.LVL232:
 2318              		.thumb
 2319              		.syntax unified
 2320              	.LBE149:
 2321              	.LBE148:
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2322              		.loc 1 1576 0
 2323 0092 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2324              	.LVL233:
 2325              	.L213:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 86


1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 2326              		.loc 1 1569 0
 2327 0094 0020     		movs	r0, #0
 2328 0096 FAE7     		b	.L210
 2329              		.cfi_endproc
 2330              	.LFE15:
 2332              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2333              		.align	1
 2334              		.global	uxQueueMessagesWaiting
 2335              		.syntax unified
 2336              		.thumb
 2337              		.thumb_func
 2338              		.fpu fpv5-sp-d16
 2340              	uxQueueMessagesWaiting:
 2341              	.LFB16:
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2342              		.loc 1 1580 0
 2343              		.cfi_startproc
 2344              		@ args = 0, pretend = 0, frame = 0
 2345              		@ frame_needed = 0, uses_anonymous_args = 0
 2346              	.LVL234:
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2347              		.loc 1 1583 0
 2348 0000 50B9     		cbnz	r0, .L218
 2349              	.LBB150:
 2350              	.LBB151:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2351              		.loc 2 237 0
 2352              		.syntax unified
 2353              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2354 0002 4FF05003 			mov r3, #80												
 2355 0006 72B6     		cpsid i													
 2356 0008 83F31188 		msr basepri, r3											
 2357 000c BFF36F8F 		isb														
 2358 0010 BFF34F8F 		dsb														
 2359 0014 62B6     		cpsie i													
 2360              	
 2361              	@ 0 "" 2
 2362              	.LVL235:
 2363              		.thumb
 2364              		.syntax unified
 2365              	.L219:
 2366 0016 FEE7     		b	.L219
 2367              	.L218:
 2368              	.LBE151:
 2369              	.LBE150:
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2370              		.loc 1 1580 0
 2371 0018 10B5     		push	{r4, lr}
 2372              	.LCFI28:
 2373              		.cfi_def_cfa_offset 8
 2374              		.cfi_offset 4, -8
 2375              		.cfi_offset 14, -4
 2376 001a 0446     		mov	r4, r0
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2377              		.loc 1 1585 0
 2378 001c FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 87


 2379              	.LVL236:
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2380              		.loc 1 1587 0
 2381 0020 A46B     		ldr	r4, [r4, #56]
 2382              	.LVL237:
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2383              		.loc 1 1589 0
 2384 0022 FFF7FEFF 		bl	vPortExitCritical
 2385              	.LVL238:
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2386              		.loc 1 1592 0
 2387 0026 2046     		mov	r0, r4
 2388 0028 10BD     		pop	{r4, pc}
 2389              		.cfi_endproc
 2390              	.LFE16:
 2392              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2393              		.align	1
 2394              		.global	uxQueueSpacesAvailable
 2395              		.syntax unified
 2396              		.thumb
 2397              		.thumb_func
 2398              		.fpu fpv5-sp-d16
 2400              	uxQueueSpacesAvailable:
 2401              	.LFB17:
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2402              		.loc 1 1596 0
 2403              		.cfi_startproc
 2404              		@ args = 0, pretend = 0, frame = 0
 2405              		@ frame_needed = 0, uses_anonymous_args = 0
 2406              	.LVL239:
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2407              		.loc 1 1601 0
 2408 0000 50B9     		cbnz	r0, .L223
 2409              	.LBB152:
 2410              	.LBB153:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2411              		.loc 2 237 0
 2412              		.syntax unified
 2413              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2414 0002 4FF05003 			mov r3, #80												
 2415 0006 72B6     		cpsid i													
 2416 0008 83F31188 		msr basepri, r3											
 2417 000c BFF36F8F 		isb														
 2418 0010 BFF34F8F 		dsb														
 2419 0014 62B6     		cpsie i													
 2420              	
 2421              	@ 0 "" 2
 2422              	.LVL240:
 2423              		.thumb
 2424              		.syntax unified
 2425              	.L224:
 2426 0016 FEE7     		b	.L224
 2427              	.L223:
 2428              	.LBE153:
 2429              	.LBE152:
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2430              		.loc 1 1596 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 88


 2431 0018 10B5     		push	{r4, lr}
 2432              	.LCFI29:
 2433              		.cfi_def_cfa_offset 8
 2434              		.cfi_offset 4, -8
 2435              		.cfi_offset 14, -4
 2436 001a 0446     		mov	r4, r0
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2437              		.loc 1 1603 0
 2438 001c FFF7FEFF 		bl	vPortEnterCritical
 2439              	.LVL241:
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2440              		.loc 1 1605 0
 2441 0020 E36B     		ldr	r3, [r4, #60]
 2442 0022 A46B     		ldr	r4, [r4, #56]
 2443              	.LVL242:
 2444 0024 1C1B     		subs	r4, r3, r4
 2445              	.LVL243:
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2446              		.loc 1 1607 0
 2447 0026 FFF7FEFF 		bl	vPortExitCritical
 2448              	.LVL244:
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2449              		.loc 1 1610 0
 2450 002a 2046     		mov	r0, r4
 2451 002c 10BD     		pop	{r4, pc}
 2452              		.cfi_endproc
 2453              	.LFE17:
 2455              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2456              		.align	1
 2457              		.global	uxQueueMessagesWaitingFromISR
 2458              		.syntax unified
 2459              		.thumb
 2460              		.thumb_func
 2461              		.fpu fpv5-sp-d16
 2463              	uxQueueMessagesWaitingFromISR:
 2464              	.LFB18:
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2465              		.loc 1 1614 0
 2466              		.cfi_startproc
 2467              		@ args = 0, pretend = 0, frame = 0
 2468              		@ frame_needed = 0, uses_anonymous_args = 0
 2469              		@ link register save eliminated.
 2470              	.LVL245:
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2471              		.loc 1 1617 0
 2472 0000 08B1     		cbz	r0, .L230
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2473              		.loc 1 1619 0
 2474 0002 806B     		ldr	r0, [r0, #56]
 2475              	.LVL246:
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2476              		.loc 1 1622 0
 2477 0004 7047     		bx	lr
 2478              	.LVL247:
 2479              	.L230:
 2480              	.LBB154:
 2481              	.LBB155:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 89


 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2482              		.loc 2 237 0
 2483              		.syntax unified
 2484              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2485 0006 4FF05003 			mov r3, #80												
 2486 000a 72B6     		cpsid i													
 2487 000c 83F31188 		msr basepri, r3											
 2488 0010 BFF36F8F 		isb														
 2489 0014 BFF34F8F 		dsb														
 2490 0018 62B6     		cpsie i													
 2491              	
 2492              	@ 0 "" 2
 2493              	.LVL248:
 2494              		.thumb
 2495              		.syntax unified
 2496              	.L229:
 2497 001a FEE7     		b	.L229
 2498              	.LBE155:
 2499              	.LBE154:
 2500              		.cfi_endproc
 2501              	.LFE18:
 2503              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2504              		.align	1
 2505              		.global	xQueueIsQueueEmptyFromISR
 2506              		.syntax unified
 2507              		.thumb
 2508              		.thumb_func
 2509              		.fpu fpv5-sp-d16
 2511              	xQueueIsQueueEmptyFromISR:
 2512              	.LFB24:
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2513              		.loc 1 1936 0
 2514              		.cfi_startproc
 2515              		@ args = 0, pretend = 0, frame = 0
 2516              		@ frame_needed = 0, uses_anonymous_args = 0
 2517              		@ link register save eliminated.
 2518              	.LVL249:
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 2519              		.loc 1 1939 0
 2520 0000 18B1     		cbz	r0, .L236
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2521              		.loc 1 1940 0
 2522 0002 836B     		ldr	r3, [r0, #56]
 2523 0004 63B1     		cbz	r3, .L237
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2524              		.loc 1 1946 0
 2525 0006 0020     		movs	r0, #0
 2526              	.LVL250:
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2527              		.loc 1 1950 0
 2528 0008 7047     		bx	lr
 2529              	.LVL251:
 2530              	.L236:
 2531              	.LBB156:
 2532              	.LBB157:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2533              		.loc 2 237 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 90


 2534              		.syntax unified
 2535              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2536 000a 4FF05003 			mov r3, #80												
 2537 000e 72B6     		cpsid i													
 2538 0010 83F31188 		msr basepri, r3											
 2539 0014 BFF36F8F 		isb														
 2540 0018 BFF34F8F 		dsb														
 2541 001c 62B6     		cpsie i													
 2542              	
 2543              	@ 0 "" 2
 2544              	.LVL252:
 2545              		.thumb
 2546              		.syntax unified
 2547              	.L233:
 2548 001e FEE7     		b	.L233
 2549              	.L237:
 2550              	.LBE157:
 2551              	.LBE156:
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2552              		.loc 1 1942 0
 2553 0020 0120     		movs	r0, #1
 2554              	.LVL253:
 2555 0022 7047     		bx	lr
 2556              		.cfi_endproc
 2557              	.LFE24:
 2559              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2560              		.align	1
 2561              		.global	xQueueIsQueueFullFromISR
 2562              		.syntax unified
 2563              		.thumb
 2564              		.thumb_func
 2565              		.fpu fpv5-sp-d16
 2567              	xQueueIsQueueFullFromISR:
 2568              	.LFB26:
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2569              		.loc 1 1975 0
 2570              		.cfi_startproc
 2571              		@ args = 0, pretend = 0, frame = 0
 2572              		@ frame_needed = 0, uses_anonymous_args = 0
 2573              		@ link register save eliminated.
 2574              	.LVL254:
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 2575              		.loc 1 1978 0
 2576 0000 28B1     		cbz	r0, .L243
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 2577              		.loc 1 1979 0
 2578 0002 826B     		ldr	r2, [r0, #56]
 2579 0004 C36B     		ldr	r3, [r0, #60]
 2580 0006 9A42     		cmp	r2, r3
 2581 0008 0CD0     		beq	.L244
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 91


1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 2582              		.loc 1 1985 0
 2583 000a 0020     		movs	r0, #0
 2584              	.LVL255:
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2585              		.loc 1 1989 0
 2586 000c 7047     		bx	lr
 2587              	.LVL256:
 2588              	.L243:
 2589              	.LBB158:
 2590              	.LBB159:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2591              		.loc 2 237 0
 2592              		.syntax unified
 2593              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2594 000e 4FF05003 			mov r3, #80												
 2595 0012 72B6     		cpsid i													
 2596 0014 83F31188 		msr basepri, r3											
 2597 0018 BFF36F8F 		isb														
 2598 001c BFF34F8F 		dsb														
 2599 0020 62B6     		cpsie i													
 2600              	
 2601              	@ 0 "" 2
 2602              	.LVL257:
 2603              		.thumb
 2604              		.syntax unified
 2605              	.L240:
 2606 0022 FEE7     		b	.L240
 2607              	.L244:
 2608              	.LBE159:
 2609              	.LBE158:
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2610              		.loc 1 1981 0
 2611 0024 0120     		movs	r0, #1
 2612              	.LVL258:
 2613 0026 7047     		bx	lr
 2614              		.cfi_endproc
 2615              	.LFE26:
 2617              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2618              		.align	1
 2619              		.global	vQueueAddToRegistry
 2620              		.syntax unified
 2621              		.thumb
 2622              		.thumb_func
 2623              		.fpu fpv5-sp-d16
 2625              	vQueueAddToRegistry:
 2626              	.LFB27:
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 92


1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 93


2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 94


2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 95


2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 96


2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2627              		.loc 1 2270 0
 2628              		.cfi_startproc
 2629              		@ args = 0, pretend = 0, frame = 0
 2630              		@ frame_needed = 0, uses_anonymous_args = 0
 2631              		@ link register save eliminated.
 2632              	.LVL259:
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 97


2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2633              		.loc 1 2275 0
 2634 0000 0023     		movs	r3, #0
 2635              	.LVL260:
 2636              	.L246:
 2637              		.loc 1 2275 0 is_stmt 0 discriminator 1
 2638 0002 072B     		cmp	r3, #7
 2639 0004 0CD8     		bhi	.L250
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2640              		.loc 1 2277 0 is_stmt 1
 2641 0006 074A     		ldr	r2, .L252
 2642 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
 2643 000c 0AB1     		cbz	r2, .L251
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2644              		.loc 1 2275 0 discriminator 2
 2645 000e 0133     		adds	r3, r3, #1
 2646              	.LVL261:
 2647 0010 F7E7     		b	.L246
 2648              	.L251:
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2649              		.loc 1 2280 0
 2650 0012 044A     		ldr	r2, .L252
 2651 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2652              		.loc 1 2281 0
 2653 0018 02EBC303 		add	r3, r2, r3, lsl #3
 2654              	.LVL262:
 2655 001c 5860     		str	r0, [r3, #4]
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 2656              		.loc 1 2284 0
 2657 001e 7047     		bx	lr
 2658              	.LVL263:
 2659              	.L250:
 2660 0020 7047     		bx	lr
 2661              	.L253:
 2662 0022 00BF     		.align	2
 2663              	.L252:
 2664 0024 00000000 		.word	xQueueRegistry
 2665              		.cfi_endproc
 2666              	.LFE27:
 2668              		.section	.text.pcQueueGetName,"ax",%progbits
 2669              		.align	1
 2670              		.global	pcQueueGetName
 2671              		.syntax unified
 2672              		.thumb
 2673              		.thumb_func
 2674              		.fpu fpv5-sp-d16
 2676              	pcQueueGetName:
 2677              	.LFB28:
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 98


2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2678              		.loc 1 2299 0
 2679              		.cfi_startproc
 2680              		@ args = 0, pretend = 0, frame = 0
 2681              		@ frame_needed = 0, uses_anonymous_args = 0
 2682              		@ link register save eliminated.
 2683              	.LVL264:
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2684              		.loc 1 2305 0
 2685 0000 0023     		movs	r3, #0
 2686              	.LVL265:
 2687              	.L255:
 2688              		.loc 1 2305 0 is_stmt 0 discriminator 1
 2689 0002 072B     		cmp	r3, #7
 2690 0004 0BD8     		bhi	.L259
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2691              		.loc 1 2307 0 is_stmt 1
 2692 0006 074A     		ldr	r2, .L261
 2693 0008 02EBC302 		add	r2, r2, r3, lsl #3
 2694 000c 5268     		ldr	r2, [r2, #4]
 2695 000e 8242     		cmp	r2, r0
 2696 0010 01D0     		beq	.L260
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2697              		.loc 1 2305 0 discriminator 2
 2698 0012 0133     		adds	r3, r3, #1
 2699              	.LVL266:
 2700 0014 F5E7     		b	.L255
 2701              	.L260:
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 2702              		.loc 1 2309 0
 2703 0016 034A     		ldr	r2, .L261
 2704 0018 52F83300 		ldr	r0, [r2, r3, lsl #3]
 2705              	.LVL267:
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 2706              		.loc 1 2310 0
 2707 001c 7047     		bx	lr
 2708              	.LVL268:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 99


 2709              	.L259:
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2710              		.loc 1 2301 0
 2711 001e 0020     		movs	r0, #0
 2712              	.LVL269:
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2713              		.loc 1 2319 0
 2714 0020 7047     		bx	lr
 2715              	.L262:
 2716 0022 00BF     		.align	2
 2717              	.L261:
 2718 0024 00000000 		.word	xQueueRegistry
 2719              		.cfi_endproc
 2720              	.LFE28:
 2722              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2723              		.align	1
 2724              		.global	vQueueUnregisterQueue
 2725              		.syntax unified
 2726              		.thumb
 2727              		.thumb_func
 2728              		.fpu fpv5-sp-d16
 2730              	vQueueUnregisterQueue:
 2731              	.LFB29:
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2732              		.loc 1 2327 0
 2733              		.cfi_startproc
 2734              		@ args = 0, pretend = 0, frame = 0
 2735              		@ frame_needed = 0, uses_anonymous_args = 0
 2736              		@ link register save eliminated.
 2737              	.LVL270:
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2738              		.loc 1 2332 0
 2739 0000 0023     		movs	r3, #0
 2740              	.LVL271:
 2741              	.L264:
 2742              		.loc 1 2332 0 is_stmt 0 discriminator 1
 2743 0002 072B     		cmp	r3, #7
 2744 0004 0FD8     		bhi	.L268
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 100


2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2745              		.loc 1 2334 0 is_stmt 1
 2746 0006 084A     		ldr	r2, .L270
 2747 0008 02EBC302 		add	r2, r2, r3, lsl #3
 2748 000c 5268     		ldr	r2, [r2, #4]
 2749 000e 8242     		cmp	r2, r0
 2750 0010 01D0     		beq	.L269
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2751              		.loc 1 2332 0 discriminator 2
 2752 0012 0133     		adds	r3, r3, #1
 2753              	.LVL272:
 2754 0014 F5E7     		b	.L264
 2755              	.L269:
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 2756              		.loc 1 2337 0
 2757 0016 044A     		ldr	r2, .L270
 2758 0018 0021     		movs	r1, #0
 2759 001a 42F83310 		str	r1, [r2, r3, lsl #3]
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 2760              		.loc 1 2342 0
 2761 001e 02EBC303 		add	r3, r2, r3, lsl #3
 2762              	.LVL273:
 2763 0022 5960     		str	r1, [r3, #4]
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 2764              		.loc 1 2343 0
 2765 0024 7047     		bx	lr
 2766              	.LVL274:
 2767              	.L268:
 2768 0026 7047     		bx	lr
 2769              	.L271:
 2770              		.align	2
 2771              	.L270:
 2772 0028 00000000 		.word	xQueueRegistry
 2773              		.cfi_endproc
 2774              	.LFE29:
 2776              		.section	.text.vQueueDelete,"ax",%progbits
 2777              		.align	1
 2778              		.global	vQueueDelete
 2779              		.syntax unified
 2780              		.thumb
 2781              		.thumb_func
 2782              		.fpu fpv5-sp-d16
 2784              	vQueueDelete:
 2785              	.LFB19:
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2786              		.loc 1 1626 0
 2787              		.cfi_startproc
 2788              		@ args = 0, pretend = 0, frame = 0
 2789              		@ frame_needed = 0, uses_anonymous_args = 0
 2790              	.LVL275:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 101


1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 2791              		.loc 1 1629 0
 2792 0000 50B9     		cbnz	r0, .L273
 2793              	.LBB160:
 2794              	.LBB161:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 2795              		.loc 2 237 0
 2796              		.syntax unified
 2797              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 2798 0002 4FF05003 			mov r3, #80												
 2799 0006 72B6     		cpsid i													
 2800 0008 83F31188 		msr basepri, r3											
 2801 000c BFF36F8F 		isb														
 2802 0010 BFF34F8F 		dsb														
 2803 0014 62B6     		cpsie i													
 2804              	
 2805              	@ 0 "" 2
 2806              	.LVL276:
 2807              		.thumb
 2808              		.syntax unified
 2809              	.L274:
 2810 0016 FEE7     		b	.L274
 2811              	.L273:
 2812              	.LBE161:
 2813              	.LBE160:
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2814              		.loc 1 1626 0
 2815 0018 10B5     		push	{r4, lr}
 2816              	.LCFI30:
 2817              		.cfi_def_cfa_offset 8
 2818              		.cfi_offset 4, -8
 2819              		.cfi_offset 14, -4
 2820 001a 0446     		mov	r4, r0
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2821              		.loc 1 1634 0
 2822 001c FFF7FEFF 		bl	vQueueUnregisterQueue
 2823              	.LVL277:
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2824              		.loc 1 1642 0
 2825 0020 2046     		mov	r0, r4
 2826 0022 FFF7FEFF 		bl	vPortFree
 2827              	.LVL278:
 2828 0026 10BD     		pop	{r4, pc}
 2829              		.cfi_endproc
 2830              	.LFE19:
 2832              		.comm	xQueueRegistry,64,4
 2833              		.text
 2834              	.Letext0:
 2835              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 2836              		.file 4 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 2837              		.file 5 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 2838              		.file 6 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 2839              		.file 7 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 2840              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 2841              		.file 9 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 2842              		.file 10 "Inc/FreeRTOSConfig.h"
 2843              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 102


 2844              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 2845              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 2846              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 103


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:18     .text.prvIsQueueFull:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:24     .text.prvIsQueueFull:00000000 prvIsQueueFull
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:66     .text.prvIsQueueEmpty:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:72     .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:111    .text.prvCopyDataToQueue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:117    .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:236    .text.prvCopyDataFromQueue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:242    .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:290    .text.prvUnlockQueue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:296    .text.prvUnlockQueue:00000000 prvUnlockQueue
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:399    .text.xQueueGenericReset:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:406    .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:516    .text.xQueueGenericReset:00000080 $d
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:521    .text.prvInitialiseNewQueue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:527    .text.prvInitialiseNewQueue:00000000 prvInitialiseNewQueue
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:568    .text.xQueueGenericCreate:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:575    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:664    .text.xQueueGenericSend:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:671    .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1018   .text.xQueueGenericSend:00000194 $d
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1023   .text.prvInitialiseMutex:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1029   .text.prvInitialiseMutex:00000000 prvInitialiseMutex
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1068   .text.xQueueCreateMutex:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1075   .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1107   .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1114   .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1344   .text.xQueueGiveFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1351   .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1575   .text.xQueueGenericReceive:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1582   .text.xQueueGenericReceive:00000000 xQueueGenericReceive
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1959   .text.xQueueGenericReceive:000001b8 $d
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1964   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:1971   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2162   .text.xQueuePeekFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2169   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2333   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2340   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2393   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2400   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2456   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2463   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2504   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2511   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2560   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2567   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2618   .text.vQueueAddToRegistry:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2625   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2664   .text.vQueueAddToRegistry:00000024 $d
                            *COM*:00000040 xQueueRegistry
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2669   .text.pcQueueGetName:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2676   .text.pcQueueGetName:00000000 pcQueueGetName
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2718   .text.pcQueueGetName:00000024 $d
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2723   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2730   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2772   .text.vQueueUnregisterQueue:00000028 $d
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s 			page 104


C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2777   .text.vQueueDelete:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccy3C4iz.s:2784   .text.vQueueDelete:00000000 vQueueDelete
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
xTaskResumeAll
vTaskSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
vTaskPriorityInherit
vPortFree
