ARM GAS  C:\Users\Student\AppData\Local\Temp\ccKVvU86.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	NMI_Handler:
  26              	.LFB141:
  27              		.file 1 "Src/stm32f7xx_it.c"
   1:Src/stm32f7xx_it.c **** /**
   2:Src/stm32f7xx_it.c ****   ******************************************************************************
   3:Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   4:Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f7xx_it.c ****   ******************************************************************************
   6:Src/stm32f7xx_it.c ****   *
   7:Src/stm32f7xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f7xx_it.c ****   *
   9:Src/stm32f7xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f7xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f7xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f7xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f7xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f7xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f7xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f7xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f7xx_it.c ****   *
  20:Src/stm32f7xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f7xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f7xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f7xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f7xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f7xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f7xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f7xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f7xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f7xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f7xx_it.c ****   *
  31:Src/stm32f7xx_it.c ****   ******************************************************************************
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccKVvU86.s 			page 2


  32:Src/stm32f7xx_it.c ****   */
  33:Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f7xx_it.c **** #include "stm32f7xx_hal.h"
  35:Src/stm32f7xx_it.c **** #include "stm32f7xx.h"
  36:Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  37:Src/stm32f7xx_it.c **** #include "cmsis_os.h"
  38:Src/stm32f7xx_it.c **** 
  39:Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  40:Src/stm32f7xx_it.c **** 
  41:Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  42:Src/stm32f7xx_it.c **** 
  43:Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  44:Src/stm32f7xx_it.c **** extern HCD_HandleTypeDef hhcd_USB_OTG_FS;
  45:Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  46:Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_usart6_rx;
  47:Src/stm32f7xx_it.c **** extern UART_HandleTypeDef huart1;
  48:Src/stm32f7xx_it.c **** extern UART_HandleTypeDef huart6;
  49:Src/stm32f7xx_it.c **** 
  50:Src/stm32f7xx_it.c **** extern TIM_HandleTypeDef htim7;
  51:Src/stm32f7xx_it.c **** 
  52:Src/stm32f7xx_it.c **** /******************************************************************************/
  53:Src/stm32f7xx_it.c **** /*            Cortex-M7 Processor Interruption and Exception Handlers         */ 
  54:Src/stm32f7xx_it.c **** /******************************************************************************/
  55:Src/stm32f7xx_it.c **** 
  56:Src/stm32f7xx_it.c **** /**
  57:Src/stm32f7xx_it.c **** * @brief This function handles Non maskable interrupt.
  58:Src/stm32f7xx_it.c **** */
  59:Src/stm32f7xx_it.c **** void NMI_Handler(void)
  60:Src/stm32f7xx_it.c **** {
  28              		.loc 1 60 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE141:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv5-sp-d16
  45              	HardFault_Handler:
  46              	.LFB142:
  61:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  62:Src/stm32f7xx_it.c **** 
  63:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  64:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  65:Src/stm32f7xx_it.c **** 
  66:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  67:Src/stm32f7xx_it.c **** }
  68:Src/stm32f7xx_it.c **** 
  69:Src/stm32f7xx_it.c **** /**
  70:Src/stm32f7xx_it.c **** * @brief This function handles Hard fault interrupt.
  71:Src/stm32f7xx_it.c **** */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccKVvU86.s 			page 3


  72:Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  73:Src/stm32f7xx_it.c **** {
  47              		.loc 1 73 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE142:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv5-sp-d16
  66              	MemManage_Handler:
  67              	.LFB143:
  74:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  75:Src/stm32f7xx_it.c **** 
  76:Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  77:Src/stm32f7xx_it.c ****   while (1)
  78:Src/stm32f7xx_it.c ****   {
  79:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  80:Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  81:Src/stm32f7xx_it.c ****   }
  82:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  83:Src/stm32f7xx_it.c **** 
  84:Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  85:Src/stm32f7xx_it.c **** }
  86:Src/stm32f7xx_it.c **** 
  87:Src/stm32f7xx_it.c **** /**
  88:Src/stm32f7xx_it.c **** * @brief This function handles Memory management fault.
  89:Src/stm32f7xx_it.c **** */
  90:Src/stm32f7xx_it.c **** void MemManage_Handler(void)
  91:Src/stm32f7xx_it.c **** {
  68              		.loc 1 91 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE143:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv5-sp-d16
  87              	BusFault_Handler:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccKVvU86.s 			page 4


  88              	.LFB144:
  92:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  93:Src/stm32f7xx_it.c **** 
  94:Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  95:Src/stm32f7xx_it.c ****   while (1)
  96:Src/stm32f7xx_it.c ****   {
  97:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  98:Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  99:Src/stm32f7xx_it.c ****   }
 100:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
 101:Src/stm32f7xx_it.c **** 
 102:Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
 103:Src/stm32f7xx_it.c **** }
 104:Src/stm32f7xx_it.c **** 
 105:Src/stm32f7xx_it.c **** /**
 106:Src/stm32f7xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
 107:Src/stm32f7xx_it.c **** */
 108:Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 109:Src/stm32f7xx_it.c **** {
  89              		.loc 1 109 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE144:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv5-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB145:
 110:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 111:Src/stm32f7xx_it.c **** 
 112:Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 113:Src/stm32f7xx_it.c ****   while (1)
 114:Src/stm32f7xx_it.c ****   {
 115:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 116:Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 117:Src/stm32f7xx_it.c ****   }
 118:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 119:Src/stm32f7xx_it.c **** 
 120:Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 121:Src/stm32f7xx_it.c **** }
 122:Src/stm32f7xx_it.c **** 
 123:Src/stm32f7xx_it.c **** /**
 124:Src/stm32f7xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 125:Src/stm32f7xx_it.c **** */
 126:Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 127:Src/stm32f7xx_it.c **** {
 110              		.loc 1 127 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccKVvU86.s 			page 5


 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE145:
 121              		.section	.text.DebugMon_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	DebugMon_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv5-sp-d16
 129              	DebugMon_Handler:
 130              	.LFB146:
 128:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 129:Src/stm32f7xx_it.c **** 
 130:Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 131:Src/stm32f7xx_it.c ****   while (1)
 132:Src/stm32f7xx_it.c ****   {
 133:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 134:Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 135:Src/stm32f7xx_it.c ****   }
 136:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 137:Src/stm32f7xx_it.c **** 
 138:Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 139:Src/stm32f7xx_it.c **** }
 140:Src/stm32f7xx_it.c **** 
 141:Src/stm32f7xx_it.c **** /**
 142:Src/stm32f7xx_it.c **** * @brief This function handles Debug monitor.
 143:Src/stm32f7xx_it.c **** */
 144:Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 145:Src/stm32f7xx_it.c **** {
 131              		.loc 1 145 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE146:
 140              		.section	.text.SysTick_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	SysTick_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv5-sp-d16
 148              	SysTick_Handler:
 149              	.LFB147:
 146:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 147:Src/stm32f7xx_it.c **** 
 148:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 149:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccKVvU86.s 			page 6


 150:Src/stm32f7xx_it.c **** 
 151:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 152:Src/stm32f7xx_it.c **** }
 153:Src/stm32f7xx_it.c **** 
 154:Src/stm32f7xx_it.c **** 
 155:Src/stm32f7xx_it.c **** /**
 156:Src/stm32f7xx_it.c **** * @brief This function handles System tick timer.
 157:Src/stm32f7xx_it.c **** */
 158:Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 159:Src/stm32f7xx_it.c **** {
 150              		.loc 1 159 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		.loc 1 159 0
 155 0000 08B5     		push	{r3, lr}
 156              	.LCFI0:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 3, -8
 159              		.cfi_offset 14, -4
 160:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 161:Src/stm32f7xx_it.c **** 
 162:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 163:Src/stm32f7xx_it.c ****   osSystickHandler();
 160              		.loc 1 163 0
 161 0002 FFF7FEFF 		bl	osSystickHandler
 162              	.LVL0:
 163 0006 08BD     		pop	{r3, pc}
 164              		.cfi_endproc
 165              	.LFE147:
 167              		.section	.text.USART1_IRQHandler,"ax",%progbits
 168              		.align	1
 169              		.global	USART1_IRQHandler
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-sp-d16
 175              	USART1_IRQHandler:
 176              	.LFB148:
 164:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 165:Src/stm32f7xx_it.c **** 
 166:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 167:Src/stm32f7xx_it.c **** }
 168:Src/stm32f7xx_it.c **** 
 169:Src/stm32f7xx_it.c **** /******************************************************************************/
 170:Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 171:Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 172:Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 173:Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 174:Src/stm32f7xx_it.c **** /******************************************************************************/
 175:Src/stm32f7xx_it.c **** 
 176:Src/stm32f7xx_it.c **** /**
 177:Src/stm32f7xx_it.c **** * @brief This function handles USART1 global interrupt.
 178:Src/stm32f7xx_it.c **** */
 179:Src/stm32f7xx_it.c **** 
 180:Src/stm32f7xx_it.c **** void USART1_IRQHandler(void)
 181:Src/stm32f7xx_it.c **** {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccKVvU86.s 			page 7


 177              		.loc 1 181 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 08B5     		push	{r3, lr}
 182              	.LCFI1:
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 3, -8
 185              		.cfi_offset 14, -4
 182:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 183:Src/stm32f7xx_it.c ****   
 184:Src/stm32f7xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 185:Src/stm32f7xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 186              		.loc 1 185 0
 187 0002 0248     		ldr	r0, .L15
 188 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 189              	.LVL1:
 190 0008 08BD     		pop	{r3, pc}
 191              	.L16:
 192 000a 00BF     		.align	2
 193              	.L15:
 194 000c 00000000 		.word	huart1
 195              		.cfi_endproc
 196              	.LFE148:
 198              		.section	.text.TIM7_IRQHandler,"ax",%progbits
 199              		.align	1
 200              		.global	TIM7_IRQHandler
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv5-sp-d16
 206              	TIM7_IRQHandler:
 207              	.LFB149:
 186:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 187:Src/stm32f7xx_it.c **** 
 188:Src/stm32f7xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 189:Src/stm32f7xx_it.c **** }
 190:Src/stm32f7xx_it.c **** 
 191:Src/stm32f7xx_it.c **** 
 192:Src/stm32f7xx_it.c **** /**
 193:Src/stm32f7xx_it.c **** * @brief This function handles TIM7 global interrupt.
 194:Src/stm32f7xx_it.c **** */
 195:Src/stm32f7xx_it.c **** void TIM7_IRQHandler(void)
 196:Src/stm32f7xx_it.c **** {
 208              		.loc 1 196 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI2:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 197:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 0 */
 198:Src/stm32f7xx_it.c **** 
 199:Src/stm32f7xx_it.c ****   /* USER CODE END TIM7_IRQn 0 */
 200:Src/stm32f7xx_it.c ****   HAL_TIM_IRQHandler(&htim7);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccKVvU86.s 			page 8


 217              		.loc 1 200 0
 218 0002 0248     		ldr	r0, .L19
 219 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 220              	.LVL2:
 221 0008 08BD     		pop	{r3, pc}
 222              	.L20:
 223 000a 00BF     		.align	2
 224              	.L19:
 225 000c 00000000 		.word	htim7
 226              		.cfi_endproc
 227              	.LFE149:
 229              		.section	.text.DMA2_Stream1_IRQHandler,"ax",%progbits
 230              		.align	1
 231              		.global	DMA2_Stream1_IRQHandler
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv5-sp-d16
 237              	DMA2_Stream1_IRQHandler:
 238              	.LFB150:
 201:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 1 */
 202:Src/stm32f7xx_it.c **** 
 203:Src/stm32f7xx_it.c ****   /* USER CODE END TIM7_IRQn 1 */
 204:Src/stm32f7xx_it.c **** }
 205:Src/stm32f7xx_it.c **** 
 206:Src/stm32f7xx_it.c **** /**
 207:Src/stm32f7xx_it.c **** * @brief This function handles DMA2 stream1 global interrupt.
 208:Src/stm32f7xx_it.c **** */
 209:Src/stm32f7xx_it.c **** void DMA2_Stream1_IRQHandler(void)
 210:Src/stm32f7xx_it.c **** {
 239              		.loc 1 210 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 08B5     		push	{r3, lr}
 244              	.LCFI3:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
 211:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */
 212:Src/stm32f7xx_it.c **** 
 213:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 0 */
 214:Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart6_rx);
 248              		.loc 1 214 0
 249 0002 0248     		ldr	r0, .L23
 250 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 251              	.LVL3:
 252 0008 08BD     		pop	{r3, pc}
 253              	.L24:
 254 000a 00BF     		.align	2
 255              	.L23:
 256 000c 00000000 		.word	hdma_usart6_rx
 257              		.cfi_endproc
 258              	.LFE150:
 260              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 261              		.align	1
 262              		.global	DMA2_Stream2_IRQHandler
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccKVvU86.s 			page 9


 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu fpv5-sp-d16
 268              	DMA2_Stream2_IRQHandler:
 269              	.LFB151:
 215:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 1 */
 216:Src/stm32f7xx_it.c **** 
 217:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 1 */
 218:Src/stm32f7xx_it.c **** }
 219:Src/stm32f7xx_it.c **** 
 220:Src/stm32f7xx_it.c **** /**
 221:Src/stm32f7xx_it.c **** * @brief This function handles DMA2 stream2 global interrupt.
 222:Src/stm32f7xx_it.c **** */
 223:Src/stm32f7xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 224:Src/stm32f7xx_it.c **** {
 270              		.loc 1 224 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 08B5     		push	{r3, lr}
 275              	.LCFI4:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 3, -8
 278              		.cfi_offset 14, -4
 225:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 226:Src/stm32f7xx_it.c **** //printf("DMA IRQ! it really works! status=%08X\n",status);
 227:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 228:Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 279              		.loc 1 228 0
 280 0002 0248     		ldr	r0, .L27
 281 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 282              	.LVL4:
 283 0008 08BD     		pop	{r3, pc}
 284              	.L28:
 285 000a 00BF     		.align	2
 286              	.L27:
 287 000c 00000000 		.word	hdma_usart1_rx
 288              		.cfi_endproc
 289              	.LFE151:
 291              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
 292              		.align	1
 293              		.global	OTG_FS_IRQHandler
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 297              		.fpu fpv5-sp-d16
 299              	OTG_FS_IRQHandler:
 300              	.LFB152:
 229:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 230:Src/stm32f7xx_it.c **** 
 231:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 232:Src/stm32f7xx_it.c **** }
 233:Src/stm32f7xx_it.c **** 
 234:Src/stm32f7xx_it.c **** 
 235:Src/stm32f7xx_it.c **** 
 236:Src/stm32f7xx_it.c **** /**
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccKVvU86.s 			page 10


 237:Src/stm32f7xx_it.c **** * @brief This function handles USB On The Go FS global interrupt.
 238:Src/stm32f7xx_it.c **** */
 239:Src/stm32f7xx_it.c **** void OTG_FS_IRQHandler(void)
 240:Src/stm32f7xx_it.c **** {
 301              		.loc 1 240 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 0000 08B5     		push	{r3, lr}
 306              	.LCFI5:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 3, -8
 309              		.cfi_offset 14, -4
 241:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 0 */
 242:Src/stm32f7xx_it.c **** 
 243:Src/stm32f7xx_it.c ****   /* USER CODE END OTG_FS_IRQn 0 */
 244:Src/stm32f7xx_it.c ****   HAL_HCD_IRQHandler(&hhcd_USB_OTG_FS);
 310              		.loc 1 244 0
 311 0002 0248     		ldr	r0, .L31
 312 0004 FFF7FEFF 		bl	HAL_HCD_IRQHandler
 313              	.LVL5:
 314 0008 08BD     		pop	{r3, pc}
 315              	.L32:
 316 000a 00BF     		.align	2
 317              	.L31:
 318 000c 00000000 		.word	hhcd_USB_OTG_FS
 319              		.cfi_endproc
 320              	.LFE152:
 322              		.section	.text.USART6_IRQHandler,"ax",%progbits
 323              		.align	1
 324              		.global	USART6_IRQHandler
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 328              		.fpu fpv5-sp-d16
 330              	USART6_IRQHandler:
 331              	.LFB153:
 245:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 1 */
 246:Src/stm32f7xx_it.c **** 
 247:Src/stm32f7xx_it.c ****   /* USER CODE END OTG_FS_IRQn 1 */
 248:Src/stm32f7xx_it.c **** }
 249:Src/stm32f7xx_it.c **** 
 250:Src/stm32f7xx_it.c **** /**
 251:Src/stm32f7xx_it.c **** * @brief This function handles USART6 global interrupt.
 252:Src/stm32f7xx_it.c **** */
 253:Src/stm32f7xx_it.c **** void USART6_IRQHandler(void)
 254:Src/stm32f7xx_it.c **** {
 332              		.loc 1 254 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336 0000 08B5     		push	{r3, lr}
 337              	.LCFI6:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 255:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 0 */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccKVvU86.s 			page 11


 256:Src/stm32f7xx_it.c **** 
 257:Src/stm32f7xx_it.c ****   /* USER CODE END USART6_IRQn 0 */
 258:Src/stm32f7xx_it.c ****   HAL_UART_IRQHandler(&huart6);
 341              		.loc 1 258 0
 342 0002 0248     		ldr	r0, .L35
 343 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 344              	.LVL6:
 345 0008 08BD     		pop	{r3, pc}
 346              	.L36:
 347 000a 00BF     		.align	2
 348              	.L35:
 349 000c 00000000 		.word	huart6
 350              		.cfi_endproc
 351              	.LFE153:
 353              		.text
 354              	.Letext0:
 355              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 356              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 357              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 358              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 359              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 360              		.file 7 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 361              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 362              		.file 9 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 363              		.file 10 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 364              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 365              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 366              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 367              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 368              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_usb.h"
 369              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_hcd.h"
 370              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccKVvU86.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_it.c
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:18     .text.NMI_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:38     .text.HardFault_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:59     .text.MemManage_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:66     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:80     .text.BusFault_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:87     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:101    .text.UsageFault_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:108    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:122    .text.DebugMon_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:129    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:141    .text.SysTick_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:148    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:168    .text.USART1_IRQHandler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:175    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:194    .text.USART1_IRQHandler:0000000c $d
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:199    .text.TIM7_IRQHandler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:206    .text.TIM7_IRQHandler:00000000 TIM7_IRQHandler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:225    .text.TIM7_IRQHandler:0000000c $d
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:230    .text.DMA2_Stream1_IRQHandler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:237    .text.DMA2_Stream1_IRQHandler:00000000 DMA2_Stream1_IRQHandler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:256    .text.DMA2_Stream1_IRQHandler:0000000c $d
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:261    .text.DMA2_Stream2_IRQHandler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:268    .text.DMA2_Stream2_IRQHandler:00000000 DMA2_Stream2_IRQHandler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:287    .text.DMA2_Stream2_IRQHandler:0000000c $d
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:292    .text.OTG_FS_IRQHandler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:299    .text.OTG_FS_IRQHandler:00000000 OTG_FS_IRQHandler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:318    .text.OTG_FS_IRQHandler:0000000c $d
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:323    .text.USART6_IRQHandler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:330    .text.USART6_IRQHandler:00000000 USART6_IRQHandler
C:\Users\Student\AppData\Local\Temp\ccKVvU86.s:349    .text.USART6_IRQHandler:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
osSystickHandler
HAL_UART_IRQHandler
huart1
HAL_TIM_IRQHandler
htim7
HAL_DMA_IRQHandler
hdma_usart6_rx
hdma_usart1_rx
HAL_HCD_IRQHandler
hhcd_USB_OTG_FS
huart6
